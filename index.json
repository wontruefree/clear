{"repository_name":"github.com/anykeyh/clear","body":"<p align=\"center\"><img src=\"design/logo1.png\" alt=\"clear\" height=\"200px\"></p>\n\n\n# Clear\n\n[![Build Status](https://travis-ci.org/anykeyh/clear.svg?branch=master)](https://travis-ci.org/anykeyh/clear) [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://anykeyh.github.io/clear/) [![GitHub release](https://img.shields.io/github/release/anykeyh/clear.svg)](https://github.com/anykeyh/clear/releases)\n\nClear is an ORM built specifically for PostgreSQL in Crystal.\n\nIt's probably the most advanced ORM for PG on Crystal in term of features offered.\nIt features Active Record pattern models, and low-level SQL builder.\n\nYou can deal out of the box with jsonb, tsvectors, cursors, CTE, bcrypt password,\narray, uuid primary key, foreign constraints... and other things !\nIt also has a powerful DSL to construct `where` and `having` clauses.\n\nThe philosophy beneath is to please me (and you !) with emphasis made on business\ncode readability and minimal setup.\n\nThe project is quite active and well maintened, too !\n\n## Resources\n\n- [Online Manual and Getting Started](https://clear.gitbook.io/project/)\n- [Auto-generated API Documentation](https://anykeyh.github.io/clear/)\n- [Changelog](https://github.com/anykeyh/clear/blob/master/CHANGELOG.md)\n- [Credits](https://github.com/anykeyh/clear/tree/master/CONTRIBUTORS.md)\n\n## Why to use Clear ?\n\nIn few seconds, you want to use Clear if:\n\n- [X] You want an expressive ORM. Put straight your thought to your code !\n- [X] You'd like to use advanced Postgres features without hassle\n- [X] You are at aware of the pro and cons of Active Records pattern\n\nYou don't want to use Clear if:\n\n- [ ] You're not willing to use on PostgreSQL\n- [ ] You look for a minimalist ORM / Data Mapper\n- [ ] You need something which doesn't evolve, with breaking changes.\n      Clear is still in alpha but starting to mature !\n\n\n## Features\n\n- Active Record pattern based ORM\n- Expressiveness as mantra - even with advanced features like jsonb, regexp... -\n```crystal\n  # Like ...\n  Product.query.where{ ( type == \"Book\" ) & ( metadata.jsonb(\"author.full_name\") == \"Philip K. Dick\" ) }\n  # ^--- will use @> operator, to relay on your gin index. For real.\n\n  Product.query.where{ ( products.type == \"Book\" ) & ( products.metadata.jsonb(\"author.full_name\") != \"Philip K. Dick\" ) }\n  # ^--- this time will use -> notation, because no optimizations possible :/\n\n  # Or...\n  User.query.where{ created_at.in? 5.days.ago .. 1.day.ago }\n\n  # Or even...\n  ORM.query.where{ ( description =~ /(^| )awesome($| )/i ) }.first!.name # Clear! :-)\n```\n- Proper debug information\n  - Log and colorize query. Show you the last query if your code crash !\n  - If failing on compile for a good reason, give proper explaination (or at least try)\n- Migration system\n- Validation system\n- N+1 query avoidance strategy\n- Transaction, rollback & savepoint\n- Access to CTE, locks, cursors, scope, pagination, join, window, multi-connection and many others features\n- Model lifecycle/hooks\n- JSONB, UUID, FullTextSearch\n\n### Installation\n\nIn `shards.yml`\n\n```yml\ndependencies:\n  clear:\n    github: anykeyh/clear\n    branch: master\n```\n\nThen:\n\n```crystal\n  require \"clear\"\n```\n\n### Model definition\n\nClear offers some mixins, just include them in your classes to *clear* them:\n\n#### Column mapping\n\n```crystal\n\nclass User\n  include Clear::Model\n\n  column id : Int64, primary: true\n\n  column email : String\n\n  column first_name : String?\n  column last_name : String?\n\n  column encrypted_password : Crypto::Bcrypt::Password\n\n  def password=(x)\n    self.encrypted_password = Crypto::Bcrypt::Password.create(password)\n  end\nend\n\n```\n\n#### Column types\n\n- `Number`, `String`, `Time`, `Boolean` and `Jsonb` structures are already mapped.\n- `Array` of primitives too.\nFor other type of data, just create your own converter !\n\n```crystal\nclass Clear::Model::Converter::MyClassConversion\n  def self.to_column(x) : MyClass?\n    case x\n    when String\n      MyClass.from_string(x)\n    when Slice(UInt8)\n      MyClass.from_slice(x)\n    else\n      raise \"Cannot convert from #{x.class} to MyClass\"\n    end\n  end\n\n  def self.to_db(x : UUID?)\n    x.to_s\n  end\nend\n\nClear::Model::Converter.add_converter(\"MyClass\", Clear::Model::Converter::MyClassConversion)\n```\n\n##### Column presence\n\nMost of the ORM for Crystal are mapping column type as `Type | Nil` union.\nIt makes sens so we allow selection of some columns only of a model.\nHowever, this have a caveats: columns are still accessible, and will return nil,\neven if the real value of the column is not null !\n\nMoreover, most of the developers will enforce nullity only on their programming\nlanguage level via validation, but not on the database, leading to inconsistency.\n\nTherefore, we choose to throw exception whenever a column is accessed before\nit has been initialized and to enforce presence through the union system of\nCrystal.\n\nClear offers this through the use of column wrapper.\nWrapper can be of the type of the column as in postgres, or in `UNKNOWN` state.\nThis approach offers more flexibility:\n\n```crystal\nUser.query.select(\"last_name\").each do |usr|\n  puts usr.first_name #Will raise an exception, as first_name hasn't been fetched.\nend\n\nu = User.new\nu.first_name_column.defined? #Return false\nu.first_name_column.value(\"\") # Call the value or empty string if not defined :-)\nu.first_name = \"bonjour\"\nu.first_name_column.defined? #Return true now !\n```\n\nWrapper give also some pretty useful features:\n\n```crystal\nu = User.new\nu.email = \"me@myaddress.com\"\nu.email_column.changed? # TRUE\nu.email_column.revert\nu.email_column.defined? # No more\n```\n\n#### Associations\n\nClear offers `has_many`, `has_one`, `belongs_to` and `has_many through` associations:\n\n```crystal\nclass Security::Action\n  belongs_to role : Role\nend\n\nclass Security::Role\n  has_many user : User\nend\n\nclass User\n  include Clear::Model\n\n  has_one user_info : UserInfo\n  has_many posts : Post\n\n  belongs_to role : Security::Role\n\n  # Use of the standard keys (users_id <=> security_role_id)\n  has_many actions : Security::Action, through: Security::Role\nend\n```\n\n### Querying\n\nClear offers a collection system for your models. The collection system\ntakes origin to the lower API `Clear::SQL`, used to build requests.\n\n#### Simple query\n\n##### Fetch a model\n\nTo fetch one model:\n\n```crystal\n# 1. Get the first user\nUser.query.first #Get the first user, ordered by primary key\n\n# Get a specific user\nUser.find!(1) #Get the first user, or throw exception if not found.\n\n# Usage of query provides a `find_by` kind of method:\nu : User? = User.query.find{ email =~ /yacine/i }\n```\n\n##### Fetch multiple models\n\nTo prepare a collection, juste use `Model#query`.\nCollections include `SQL::Select` object, so all the low level API\n(`where`, `join`, `group_by`, `lock`...) can be used in this context.\n\n```crystal\n# Get multiple users\nUser.query.where{ (id >= 100) & (id <= 200) }.each do |user|\n  # Do something with user !\nend\n\n#In case you know there's millions of row, use a cursor to avoid memory issues !\nUser.query.where{ (id >= 1) & (id <= 20_000_000) }.each_cursor(batch: 100) do |user|\n  # Do something with user; only 100 users will be stored in memory\n  # This method is using pg cursor, so it's 100% transaction-safe\nend\n```\n\n##### Aggregate functions\n\nCall aggregate functions from the query is possible. For complex aggregation,\nI would recommend to use the `SQL::View` API (note: Not yet developed),\nand keep the model query for _fetching_ models only\n\n```crystal\n# count\nuser_on_gmail = User.query.where{ email.ilike \"@gmail.com%\" }.count #Note: count return is Int64\n# min/max\nmax_id = User.query.where{ email.ilike \"@gmail.com%\" }.max(\"id\", Int32)\n# your own aggregate\nweighted_avg = User.query.agg( \"SUM(performance_weight * performance_score) / SUM(performance_weight)\", Float64 )\n```\n\n##### Fetching associations\n\nAssociations are basically getter which create predefined SQL.\nTo access to an association, just call it !\n\n```crystal\nUser.query.each do |user|\n  puts \"User #{user.id} posts:\"\n  user.posts.each do |post| #Works, but will trigger a request for each user.\n    puts \"• #{post.id}\"\n  end\nend\n```\n\n###### Caching association for N+1 request\n\nFor every association, you can tell Clear to encache the results to avoid\nN+1 queries, using `with_XXX` on the collection:\n\n```crystal\n# Will call two requests only.\nUser.query.with_posts.each do |user|\n  puts \"User #{user.id} posts:\"\n  user.posts.each do |post|\n    puts \"• #{post.id}\"\n  end\nend\n```\n\nNote than Clear doesn't perform a join method, and the SQL produced will use\nthe operator `IN` on the association.\n\nIn the case above:\n\n- The first request will be\n\n```\n  SELECT * FROM users;\n```\n\n- Thanks to the cache, a second request will be called before fetching the users:\n\n```\n  SELECT * FROM posts WHERE user_id IN ( SELECT id FROM users )\n```\n\nI have plan in a late future to offer different query strategies for the cache (e.g. joins, unions...)\n\n###### Associations caching examples\n\nWhen you use the caching system of the association, using filters on association will\ninvalidate the cache, and N+1 query will happens.\n\nFor example:\n\n```crystal\nUser.query.with_posts.each do |user|\n  puts \"User #{user.id} published posts:\"\n  # Here: The cache system will not work. The cache on association\n  # is invalidated by the filter `where`.\n  user.posts.where({published: true}).each do |post|\n    puts \"• #{post.id}\"\n  end\nend\n```\n\nThe way to fix it is to filter on the association itself:\n\n```crystal\nUser.query.with_posts(&.where({published: true})).each do |user|\n  puts \"User #{user.id} published posts:\"\n  # The posts collection of user is already encached with the published filter\n  user.posts.each do |post|\n    puts \"• #{post.id}\"\n  end\nend\n```\n\nNote than, of course in this example `user.posts` are not ALL the posts but only the\n`published` posts\n\nThanks to this system, we can stack it to encache long distance relations:\n\n```crystal\n# Will cache users<=>posts & posts<=>category\n# Total: 3 requests !\nUser.query.with_posts(&.with_category).each do |user|\n  #...\nend\n```\n\n##### Querying computed or foreign columns\n\nIn case you want columns computed by postgres, or stored in another table, you can use `fetch_column`.\nBy default, for performance reasons, `fetch_columns` option is set to false.\n\n```crystal\nusers = User.query.select(email: \"users.email\",\n  remark: \"infos.remark\").join(\"infos\"){ infos.user_id == users.id }.to_a(fetch_columns: true)\n\n# Now the column \"remark\" will be fetched into each user object.\n# Access can be made using `[]` operator on the model.\n\nusers.each do |u|\n  puts \"email: `#{u.email}`, remark: `#{u[\"remark\"]?}`\"\nend\n```\n\n### Inspection & SQL logging\n\n#### Inspection\n\n`inspect` over model offers debugging insights:\n\n```text\n  p # => #<Post:0x10c5f6720\n          @attributes={},\n          @cache=\n           #<Clear::Model::QueryCache:0x10c6e8100\n            @cache={},\n            @cache_activation=Set{}>,\n          @content_column=\n           \"...\",\n          @errors=[],\n          @id_column=38,\n          @persisted=true,\n          @published_column=true,\n          @read_only=false,\n          @title_column=\"Lorem ipsum torquent inceptos\"*,\n          @user_id_column=5>\n```\n\nIn this case, the `*` means a column is changed and the object is dirty and diverge from the database.\n\n#### SQL Logging\n\nOne thing very important for a good ORM is to offer vision of the SQL\ncalled under the hood.\nClear is offering SQL logging tools, with SQL syntax colorizing in your terminal.\n\nFor activation, simply setup the logger to `DEBUG` level !\n\n\n```\nClear.logger.level = ::Logger::DEBUG\n```\n\n### Save & validation\n\n#### Save\n\nObject can be persisted, saved, updated:\n\n```crystal\nu = User.new\nu.email = \"test@example.com\"\nu.save! #Save or throw if unsavable (validation failed).\n```\n\nColumns can be checked & reverted:\n\n```crystal\nu = User.new\nu.email = \"test@example.com\"\nu.email_column.changed? # < Return \"true\"\nu.email_column.revert # Return to #undef.\n```\n\n#### Validation\n\n##### Presence validator\n\nPresence validator is done using the type of the column:\n\n```crystal\nclass User\n  include Clear::Model\n\n  column first_name : String # Must be present\n  column last_name : String? # Can be null\nend\n```\n\n###### `NOT NULL DEFAULT ...` CASE\n\n\nThere's a case when a column CAN be null inside Crystal, if not persisted,\nbut CANNOT be null inside Postgres.\n\nIt's for example the case of the `id` column, which take value after saving !\n\nIn this case, you can write:\n\n```crystal\nclass User\n    column id : Int64, primary: true, presence: false #id will be set using pg serial !\nend\n```\n\nThus, in all case this will fail:\n\n```\nu = User.new\nu.id # raise error\n```\n\n##### Other validators\n\nWhen you save your model, Clear will call first the presence validators, then\ncall your custom made validators. All you have to do is to reimplement\nthe `validate` method:\n\n```crystal\nclass MyModel\n#...\n  def validate\n    # Your code goes here\n  end\nend\n```\n\nValidation fails if `model#errors` is not empty:\n\n```crystal\n  class MyModel\n    #...\n    def validate\n      if first_name_column.defined? && first_name != \"ABCD\" #< See below why `defined?` must be called.\n        add_error(\"first_name\", \"must be ABCD!\")\n      end\n    end\n  end\n```\n\n##### Unique validator\n\nPlease use `unique` feature of postgres. Unique validator at crystal level is a\nnon-go and lead to terrible race concurrency issues if your deploy on multiple nodes/pods.\nIt's an anti-pattern and must be avoided at any cost.\n\n##### The validation and the presence system\n\nIn the case you try validation on a column which has not been initialized,\nClear will complain, telling you you cannot access to the column.\nLet's see an example here:\n\n```crystal\nclass MyModel\n  #...\n  def validate\n    add_error(\"first_name\", \"should not be empty\") if first_name == \"\"\n  end\nend\n\nMyModel.new.save! #< Raise unexpected exception, not validation failure :(\n```\n\nThis validator will raise an exception, because first_name has never been initialized.\nTo avoid this, we have many way:\n```crystal\n# 1. Check presence:\n\ndef validate\n  if first_name_column.defined? #Ensure we have a value here.\n    add_error(\"first_name\", \"should not be empty\") if first_name == \"\"\n  end\nend\n\n# 2. Use column object + default value\ndef validate\n  add_error(\"first_name\", \"should not be empty\") if first_name_column.value(\"\") == \"\"\nend\n\n# 3. Use the helper macro `on_presence`\ndef validate\n  on_presence(first_name) do\n    add_error(\"first_name\", \"should not be empty\") if first_name == \"\"\n  end\nend\n\n#4. Use the helper macro `ensure_than`\ndef validate\n  ensure_than(first_name, \"should not be empty\", &.!=(\"\"))\nend\n\n#5. Use the `ensure_than` helper (but with block notation) !\ndef validate\n  ensure_than(first_name, \"should not be empty\") do |column|\n    column != \"\"\n  end\nend\n\n```\n\nI recommend the 4th method in most of the cases you will faces.\nSimple to write and easy to read !\n\n### Migration\n\nClear offers of course a migration system.\n\nMigration should have an `order` column set.\nThis number can be wrote at the end of the class itself:\n\n```crystal\nclass Migration1\n  include Clear::Migration\n\n  def change(dir)\n    #...\n  end\nend\n```\n\n#### Using filename\n\nAnother way is to write down all your migrations one file per migration, and\nnaming the file using the `[number]_migration_description.cr` pattern.\nIn this case, the migration class name doesn't need to have a number at the end of the class name.\n\n```crystal\n# in src/db/migrations/1234_create_table.cr\nclass CreateTable\n  include Clear::Migration\n\n  def change(dir)\n    #...\n  end\nend\n```\n\n#### Migration examples\n\nMigration must implement the method `change(dir : Migration::Direction)`\n\nDirection is the current direction of the migration (up or down).\nIt provides few methods: `up?`, `down?`, `up(&block)`, `down(&block)`\n\nYou can create a table:\n\n```crystal\n  def change(dir)\n    create_table(:test) do |t|\n      t.string :first_name, index: true\n      t.string :last_name, unique: true\n\n      t.index \"lower(first_name || ' ' || last_name)\", using: :btree\n\n      t.timestamps\n    end\n  end\n```\n\n#### Constraints\n\nI strongly encourage to use the foreign key constraints of postgres for your references:\n\n```crystal\n  t.references to: \"users\", on_delete: \"cascade\", null: false\n```\n\nThere's no plan to offer on Crystal level the `on_delete` feature, like\n`dependent` in ActiveRecord. That's a standard PG feature, just set it\nup in migration\n\n## Performances\n\nModels add a layer of computation. Below is a sample with a very simple model\n(two integer column ), with fetching of 100k rows over 1M rows database, using --release flag:\n\n\n| Method                     |        | Total time            | Speed        |\n| --------------------------:|-------:|-----------------------|-------------:|\n|          Simple load 100k  |  12.04 |  ( 83.03ms) (± 3.87%) | 2.28× slower |\n|               With cursor  |   8.26 |  ( 121.0ms) (± 1.25%) | 3.32× slower |\n|           With attributes  |  10.30 |  ( 97.12ms) (± 4.07%) | 2.67× slower |\n| With attributes and cursor |   7.55 |  (132.52ms) (± 2.39%) | 3.64× slower |\n|                  SQL only  |  27.46 |  ( 36.42ms) (± 5.05%) |      fastest |\n\n\n- `Simple load 100k` is using an array to fetch the 100k rows.\n- `With cursor` is querying 1000 rows at a time\n- `With attribute` setup a hash to deal with unknown attributes in the model (e.g. aggregates)\n- `With attribute and cursor` is doing cursored fetch with hash attributes created\n- `SQL only` build and execute SQL using SQL::Builder\n\nAs you can see, it takes around 100ms to fetch 100k rows for this simple model (SQL included).\nIf for more complex model, it would take a bit more of time, I think the performances\nare quite reasonable, and tenfold or plus faster than Rails's ActiveRecord.\n\n## Licensing\n\nThis shard is provided under the MIT license.\n\n## Contribution\n\nAll contributions are welcome ! As a specialized ORM for PostgreSQL,\nbe sure a great contribution on a very specific PG feature will be incorporated\nto this shard.\nI hope one day we will cover all the features of PG here !\n\n### Running Tests\n\nIn order to run the test suite, you will need to have the PostgresSQL service locally available via a socket for access with psql. psql will attempt to use the 'postgres' user to create the test database. If you are working with a newly installed database that may not have the postgres user, this can be created with `createuser -s postgres`.\n","program":{"html_id":"github.com/anykeyh/clear/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/anykeyh/clear","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Char","path":"Char.html","kind":"struct","full_name":"Char","name":"Char","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/inflector/src/inflector/string.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/lib/inflector/src/inflector/string.cr"},{"filename":"clear/extensions/core_ext.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/core_ext.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Char` represents a [Unicode](http://en.wikipedia.org/wiki/Unicode) [code point](http://en.wikipedia.org/wiki/Code_point).\nIt occupies 32 bits.\n\nIt is created by enclosing an UTF-8 character in single quotes.\n\n```\n'a'\n'z'\n'0'\n'_'\n'あ'\n```\n\nYou can use a backslash to denote some characters:\n\n```\n'\\'' # single quote\n'\\\\' # backslash\n'\\e' # escape\n'\\f' # form feed\n'\\n' # newline\n'\\r' # carriage return\n'\\t' # tab\n'\\v' # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n'\\u0041' # == 'A'\n```\n\nOr you can use curly braces and specify up to four hexadecimal numbers:\n\n```\n'\\u{41}' # == 'A'\n```","summary":"<p>A <code><a href=\"Char.html\">Char</a></code> represents a <a href=\"http://en.wikipedia.org/wiki/Unicode\" target=\"_blank\">Unicode</a> <a href=\"http://en.wikipedia.org/wiki/Code_point\" target=\"_blank\">code point</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_json(json)-instance-method","html_id":"to_json(json)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":""}],"args_string":"(json)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/core_ext.cr#L6","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.string(\"#{self}\")"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear","path":"Clear.html","kind":"module","full_name":"Clear","name":"Clear","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/core.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/core.cr"},{"filename":"clear/version.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/version.cr"},{"filename":"clear/seed.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/seed.cr"},{"filename":"clear/sql/sql.cr","line_number":16,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr"},{"filename":"clear/extensions/enum/enum.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr"},{"filename":"clear/cli.cr","line_number":8,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"v0.6\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"apply_seeds-class-method","html_id":"apply_seeds-class-method","name":"apply_seeds","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/seed.cr#L12","def":{"name":"apply_seeds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL.transaction do\n  @@seed_list.each(&.call)\nend"}},{"id":"logger:Logger-class-method","html_id":"logger:Logger-class-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Logger","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/core.cr#L4","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Logger","visibility":"Public","body":"@@logger"}},{"id":"logger=(logger:Logger)-class-method","html_id":"logger=(logger:Logger)-class-method","name":"logger=","doc":null,"summary":null,"abstract":false,"args":[{"name":"logger","doc":null,"default_value":"","external_name":"logger","restriction":"Logger"}],"args_string":"(logger : Logger)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/core.cr#L8","def":{"name":"logger=","args":[{"name":"logger","doc":null,"default_value":"","external_name":"logger","restriction":"Logger"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logger = logger"}},{"id":"seed(&block)-class-method","html_id":"seed(&amp;block)-class-method","name":"seed","doc":"Register a seed block.\nthis block will be called by `Clear.apply_seeds`\nor conveniently by the CLI\nusing `$cli_cmd migrate seeds`","summary":"<p>Register a seed block.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/seed.cr#L8","def":{"name":"seed","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"","visibility":"Public","body":"@@seed_list << block"}},{"id":"with_cli(&block)-class-method","html_id":"with_cli(&amp;block)-class-method","name":"with_cli","doc":"Check for the CLI. If the CLI is not triggered, yield the block passed as parameter","summary":"<p>Check for the CLI.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L30","def":{"name":"with_cli","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if ARGV.size > 0 && (ARGV[0] == \"clear\")\n  ARGV.shift\n  Clear::CLI.run\nelse\n  yield\nend"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"enum(name,*values,&block)-macro","html_id":"enum(name,*values,&amp;block)-macro","name":"enum","doc":"## Enum\n\nClear offers full support of postgres enum strings.\n\n### Example\n\nLet's say you need to define an enum for genders:\n\n```crystal\n# Define the enum\nClear.enum MyApp::Gender, \"male\", \"female\" # , ...\n```\n\nIn migration, we tell Postgres about the enum:\n\n```crystal\ncreate_enum :gender, MyApp::Gender # < Create the new type `gender` in the database\n\ncreate_table :users do |t|\n  # ...\n  t.gender \"gender\" # < first `gender` is the type of column, while second is the name of the column\nend\n```\n\nFinally in your model, simply add the enum as column:\n\n```crystal\nclass User\n  include Clear::Model\n  # ...\n\n  column gender : MyApp::Gender\nend\n```\n\nNow, you can assign the enum:\n\n```crystal\n  u = User.new\n  u.gender = MyApp::Gender::Male\n```\n\nYou can dynamically check and build the enumeration values:\n\n```crystal\n  MyApp::Gender.authorized_values # < return [\"male\", \"female\"]\n  MyApp::Gender.all               # < return [MyApp::Gender::Male, MyApp::Gender::Female]\n\n  MyApp::Gender.from_string(\"male\")    # < return MyApp::Gender::Male\n  MyApp::Gender.from_string(\"unknown\") # < throw Clear::IllegalEnumValueError\n\n  MyApp::Gender.valid?(\"female\")  # < Return true\n  MyApp::Gender.valid?(\"unknown\") # < Return false\n```\n\nHowever, you cannot write:\n\n```crystal\n  u = User.new\n  u.gender = \"male\"\n```\n\nBut instead:\n\n```crystal\n  u = User.new\n  u.gender = MyApp::Gender::Male\n```","summary":"<h2>Enum</h2>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(name, *values, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L113","def":{"name":"enum","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    struct \n{{ name.id }}\n < ::Clear::Enum\n      \n{% for i in values %}\n        {{ i.camelcase.id }} = {{ name.id }}.new(\"{{ i.id }}\")\n      {% end %}\n\n\n      \n{% if true %}\n        AUTHORIZED_VALUES = {\n        {% for i in values %}\n          \"{{ i.id }}\" => {{ i.camelcase.id }},\n        {% end %}\n        }\n      {% end %}\n\n\n\n      \n# Return the enum with the string passed as parameter.\n\n      \n# Throw Clear::IllegalEnumValueError if the string is not found.\n\n      def self.from_string(str : String)\n        AUTHORIZED_VALUES[str]? || raise ::Clear::IllegalEnumValueError.new(\"Illegal enum value for `#{self.class}`: '#{str}'\")\n      \nend\n\n      \n# Return the list of authorized values\n\n      def self.authorized_values\n        AUTHORIZED_VALUES.keys\n      \nend\n\n      def self.all\n        AUTHORIZED_VALUES.values\n      \nend\n\n      def self.valid?(x)\n        AUTHORIZED_VALUES[x]?\n      \nend\n\n      macro finished\n        module ::Clear::Model::Converter::\n\\{\n{@type}}Converter\n          def self.to_column(x) : ::\n\\{\n{@type}}?\n            case x\n            when Nil\n              nil\n            when ::\n\\{\n{@type}}\n              x\n            when String\n              ::\n\\{\n{@type}}.from_string(x)\n            when Slice(UInt8)\n              ::\n\\{\n{@type}}.from_string(String.new(x))\n            \nelse\n              raise Clear::ErrorMessages.converter_error(x.class.name, \"::\n\\{\n{@type}}\")\n            \nend\n          \nend\n\n          def self.to_db(x : ::\n\\{\n{@type}}?)\n            x.to_s\n          \nend\n        \nend\n\n        Clear::Model::Converter.add_converter(\"\n\\{\n{@type}}\", ::Clear::Model::Converter::\n\\{\n{@type}}Converter)\n      \nend\n\n      \n{{ yield }}\n\n    \nend\n\n\n  \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI","path":"Clear/CLI.html","kind":"module","full_name":"Clear::CLI","name":"CLI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/cli/command.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/command.cr"},{"filename":"clear/cli.cr","line_number":9,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":null,"summary":null,"class_methods":[{"id":"run-class-method","html_id":"run-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L10","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::CLI::Base.run"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Base","path":"Clear/CLI/Base.html","kind":"class","full_name":"Clear::CLI::Base","name":"Base","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Admiral/Command/Run","kind":"module","full_name":"Admiral::Command::Run","name":"Run"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli.cr","line_number":14,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Admiral/Command/Run","kind":"module","full_name":"Admiral::Command::Run","name":"Run"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI","kind":"module","full_name":"Clear::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L15","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L23","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"STDOUT.puts(help)"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}},{"id":"version-instance-method","html_id":"version-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L17","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::VERSION"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Base/Arguments","path":"Clear/CLI/Base/Arguments.html","kind":"struct","full_name":"Clear::CLI::Base::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli.cr","line_number":14,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Base","kind":"class","full_name":"Clear::CLI::Base","name":"Base"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Base/Flags","path":"Clear/CLI/Base/Flags.html","kind":"struct","full_name":"Clear::CLI::Base::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli.cr","line_number":14,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__version__\" => {type: \"Bool\", default: \"false\", description: {\"--version\", \"Displays the version of the current application.\"}, short: \"nil\", long: \"version\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Base","kind":"class","full_name":"Clear::CLI::Base","name":"Base"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"__version__-instance-method","html_id":"__version__-instance-method","name":"__version__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__version__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__version__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli.cr#L14","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--version\", \"Displays the version of the current application.\"}, short: \"nil\", long: \"version\", is_required: true}[:is_required] && @__version__.nil?\n  raise(Admiral::Error.new(\"Flag required: --version\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","path":"Clear/CLI/Command.html","kind":"module","full_name":"Clear::CLI::Command","name":"Command","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/cli/command.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/command.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Base","kind":"class","full_name":"Clear::CLI::Base","name":"Base"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Migration","kind":"class","full_name":"Clear::CLI::Generator::Migration","name":"Migration"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Model","kind":"class","full_name":"Clear::CLI::Generator::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/NewKemal","kind":"class","full_name":"Clear::CLI::Generator::NewKemal","name":"NewKemal"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Down","kind":"class","full_name":"Clear::CLI::Migration::Down","name":"Down"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Migrate","kind":"class","full_name":"Clear::CLI::Migration::Migrate","name":"Migrate"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Rollback","kind":"class","full_name":"Clear::CLI::Migration::Rollback","name":"Rollback"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Seed","kind":"class","full_name":"Clear::CLI::Migration::Seed","name":"Seed"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Set","kind":"class","full_name":"Clear::CLI::Migration::Set","name":"Set"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Status","kind":"class","full_name":"Clear::CLI::Migration::Status","name":"Status"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Up","kind":"class","full_name":"Clear::CLI::Migration::Up","name":"Up"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI","kind":"module","full_name":"Clear::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","path":"Clear/CLI/Generator.html","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Admiral/Command/Run","kind":"module","full_name":"Admiral::Command::Run","name":"Run"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generator.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr"},{"filename":"clear/cli/generators/migration.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr"},{"filename":"clear/cli/generators/model.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr"},{"filename":"clear/cli/generators/new/kemal.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Admiral/Command/Run","kind":"module","full_name":"Admiral::Command::Run","name":"Run"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI","kind":"module","full_name":"Clear::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"[](name)-class-method","html_id":"[](name)-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L21","def":{"name":"[]","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@generators[name]"}},{"id":"[]?(name)-class-method","html_id":"[]?(name)-class-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L17","def":{"name":"[]?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@generators[name]?"}},{"id":"add(name,desc,&block:Array(String)->Void)-class-method","html_id":"add(name,desc,&amp;block:Array(String)-&gt;Void)-class-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"desc","doc":null,"default_value":"","external_name":"desc","restriction":""}],"args_string":"(name, desc, &block : Array(String) -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L13","def":{"name":"add","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"desc","doc":null,"default_value":"","external_name":"desc","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(String) -> Void)"},"return_type":"","visibility":"Public","body":"@@generators[name] = Record.new(name, desc, block)"}},{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"generators-class-method","html_id":"generators-class-method","name":"generators","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L13","def":{"name":"generators","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@generators"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Generate code automatically\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L5","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L25","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(help)"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[{"id":"ecr_to_s(string,opts)-macro","html_id":"ecr_to_s(string,opts)-macro","name":"ecr_to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"args_string":"(string, opts)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L29","def":{"name":"ecr_to_s","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    opts = \n{{ opts }}\n\n    io = IO::Memory.new\n    ECR.embed \n{{ string }}\n, io\n    io.to_s\n  \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Arguments","path":"Clear/CLI/Generator/Arguments.html","kind":"struct","full_name":"Clear::CLI::Generator::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generator.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Flags","path":"Clear/CLI/Generator/Flags.html","kind":"struct","full_name":"Clear::CLI::Generator::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generator.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L4","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Migration","path":"Clear/CLI/Generator/Migration.html","kind":"class","full_name":"Clear::CLI::Generator::Migration","name":"Migration","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/migration.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Generate a new migration\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L7","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L19","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g = Generate::Generator.new\ng.target_directory = flags.directory\nname = arguments.name\nif name\n  name_underscore = name.underscore\n  class_name = name.camelcase\n  migration_uid = Time.now.to_unix.to_s.rjust(10, '0')\n  g[\"migration_uid\"] = migration_uid\n  g[\"class_name\"] = class_name\n  migration_file = \"#{migration_uid}_#{name_underscore}.cr\"\n  if Dir[File.join(g.target_directory, \"src/db/migrations/*_#{name_underscore}.cr\")].any?\n    puts(\"A migration file `xxxx_#{name_underscore}.cr` already exists\")\n    exit(1)\n  end\n  g.in_directory(\"src/db/migrations\") do\n    g.file(migration_file, Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/../../../../templates/migration.cr.ecr\", g))\n  end\nelse\n  puts(\"Please provide a name for the migration\")\n  exit(1)\nend\n"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Migration/Arguments","path":"Clear/CLI/Generator/Migration/Arguments.html","kind":"struct","full_name":"Clear::CLI::Generator::Migration::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/migration.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr"},{"filename":"clear/cli/generators/migration.cr","line_number":17,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"name\" => {type: \"String\", description: {\"name\", \"\"}, default: \"nil\", is_required: false}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Migration","kind":"class","full_name":"Clear::CLI::Generator::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{name: @name}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L17","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Nil","visibility":"Public","body":"@name"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Migration/Flags","path":"Clear/CLI/Generator/Migration/Flags.html","kind":"struct","full_name":"Clear::CLI::Generator::Migration::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/migration.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr"},{"filename":"clear/cli/generators/migration.cr","line_number":11,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}, \"directory\" => {type: \"String\", default: \"\\\".\\\"\", description: {\"--directory, -d (default: \\\".\\\")\", \"Set target directory\"}, short: \"d\", long: \"directory\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Migration","kind":"class","full_name":"Clear::CLI::Generator::Migration","name":"Migration"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"directory-instance-method","html_id":"directory-instance-method","name":"directory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L11","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@directory.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/migration.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nif {type: \"String\", default: \"\\\".\\\"\", description: {\"--directory, -d (default: \\\".\\\")\", \"Set target directory\"}, short: \"d\", long: \"directory\", is_required: true}[:is_required] && @directory.nil?\n  raise(Admiral::Error.new(\"Flag required: --directory\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Model","path":"Clear/CLI/Generator/Model.html","kind":"class","full_name":"Clear::CLI::Generator::Model","name":"Model","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/model.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Create a new model and the first migration\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L7","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L19","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g = Generate::Generator.new\ng.target_directory = flags.directory\nname = arguments.name\nif name\n  name_underscore = name.underscore\n  model_table = name_underscore.pluralize\n  class_name = name.camelcase\n  fields = @argv.join(\"|\")\n  migration_uid = Time.now.to_unix.to_s.rjust(10, '0')\n  g[\"model_class\"] = class_name\n  g[\"migration_uid\"] = migration_uid\n  g[\"model_table\"] = model_table\n  g[\"model_fields\"] = fields\n  model_file = \"#{name_underscore}.cr\"\n  migration_file = \"#{migration_uid}_create_#{name_underscore.pluralize}.cr\"\n  if Dir[File.join(g.target_directory, \"src/db/migrations/*_create_#{name_underscore.pluralize}.cr\")].any?\n    puts(\"A migration file `xxxx__create_#{name_underscore.pluralize}.cr` already exists\")\n    exit(1)\n  end\n  g.in_directory(\"src/models\") do\n    g.file(model_file, Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/../../../../templates/model/model.cr.ecr\", g))\n  end\n  g.in_directory(\"src/db/migrations\") do\n    g.file(migration_file, Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/../../../../templates/model/migration.cr.ecr\", g))\n  end\nelse\n  puts(\"Please provide a name for the model\")\n  exit(1)\nend\n"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Model/Arguments","path":"Clear/CLI/Generator/Model/Arguments.html","kind":"struct","full_name":"Clear::CLI::Generator::Model::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/model.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr"},{"filename":"clear/cli/generators/model.cr","line_number":17,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"name\" => {type: \"String\", description: {\"name\", \"\"}, default: \"nil\", is_required: false}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Model","kind":"class","full_name":"Clear::CLI::Generator::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{name: @name}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L17","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Nil","visibility":"Public","body":"@name"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Model/Flags","path":"Clear/CLI/Generator/Model/Flags.html","kind":"struct","full_name":"Clear::CLI::Generator::Model::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/model.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr"},{"filename":"clear/cli/generators/model.cr","line_number":11,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}, \"directory\" => {type: \"String\", default: \"\\\".\\\"\", description: {\"--directory, -d (default: \\\".\\\")\", \"Set target directory\"}, short: \"d\", long: \"directory\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Model","kind":"class","full_name":"Clear::CLI::Generator::Model","name":"Model"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"directory-instance-method","html_id":"directory-instance-method","name":"directory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L11","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@directory.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/model.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nif {type: \"String\", default: \"\\\".\\\"\", description: {\"--directory, -d (default: \\\".\\\")\", \"Set target directory\"}, short: \"d\", long: \"directory\", is_required: true}[:is_required] && @directory.nil?\n  raise(Admiral::Error.new(\"Flag required: --directory\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/NewKemal","path":"Clear/CLI/Generator/NewKemal.html","kind":"class","full_name":"Clear::CLI::Generator::NewKemal","name":"NewKemal","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/new/kemal.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L7","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L17","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"g = Generate::Generator.new\ng.target_directory = flags.directory\ng[\"app_name\"] = arguments.name || (File.basename(g.target_directory))\ng[\"app_name_underscore\"] = g[\"app_name\"].underscore\ng[\"app_name_camelcase\"] = g[\"app_name\"].camelcase\ng[\"git_username\"] = (`git config user.email`).chomp || \"email@example.com\"\ng[\"git_email\"] = (`git config user.name`).chomp || \"Your Name\"\ng.in_directory(\"bin\") do\n  g.file(\"appctl\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/bin/appctl.ecr\", g))\n  g.file(\"clear_cli.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/bin/clear_cli.cr.ecr\", g))\n  g.file(\"server.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/bin/server.cr.ecr\", g))\nend\ng.in_directory(\"config\") do\n  g.file(\"database.yml\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/config/database.yml.ecr\", g))\nend\ng.in_directory(\"src\") do\n  g.in_directory(\"controllers\") do\n    g.file(\"application_controller.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/controllers/application_controller.ecr\", g))\n    g.file(\"welcome_controller.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/controllers/welcome_controller.ecr\", g))\n  end\n  g.in_directory(\"db\") do\n    g.file(\"init.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/db/init.ecr\", g))\n  end\n  g.in_directory(\"models\") do\n    g.file(\"init.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/models/application_model.ecr\", g))\n  end\n  g.in_directory(\"views\") do\n    g.in_directory(\"components\") do\n      g.file(\"footer.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/views/components/footer.ecr\", g))\n    end\n    g.in_directory(\"layouts\") do\n      g.file(\"application.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/views/layouts/application.ecr\", g))\n    end\n    g.in_directory(\"welcome\") do\n      g.file(\"index.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/views/welcome/index.ecr\", g))\n    end\n  end\n  g.file(\"app.cr\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/src/app.ecr\", g))\nend\ng.file(\".gitignore\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/_gitignore.ecr\", g))\ng.file(\"shard.yml\", Clear::CLI::Generator.ecr_to_s(\"/home/travis/build/anykeyh/clear/src/clear/cli/generators/new/../../../../../templates/kemal/shard.yml.ecr\", g))\nsystem(\"chmod +x #{g.target_directory}/bin/appctl\")\nsystem(\"cd #{g.target_directory} && shards\")\nputs(\"Clear + Kemal template is now generated. `cd #{g.target_directory} && clear-cli server` to play ! :-)\")\n"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/NewKemal/Arguments","path":"Clear/CLI/Generator/NewKemal/Arguments.html","kind":"struct","full_name":"Clear::CLI::Generator::NewKemal::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/new/kemal.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr"},{"filename":"clear/cli/generators/new/kemal.cr","line_number":15,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"name\" => {type: \"String\", description: {\"name\", \"\"}, default: \"nil\", is_required: false}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/NewKemal","kind":"class","full_name":"Clear::CLI::Generator::NewKemal","name":"NewKemal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{name: @name}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L15","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Nil","visibility":"Public","body":"@name"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/NewKemal/Flags","path":"Clear/CLI/Generator/NewKemal/Flags.html","kind":"struct","full_name":"Clear::CLI::Generator::NewKemal::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generators/new/kemal.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr"},{"filename":"clear/cli/generators/new/kemal.cr","line_number":9,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"directory\" => {type: \"String\", default: \"\\\".\\\"\", description: {\"--directory, -d (default: \\\".\\\")\", \"Set target directory\"}, short: \"d\", long: \"directory\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/NewKemal","kind":"class","full_name":"Clear::CLI::Generator::NewKemal","name":"NewKemal"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"directory-instance-method","html_id":"directory-instance-method","name":"directory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L9","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@directory.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generators/new/kemal.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"String\", default: \"\\\".\\\"\", description: {\"--directory, -d (default: \\\".\\\")\", \"Set target directory\"}, short: \"d\", long: \"directory\", is_required: true}[:is_required] && @directory.nil?\n  raise(Admiral::Error.new(\"Flag required: --directory\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator/Record","path":"Clear/CLI/Generator/Record.html","kind":"struct","full_name":"Clear::CLI::Generator::Record","name":"Record","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/generator.cr","line_number":7,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Generator","kind":"class","full_name":"Clear::CLI::Generator","name":"Generator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,desc:String,callback:Array(String)->Void)-class-method","html_id":"new(name:String,desc:String,callback:Array(String)-&gt;Void)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"desc","doc":null,"default_value":"","external_name":"desc","restriction":"String"},{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"(Array(String) -> Void)"}],"args_string":"(name : String, desc : String, callback : Array(String) -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"desc","doc":null,"default_value":"","external_name":"desc","restriction":"String"},{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"(Array(String) -> Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, desc, callback)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"callback:Array(String)->Void-instance-method","html_id":"callback:Array(String)-&gt;Void-instance-method","name":"callback","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String) -> Void","source_link":null,"def":{"name":"callback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(Array(String) -> Void)","visibility":"Public","body":"@callback"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L7","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Record.new(@name.clone, @desc.clone, @callback.clone)"}},{"id":"copy_with(name_name=@name,desc_desc=@desc,callback_callback=@callback)-instance-method","html_id":"copy_with(name_name=@name,desc_desc=@desc,callback_callback=@callback)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_desc","doc":null,"default_value":"@desc","external_name":"desc","restriction":""},{"name":"_callback","doc":null,"default_value":"@callback","external_name":"callback","restriction":""}],"args_string":"(name _name = @name, desc _desc = @desc, callback _callback = @callback)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/generator.cr#L7","def":{"name":"copy_with","args":[{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_desc","doc":null,"default_value":"@desc","external_name":"desc","restriction":""},{"name":"_callback","doc":null,"default_value":"@callback","external_name":"callback","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Record.new(_name, _desc, _callback)"}},{"id":"desc:String-instance-method","html_id":"desc:String-instance-method","name":"desc","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"desc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@desc"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","path":"Clear/CLI/Migration.html","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Admiral/Command/Run","kind":"module","full_name":"Admiral::Command::Run","name":"Run"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Admiral/Command/Run","kind":"module","full_name":"Admiral::Command::Run","name":"Run"},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI","kind":"module","full_name":"Clear::CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Manage migration state of your database\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L2","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L111","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Migration::Manager.instance.apply_all"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Arguments","path":"Clear/CLI/Migration/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Down","path":"Clear/CLI/Migration/Down.html","kind":"class","full_name":"Clear::CLI::Migration::Down","name":"Down","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":37,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Downgrade your database to a specific migration version\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L38","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L43","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Migration::Manager.instance.down(arguments.migration_number)"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Down/Arguments","path":"Clear/CLI/Migration/Down/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Down::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":37,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"},{"filename":"clear/cli/migration.cr","line_number":40,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"migration_number\" => {type: \"Int64\", description: {\"migration_number (required)\", \"\"}, default: \"nil\", is_required: true}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Down","kind":"class","full_name":"Clear::CLI::Migration::Down","name":"Down"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{migration_number: @migration_number}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"migration_number:Int64-instance-method","html_id":"migration_number:Int64-instance-method","name":"migration_number","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L40","def":{"name":"migration_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@migration_number.not_nil!"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Down/Flags","path":"Clear/CLI/Migration/Down/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Down::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":37,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Down","kind":"class","full_name":"Clear::CLI::Migration::Down","name":"Down"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L37","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Flags","path":"Clear/CLI/Migration/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L1","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Migrate","path":"Clear/CLI/Migration/Migrate.html","kind":"class","full_name":"Clear::CLI::Migration::Migrate","name":"Migrate","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":71,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L72","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L74","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Migration::Manager.instance.apply_all"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Migrate/Arguments","path":"Clear/CLI/Migration/Migrate/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Migrate::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":71,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Migrate","kind":"class","full_name":"Clear::CLI::Migration::Migrate","name":"Migrate"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Migrate/Flags","path":"Clear/CLI/Migration/Migrate/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Migrate::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":71,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Migrate","kind":"class","full_name":"Clear::CLI::Migration::Migrate","name":"Migrate"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L71","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Rollback","path":"Clear/CLI/Migration/Rollback.html","kind":"class","full_name":"Clear::CLI::Migration::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":79,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Rollback the last up migration\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L80","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L85","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"array = Clear::Migration::Manager.instance.migrations_up.to_a.sort\nnum = if arguments.num.nil?\n  2\nelse\n  arguments.num.not_nil!.to_i + 1\nend\nif (num > array.size)\n  num = array.size - 1\nend\nClear::Migration::Manager.instance.apply_to(array[-num], direction: :down)\n"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Rollback/Arguments","path":"Clear/CLI/Migration/Rollback/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Rollback::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":79,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"},{"filename":"clear/cli/migration.cr","line_number":83,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"num\" => {type: \"Int64\", description: {\"num\", \"\"}, default: \"nil\", is_required: false}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Rollback","kind":"class","full_name":"Clear::CLI::Migration::Rollback","name":"Rollback"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{num: @num}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"num:Int64?-instance-method","html_id":"num:Int64?-instance-method","name":"num","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L83","def":{"name":"num","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | Nil","visibility":"Public","body":"@num"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Rollback/Flags","path":"Clear/CLI/Migration/Rollback/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Rollback::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":79,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Rollback","kind":"class","full_name":"Clear::CLI::Migration::Rollback","name":"Rollback"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L79","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Seed","path":"Clear/CLI/Migration/Seed.html","kind":"class","full_name":"Clear::CLI::Migration::Seed","name":"Seed","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":16,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Call the seeds data\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L17","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L21","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear.apply_seeds"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Seed/Arguments","path":"Clear/CLI/Migration/Seed/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Seed::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":16,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Seed","kind":"class","full_name":"Clear::CLI::Migration::Seed","name":"Seed"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Seed/Flags","path":"Clear/CLI/Migration/Seed/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Seed::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":16,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Seed","kind":"class","full_name":"Clear::CLI::Migration::Seed","name":"Seed"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L16","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Set","path":"Clear/CLI/Migration/Set.html","kind":"class","full_name":"Clear::CLI::Migration::Set","name":"Set","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":48,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L49","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L54","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dir_symbol = case flags.direction\nwhen \"up\"\n  :up\nwhen \"down\"\n  :down\nwhen \"both\"\n  :both\nelse\n  puts(\"Bad argument --direction : #{flags.direction}. Must be up|down|both\")\n  exit(1)\nend\nClear::Migration::Manager.instance.apply_to(arguments.to, direction: dir_symbol)\n"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Set/Arguments","path":"Clear/CLI/Migration/Set/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Set::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":48,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"},{"filename":"clear/cli/migration.cr","line_number":52,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"to\" => {type: \"Int64\", description: {\"to (required)\", \"\"}, default: \"nil\", is_required: true}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Set","kind":"class","full_name":"Clear::CLI::Migration::Set","name":"Set"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{to: @to}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"to:Int64-instance-method","html_id":"to:Int64-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L52","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@to.not_nil!"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Set/Flags","path":"Clear/CLI/Migration/Set/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Set::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":48,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"},{"filename":"clear/cli/migration.cr","line_number":51,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"direction\" => {type: \"String\", default: \"\\\"both\\\"\", description: {\"--direction, -d (default: \\\"both\\\")\", \"\"}, short: \"d\", long: \"direction\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Set","kind":"class","full_name":"Clear::CLI::Migration::Set","name":"Set"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"direction-instance-method","html_id":"direction-instance-method","name":"direction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L51","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@direction.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L48","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"String\", default: \"\\\"both\\\"\", description: {\"--direction, -d (default: \\\"both\\\")\", \"\"}, short: \"d\", long: \"direction\", is_required: true}[:is_required] && @direction.nil?\n  raise(Admiral::Error.new(\"Flag required: --direction\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Status","path":"Clear/CLI/Migration/Status.html","kind":"class","full_name":"Clear::CLI::Migration::Status","name":"Status","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Return the current state of the database\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L7","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L11","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(Clear::Migration::Manager.instance.print_status)"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Status/Arguments","path":"Clear/CLI/Migration/Status/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Status::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Status","kind":"class","full_name":"Clear::CLI::Migration::Status","name":"Status"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Status/Flags","path":"Clear/CLI/Migration/Status/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Status::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Status","kind":"class","full_name":"Clear::CLI::Migration::Status","name":"Status"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L6","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Up","path":"Clear/CLI/Migration/Up.html","kind":"class","full_name":"Clear::CLI::Migration::Up","name":"Up","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Admiral/Command","kind":"class","full_name":"Admiral::Command","name":"Command"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":26,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HELP","name":"HELP","value":"{\"description\" => \"\"}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Command","kind":"module","full_name":"Clear::CLI::Command","name":"Command"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration","kind":"class","full_name":"Clear::CLI::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"description-class-method","html_id":"description-class-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HELP[\"description\"]"}},{"id":"run(*args,**params)-class-method","html_id":"run(*args,**params)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **params)).parse_and_run"}}],"constructors":[],"instance_methods":[{"id":"__rescue_from___Admiral__Error(e)-instance-method","html_id":"__rescue_from___Admiral__Error(e)-instance-method","name":"__rescue_from___Admiral__Error","doc":null,"summary":null,"abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(e)","source_link":null,"def":{"name":"__rescue_from___Admiral__Error","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"panic(e.message.colorize(:red))"}},{"id":"arguments-instance-method","html_id":"arguments-instance-method","name":"arguments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments || (@arguments = Arguments.new(self))"}},{"id":"flags-instance-method","html_id":"flags-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags || (@flags = Flags.new(self))"}},{"id":"help-instance-method","html_id":"help-instance-method","name":"help","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"help","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[help_usage, \"Upgrade your database to a specific migration version\" + \"\\n\", help_flags, help_arguments, help_sub_commands].reject do |__arg0|\n  __arg0.strip.empty?\nend.join(\"\\n\")"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L27","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Colorize.enabled = !flags.no_color\nif flags.verbose\n  Clear.logger.level = ::Logger::DEBUG\nend\nrun_impl\n"}},{"id":"run_impl-instance-method","html_id":"run_impl-instance-method","name":"run_impl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L32","def":{"name":"run_impl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Migration::Manager.instance.up(arguments.migration_number)"}},{"id":"sub(command,*args,**params)-instance-method","html_id":"sub(command,*args,**params)-instance-method","name":"sub","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(command, *args, **params)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"sub","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubCommands.invoke(command, *args, **params, parent: self)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Up/Arguments","path":"Clear/CLI/Migration/Up/Arguments.html","kind":"struct","full_name":"Clear::CLI::Migration::Up::Arguments","name":"Arguments","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":26,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"},{"filename":"clear/cli/migration.cr","line_number":29,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SPECS","name":"SPECS","value":"{\"migration_number\" => {type: \"Int64\", description: {\"migration_number (required)\", \"\"}, default: \"nil\", is_required: true}} of String => NamedTuple(type: String, description: Tuple(String, String | ::Nil), default: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Up","kind":"class","full_name":"Clear::CLI::Migration::Up","name":"Up"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options]"}},{"id":"[](*args,**options,&block)-instance-method","html_id":"[](*args,**options,&amp;block)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options)"}},{"id":"each(*args,**options,&block)-instance-method","html_id":"each(*args,**options,&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@__rest__.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"exists?(name:Symbol)-instance-method","html_id":"exists?(name:Symbol)-instance-method","name":"exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"exists?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!SPECS[name]?)"}},{"id":"get(name:Symbol)-instance-method","html_id":"get(name:Symbol)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{migration_number: @migration_number}[name]?"}},{"id":"get?(name:Symbol)-instance-method","html_id":"get?(name:Symbol)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exists?(name) ? get(name) : false"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names = SPECS.keys\nif size > 0\n  names << \"...\"\nend\nio << \"<#{self.class}\"\nio << \"(\"\nif names.empty?\nelse\n  io << (names.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"migration_number:Int64-instance-method","html_id":"migration_number:Int64-instance-method","name":"migration_number","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L29","def":{"name":"migration_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@migration_number.not_nil!"}},{"id":"validate!(command:Admiral::Command)-instance-method","html_id":"validate!(command:Admiral::Command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","html_id":"value_from_spec(command:Admiral::Command,*,arg:String,type,default,is_required:Bool)-instance-method","name":"value_from_spec","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"args_string":"(command : Admiral::Command, *, arg : String, type, default, is_required : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"value_from_spec","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"is_required","doc":null,"default_value":"","external_name":"is_required","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos_only = false\nindex = 0\nwhile ((command.@argv)[index]?.to_s.starts_with?(\"-\")) && (!pos_only)\n  index = index + 1\n  pos_only = (command.@argv)[index]? == \"--\"\nend\nif (command.@argv)[index]?\n  value = (command.@argv).delete_at(index)\n  type.new(value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Up/Flags","path":"Clear/CLI/Migration/Up/Flags.html","kind":"struct","full_name":"Clear::CLI::Migration::Up::Flags","name":"Flags","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/cli/migration.cr","line_number":26,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DESCRIPTIONS","name":"DESCRIPTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"SPECS","name":"SPECS","value":"{\"verbose\" => {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}, \"no_color\" => {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}, \"__help__\" => {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}} of String => NamedTuple(type: String, default: String, description: Tuple(String, String | ::Nil), short: String | ::Nil, long: String, is_required: Bool)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/CLI/Migration/Up","kind":"class","full_name":"Clear::CLI::Migration::Up","name":"Up"},"doc":"Extend the flags struct to include the flag","summary":"<p>Extend the flags struct to include the flag</p>","class_methods":[],"constructors":[{"id":"new(command:Admiral::Command)-class-method","html_id":"new(command:Admiral::Command)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"args_string":"(command : Admiral::Command)","source_link":null,"def":{"name":"new","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"::Admiral::Command"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(command)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"__help__-instance-method","html_id":"__help__-instance-method","name":"__help__","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"__help__","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@__help__.not_nil!"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/cli/migration.cr#L26","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<#{self.class}\"\nio << \"(\"\nif SPECS.empty?\nelse\n  io << (SPECS.keys.join(\", \"))\nend\nio << \")\"\nio << \">\"\n"}},{"id":"no_color-instance-method","html_id":"no_color-instance-method","name":"no_color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"no_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@no_color.not_nil!"}},{"id":"validate!(command)-instance-method","html_id":"validate!(command)-instance-method","name":"validate!","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"args_string":"(command)","source_link":null,"def":{"name":"validate!","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if {type: \"Bool\", default: \"false\", description: {\"--verbose, -v\", \"Display verbose informations during execution\"}, short: \"v\", long: \"verbose\", is_required: true}[:is_required] && @verbose.nil?\n  raise(Admiral::Error.new(\"Flag required: --verbose\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--no-color\", \"Cancel color output\"}, short: \"nil\", long: \"no-color\", is_required: true}[:is_required] && @no_color.nil?\n  raise(Admiral::Error.new(\"Flag required: --no-color\"))\nend\nif {type: \"Bool\", default: \"false\", description: {\"--help\", \"Displays help for the current command.\"}, short: \"nil\", long: \"help\", is_required: true}[:is_required] && @__help__.nil?\n  raise(Admiral::Error.new(\"Flag required: --help\"))\nend\nraise_extra_flags!(command)\n"}},{"id":"verbose-instance-method","html_id":"verbose-instance-method","name":"verbose","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"verbose","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verbose.not_nil!"}}],"macros":[],"types":[]}]}]}]},{"html_id":"github.com/anykeyh/clear/Clear/Enum","path":"Clear/Enum.html","kind":"struct","full_name":"Clear::Enum","name":"Enum","abstract":true,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Literal","kind":"module","full_name":"Clear::Expression::Literal","name":"Literal"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/enum/enum.cr","line_number":7,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Literal","kind":"module","full_name":"Clear::Expression::Literal","name":"Literal"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"Clear::Enum wrap the enums used in PostgreSQL.\nSee `Clear.enum` macro helper.","summary":"<p>Clear::Enum wrap the enums used in PostgreSQL.</p>","class_methods":[],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L12","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(x)-instance-method","html_id":"==(x)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L27","def":{"name":"==","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(super(x)) || (@value == x)"}},{"id":"to_json(x=nil):String-instance-method","html_id":"to_json(x=nil):String-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"nil","external_name":"x","restriction":""}],"args_string":"(x = <span class=\"n\">nil</span>) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L23","def":{"name":"to_json","args":[{"name":"x","doc":null,"default_value":"nil","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L15","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L19","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_sql"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Enum/Converter","path":"Clear/Enum/Converter.html","kind":"module","full_name":"Clear::Enum::Converter(T)","name":"Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/enum/enum.cr","line_number":31,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Enum","kind":"struct","full_name":"Clear::Enum","name":"Enum"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):T?-class-method","html_id":"to_column(x):T?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : T?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr#L32","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"case x\nwhen String\n  T.authorized_values[x]\nwhen Nil\n  nil\nelse\n  raise(converter_error(x.class.name, \"Enum: #{T.class.name}\"))\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","path":"Clear/ErrorMessages.html","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/error_messages.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"}],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Manager","kind":"class","full_name":"Clear::Migration::Manager","name":"Manager"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Column","kind":"class","full_name":"Clear::Model::Column(T, C)","name":"Column"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"This module list most of the runtime errors happening in Clear.\nIt's an attempt to make Clear user friendly by enabling advanced resolution\nof problems when they raise.","summary":"<p>This module list most of the runtime errors happening in Clear.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"build_error_message(message:String,ways_to_resolve:Tuple|Array=Tuple.new,manual_pages:Tuple|Array=Tuple.new)-instance-method","html_id":"build_error_message(message:String,ways_to_resolve:Tuple|Array=Tuple.new,manual_pages:Tuple|Array=Tuple.new)-instance-method","name":"build_error_message","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"ways_to_resolve","doc":null,"default_value":"Tuple.new","external_name":"ways_to_resolve","restriction":"Tuple | Array"},{"name":"manual_pages","doc":null,"default_value":"Tuple.new","external_name":"manual_pages","restriction":"Tuple | Array"}],"args_string":"(message : String, ways_to_resolve : Tuple | Array = <span class=\"t\">Tuple</span>.<span class=\"k\">new</span>, manual_pages : Tuple | Array = <span class=\"t\">Tuple</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L65","def":{"name":"build_error_message","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"ways_to_resolve","doc":null,"default_value":"Tuple.new","external_name":"ways_to_resolve","restriction":"Tuple | Array"},{"name":"manual_pages","doc":null,"default_value":"Tuple.new","external_name":"manual_pages","restriction":"Tuple | Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if flag?(:release) %}\n      message\n    {% else %}\n      format_width({\n        build_message(message),\n        build_tips(ways_to_resolve),\n        build_manual(manual_pages),\n        (\n          \"You may also have encountered a bug. \\n\"+\n          \"Feel free to submit an issue: \\n#{build_url(\"https://github.com/anykeyh/clear/issues/new\")}\"\n        ),\n        \"\\n\\nStack trace:\\n\"\n      }.join)\n    {% end %}"}},{"id":"converter_error(from,to)-instance-method","html_id":"converter_error(from,to)-instance-method","name":"converter_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(from, to)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L223","def":{"name":"converter_error","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Clear cannot convert from `#{from}` to #{to}.\", {\"Ensure your database column type matches the column declaration in Clear\"}, {\"model/Definition.md\"})"}},{"id":"format_width(x,w=80)-instance-method","html_id":"format_width(x,w=80)-instance-method","name":"format_width","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"w","doc":null,"default_value":"80","external_name":"w","restriction":""}],"args_string":"(x, w = <span class=\"n\">80</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L11","def":{"name":"format_width","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"w","doc":null,"default_value":"80","external_name":"w","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"counter = 0\no = [] of String\n(x.split(/([ \\n\\t])/)).each do |word|\n  case word\n  when \"\\n\"\n    o << word\n    counter = 0\n  else\n    counter = counter + word.size\n    if counter > w\n      o << \"\\n\"\n      if word == \" \"\n        counter = 0\n      else\n        o << word\n        counter = word.size\n      end\n    else\n      o << word\n    end\n  end\nend\no.join\n"}},{"id":"illegal_setter_access_to_undefined_column(name)-instance-method","html_id":"illegal_setter_access_to_undefined_column(name)-instance-method","name":"illegal_setter_access_to_undefined_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L191","def":{"name":"illegal_setter_access_to_undefined_column","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"You're trying to access to the column `#{name}` but it is not initialized.\", {\"Ensure that the column `#{name}` exists in your table\", \"If the model comes from a collection query, there was maybe a filtering on your `select` clause, \" + \"and you forgot to declare the column `#{name}`\", \"In the case of unpersisted models, please initialize by calling `#{name}=` first\", \"For validator, try `ensure_than` method, or use `#{name}_column.defined?` to avoid your validation code.\", \"Are you calling `#{name}_column.revert` somewhere before?\", \"If your model comes from JSON, please ensure the JSON source defines the column. Usage of `strict` mode will \" + \"trigger exception on JSON loading.\"}, {\"model/Definition.md\", \"model/Lifecycle.md\"})"}},{"id":"lack_of_primary_key(model_name)-instance-method","html_id":"lack_of_primary_key(model_name)-instance-method","name":"lack_of_primary_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"model_name","doc":null,"default_value":"","external_name":"model_name","restriction":""}],"args_string":"(model_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L232","def":{"name":"lack_of_primary_key","args":[{"name":"model_name","doc":null,"default_value":"","external_name":"model_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Model `#{model_name}` lacks of primary key field\", {\"Define a column as primary key\", \"Only one column can be primary key (no compound keys are allowed in Clear for now)\", \"You can use the helpers for primary key (see manual page)\"}, {\"model/PrimaryKeyTweaking.md\"})"}},{"id":"migration_already_down(number)-instance-method","html_id":"migration_already_down(number)-instance-method","name":"migration_already_down","doc":null,"summary":null,"abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"args_string":"(number)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L94","def":{"name":"migration_already_down","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Migration already down: #{number}\", {\"You're trying to force a migration which is not set in your database yet. \" + \"You should up the migration first, then down it again.\"}, {\"migration/Migration.md\"})"}},{"id":"migration_already_up(number)-instance-method","html_id":"migration_already_up(number)-instance-method","name":"migration_already_up","doc":null,"summary":null,"abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"args_string":"(number)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L82","def":{"name":"migration_already_up","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Migration already up: #{number}\", {\"You're trying to force a migration which is already existing in your database. \" + \"You should down the migration first, then up it again.\"}, {\"migration/Migration.md\"})"}},{"id":"migration_drop_irreversible(name)-instance-method","html_id":"migration_drop_irreversible(name)-instance-method","name":"migration_drop_irreversible","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L166","def":{"name":"migration_drop_irreversible","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Cannot revert column drop, because datatype is `unknown`\", {\"Add the optional previous data `type` argument in the operation `drop`:\" + \"`drop_column(table, column, type)`\"}, {\"migration/Migration.md\"})"}},{"id":"migration_irreversible(name=nil,operation=nil)-instance-method","html_id":"migration_irreversible(name=nil,operation=nil)-instance-method","name":"migration_irreversible","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"operation","doc":null,"default_value":"nil","external_name":"operation","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, operation = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L144","def":{"name":"migration_irreversible","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"operation","doc":null,"default_value":"nil","external_name":"operation","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"op_string = operation ? \"This is caused by the operation #{operation} which is irreversible.\" : nil\nmig_string = name ? \"The migration `#{name}` is irreversible. You're trying to down a migration which is not downable, \" + \"because the operations are one way only.\" : \"A migration is irreversible. You're trying to down a migration which is not downable, \" + \"because the operations are one way only.\"\nbuild_error_message(mig_string, [op_string, \"Build a way to revert the migration\", \"Do not revert the migration\", \"Maybe you need to manually flush the migration using Postgres. `__clear_metadatas` table store loaded \" + \"migrations. Good luck !\"].compact, {\"migration/Migration.md\"})\n"}},{"id":"migration_not_found(number)-instance-method","html_id":"migration_not_found(number)-instance-method","name":"migration_not_found","doc":null,"summary":null,"abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"args_string":"(number)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L106","def":{"name":"migration_not_found","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"The migration number `#{number}` is not found.\", {\"Ensure your migration files are required\", \"Number of the migrations can be found in the filename, \" + \"in the classname or in the `uid` method of the migration.\"}, {\"migration/Migration.md\"})"}},{"id":"migration_not_unique(numbers)-instance-method","html_id":"migration_not_unique(numbers)-instance-method","name":"migration_not_unique","doc":null,"summary":null,"abstract":false,"args":[{"name":"numbers","doc":null,"default_value":"","external_name":"numbers","restriction":""}],"args_string":"(numbers)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L178","def":{"name":"migration_not_unique","args":[{"name":"numbers","doc":null,"default_value":"","external_name":"numbers","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"The migration manage found collision on migration number. Migrations number are: #{numbers.join(\", \")}\", {\"It happens when migration share the same `uid`. Try to change the UID of one of your migrations\", \"By default, Clear has a `-1` migration used internally. Do not use this migration number.\", \"Migration numbers can be found in filename, classname or return of `uid` method\"}, {\"migration/Migration.md\"})"}},{"id":"no_migration_yet(version)-instance-method","html_id":"no_migration_yet(version)-instance-method","name":"no_migration_yet","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":""}],"args_string":"(version)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L119","def":{"name":"no_migration_yet","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"No migrations are registered yet, so we cannot go to version=#{version}\", {\"Ensure your migration files are required\", \"Ensure you have some migration files. Captain obvious to the rescue! ;-)\"}, {\"migration/Migration.md\"})"}},{"id":"null_column_mapping_error(name,type)-instance-method","html_id":"null_column_mapping_error(name,type)-instance-method","name":"null_column_mapping_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(name, type)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L210","def":{"name":"null_column_mapping_error","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Your field `#{name}` is declared as `#{type}` but `NULL` value has been found in the database.\", {\"In your model, declare your column `column #{name} : #{type}?` (note the `?` which allow nil value)\", \"In your database, adding `DEFAULT` value and/or `NOT NULL` constraint should disallow NULL fields \" + \"from your data.\"}, {\"model/Definition.md#presence-validation\"})"}},{"id":"order_by_error_invalid_order(current_order)-instance-method","html_id":"order_by_error_invalid_order(current_order)-instance-method","name":"order_by_error_invalid_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"current_order","doc":null,"default_value":"","external_name":"current_order","restriction":""}],"args_string":"(current_order)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L273","def":{"name":"order_by_error_invalid_order","args":[{"name":"current_order","doc":null,"default_value":"","external_name":"current_order","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Order by allow only ASC and DESC directions. But #{current_order} was given.\", {\"Ensure to use :asc, :desc symbol (or string) when constructing your query.\", \"If the code is dynamic, force the casting to one of the two value above, to avoid SQL injection.\"}, {\"querying/RequestBuilding.md\"})"}},{"id":"polymorphic_nil(through)-instance-method","html_id":"polymorphic_nil(through)-instance-method","name":"polymorphic_nil","doc":null,"summary":null,"abstract":false,"args":[{"name":"through","doc":null,"default_value":"","external_name":"through","restriction":""}],"args_string":"(through)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L243","def":{"name":"polymorphic_nil","args":[{"name":"through","doc":null,"default_value":"","external_name":"through","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Impossible to instantiate polymorphic object, because the type given by the data is nil.\", {\"The column `#{through}` contains NULL value, but is set as storage for \" + \"the type of the polymorphic object.\", \"Try to set DEFAULT value for your column `#{through}`\", \"In case of new implementation of polymorphic system, we recommend you to update the column to the previous \" + \"Class value. Value must be equal to the fully qualified model class name in Crystal (e.g. `MyApp::MyModel`)\"}, {\"model/Polymorphism.md\"})"}},{"id":"polymorphic_unknown_class(class_name)-instance-method","html_id":"polymorphic_unknown_class(class_name)-instance-method","name":"polymorphic_unknown_class","doc":null,"summary":null,"abstract":false,"args":[{"name":"class_name","doc":null,"default_value":"","external_name":"class_name","restriction":""}],"args_string":"(class_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L256","def":{"name":"polymorphic_unknown_class","args":[{"name":"class_name","doc":null,"default_value":"","external_name":"class_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"Impossible to instantiate a new `#{class_name}` using polymorphism.\", {((\"Ensure the type is properly setup in your `polymorphic` helper. \" + \"Any model which can exists in your database needs to manually be setup as in the example below:\\n\") + \"`polymorphic Dog, Cat, through: \\\"type\\\"`\\n\") + \"In this case, if you have a `Cow` object in your database, then add it in the list of allowed polymorphic objects.\", (\"Ensure the name match a fully qualified, with full path, Clear model:\\n\" + \"`polymorphic ::Animal::Dog, ::Animal::Cat, through: \\\"type\\\"`\\n\") + \"The column should then contains `Animal::Dog` and not `Dog`\"}, {\"model/Polymorphism.md\"})"}},{"id":"query_building_error(message)-instance-method","html_id":"query_building_error(message)-instance-method","name":"query_building_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(message)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L285","def":{"name":"query_building_error","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::QueryBuildingError.new(build_error_message({\"You're trying to construct an invalid SQL request:\\n\", message}.join, manual_pages: {\"querying/RequestBuilding.md\"}))"}},{"id":"uid_not_found(class_name)-instance-method","html_id":"uid_not_found(class_name)-instance-method","name":"uid_not_found","doc":null,"summary":null,"abstract":false,"args":[{"name":"class_name","doc":null,"default_value":"","external_name":"class_name","restriction":""}],"args_string":"(class_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L131","def":{"name":"uid_not_found","args":[{"name":"class_name","doc":null,"default_value":"","external_name":"class_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"I don't know how to order the migration `#{class_name}`\", {\"Rename your migration class to have the migration UID at the end of the class name\", \"Rename the file where your migration stand to have the migration UID in front of the filename\", \"Override the method `uid`. Be sure the number is immutable (e.g. return constant)\"}, {\"migration/Migration.md\"})"}},{"id":"uninitialized_db_connection(connection)-instance-method","html_id":"uninitialized_db_connection(connection)-instance-method","name":"uninitialized_db_connection","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":""}],"args_string":"(connection)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/error_messages.cr#L292","def":{"name":"uninitialized_db_connection","args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"build_error_message(\"You're trying to access the connection #{connection} which is not initialized\", {\"Use `Clear::SQL.init(#{connection}: \\\"postgres://XXX...\\\" )` on startup of your application\", \"The name of the connection (#{connection}) can't be found. It may have been mistyped.\"}, {\"Setup.md\", \"model/MultiConnection.md\"})"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression","path":"Clear/Expression.html","kind":"class","full_name":"Clear::Expression","name":"Expression","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/expression.cr","line_number":55,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DATABASE_DATE_FORMAT","name":"DATABASE_DATE_FORMAT","value":"\"%Y-%m-%d\"","doc":null,"summary":null},{"id":"DATABASE_DATE_TIME_FORMAT","name":"DATABASE_DATE_TIME_FORMAT","value":"\"%Y-%m-%d %H:%M:%S.%L %:z\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"##\n## Clear's Expression engine\n\nThe goal of this module is to offer the most natural way to write down your\nquery in crystal.\n\nIf you're familiar with Sequel on Ruby, then here you have !\n\nInstead of writing:\n\n```\nmodel_collection.where(\"created_at BETWEEN ? AND ?\", 1.day.ago, DateTime.now)\n```\n\nYou can write:\n```\nmodel_collection.where { created_at.between(1.day.ago, DateTime.now) }\n```\n\nor even:\n```\nmodel_collection.where { created_at.in?(1.day.ago..DateTime.now) }\n```\n\n(Note for the later, it will generate `created_at > 1.day.ago AND created_at < DateTime.now`)\n\n## Limitations\n\nDue to the use of `missing_method` macro, some case can be confusing.\n\n### Existing local variable / instance method\n\n```\nid = 1\nmodel_collection.where { id > 100 } # Will raise an error, because the expression is resolved by Crystal !\n# Should be:\nid = 1\nmodel_collection.where { var(\"id\") > 100 } # Will works\n```\n\n### Usage of AND / OR\n\nAnd/Or can be used using the bitwises operators `&` and `|`.\nDue to the impossibility to reuse `||` and `&&`, beware the operator precendance\nrules are changed.\n\n```crystal\n# v-- This below will not works, as we cannot redefine the `or` operator\nmodel_collection.where { first_name == \"yacine\" || last_name == \"petitprez\" }\n# v-- This will works, but beware of the parenthesis between each terms, as `|` is prioritary on `==`\nmodel.collection.where { (firt_name == \"yacine\") | (last_name == \"petitprez\") }\n# ^-- ... WHERE first_name = 'yacine' OR last_name == ''\n```\n","summary":"<h2>## Clear's Expression engine</h2>","class_methods":[{"id":"[](arg)-class-method","html_id":"[](arg)-class-method","name":"[]","doc":"A fast way to call `self.safe_literal`\nSee `safe_literal(x : _)`","summary":"<p>A fast way to call <code>self<a href=\"../Clear/Expression.html#safe_literal%28x%3ATime%2Cdate%3ABool%3Dfalse%29%3AString-class-method\">.safe_literal</a></code> See <code><a href=\"../Clear/Expression.html#safe_literal%28x%3AEnumerable%28AvailableLiteral%29%29%3AEnumerable%28String%29-class-method\">.safe_literal(x : _)</a></code></p>","abstract":false,"args":[{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""}],"args_string":"(arg)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L97","def":{"name":"[]","args":[{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"safe_literal(arg)"}},{"id":"ensure_node!(any)-class-method","html_id":"ensure_node!(any)-class-method","name":"ensure_node!","doc":"This method will raise error on compilation if discovered in the code.\nThis allow to avoid issues like this one at compile type:\n\n```crystal\nid = 1\n# ... and later\nUser.query.where { id == 2 }\n```\n\nIn this case, the local var id will be evaluated in the expression engine.\nleading to buggy code.\n\nHaving this method prevent the code to compile.\n\nTo be able to pass a literal or values other than node, please use `raw`\nmethod.\n","summary":"<p>This method will raise error on compilation if discovered in the code.</p>","abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":""}],"args_string":"(any)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L187","def":{"name":"ensure_node!","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% raise(((((\"The expression engine discovered a runtime-evaluable condition.\\n\" + \"It happens when a test is done with values on both sides.\\n\") + \"Maybe a local variable is breaking the expression engine like here:\\n\") + \"id = 1\\n\") + \"Users.where{ id == nil }\\n\\n\") + \"In this case, please use `raw(\\\"id IS NULL\\\")` to allow the expression.\") %}"}},{"id":"safe_literal(x:Time,date:Bool=false):String-class-method","html_id":"safe_literal(x:Time,date:Bool=false):String-class-method","name":"safe_literal","doc":"Safe literal of a time return a string representation of time in the format understood by postgresql.\n\nIf the optional parameter `date` is passed, the time is truncated and only the date is passed:\n\n## Example\n```\nClear::Expression[Time.now]             # < \"2017-04-03 23:04:43.234 +08:00\"\nClear::Expression[Time.now, date: true] # < \"2017-04-03\"\n```","summary":"<p>Safe literal of a time return a string representation of time in the format understood by postgresql.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Time"},{"name":"date","doc":null,"default_value":"false","external_name":"date","restriction":"Bool"}],"args_string":"(x : Time, date : Bool = <span class=\"n\">false</span>) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L146","def":{"name":"safe_literal","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Time"},{"name":"date","doc":null,"default_value":"false","external_name":"date","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"{\"'\", x.to_utc.to_s(date ? DATABASE_DATE_FORMAT : DATABASE_DATE_TIME_FORMAT), \"'\"}.join"}},{"id":"safe_literal(x:Enumerable(AvailableLiteral)):Enumerable(String)-class-method","html_id":"safe_literal(x:Enumerable(AvailableLiteral)):Enumerable(String)-class-method","name":"safe_literal","doc":"Transform multiple objects into a string which is SQL-Injection safe.","summary":"<p>Transform multiple objects into a string which is SQL-Injection safe.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Enumerable(AvailableLiteral)"}],"args_string":"(x : Enumerable(AvailableLiteral)) : Enumerable(String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L127","def":{"name":"safe_literal","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Enumerable(AvailableLiteral)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Enumerable(String)","visibility":"Public","body":"x.map do |item|\n  self.safe_literal(item)\nend"}},{"id":"safe_literal(x:UNDERSCORE):String-class-method","html_id":"safe_literal(x:UNDERSCORE):String-class-method","name":"safe_literal","doc":"Sanitize an object and return a `String` representation of itself which is proofed against SQL injections.","summary":"<p>Sanitize an object and return a <code>String</code> representation of itself which is proofed against SQL injections.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"_"}],"args_string":"(x : UNDERSCORE) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L166","def":{"name":"safe_literal","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"self.safe_literal(x.to_s)"}},{"id":"unsafe(x)-class-method","html_id":"unsafe(x)-class-method","name":"unsafe","doc":"Return unsafe string injected to the query.\n  can be used for example in `insert` query building","summary":"<p>Return unsafe string injected to the query.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L133","def":{"name":"unsafe","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Expression::UnsafeSql.new(x)"}},{"id":"where(&block):Node-class-method","html_id":"where(&amp;block):Node-class-method","name":"where","doc":"Return a node of the expression engine\nThis node can then be combined with others node\nin case of chain request creation `where{...}.where{...}`\nthrough the chaining engine","summary":"<p>Return a node of the expression engine This node can then be combined with others node in case of chain request creation <code>where{...}<a href=\"../Clear/Expression.html#where%28%26block%29%3ANode-class-method\">.where</a>{...}</code> through the chaining engine</p>","abstract":false,"args":[],"args_string":"(&block) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L206","def":{"name":"where","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"Node","visibility":"Public","body":"expression_engine = self.new\nensure_node!(with expression_engine yield)\n"}}],"constructors":[],"instance_methods":[{"id":"not(x:Node)-instance-method","html_id":"not(x:Node)-instance-method","name":"not","doc":"`NOT` operator\n\nReturn an logically reversed version of the contained `Node`\n\n## Example\n\n```\nClear::Expression.where { not(a == b) }.resolve # >> \"WHERE NOT( a = b )\n```","summary":"<p><code>NOT</code> operator</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Node"}],"args_string":"(x : Node)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L221","def":{"name":"not","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::Not.new(x)"}},{"id":"op(a:Node|AvailableLiteral,b:Node|AvailableLiteral,op:String)-instance-method","html_id":"op(a:Node|AvailableLiteral,b:Node|AvailableLiteral,op:String)-instance-method","name":"op","doc":"Because many postgresql operators are not transcriptable in Crystal lang,\nthis helpers helps to write the expressions:\n\n```crystal\nwhere { op(jsonb_field, \"something\", \"?\") } #<< Return \"jsonb_field ? 'something'\"\n```\n","summary":"<p>Because many postgresql operators are not transcriptable in Crystal lang, this helpers helps to write the expressions:</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node | AvailableLiteral"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Node | AvailableLiteral"},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"String"}],"args_string":"(a : Node | AvailableLiteral, b : Node | AvailableLiteral, op : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L282","def":{"name":"op","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node | AvailableLiteral"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Node | AvailableLiteral"},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.is_a?(AvailableLiteral)\n  a = Node::Literal.new(a)\nend\nif b.is_a?(AvailableLiteral)\n  b = Node::Literal.new(b)\nend\nNode::DoubleOperator.new(a, b, op)\n"}},{"id":"raw(x:String,*args)-instance-method","html_id":"raw(x:String,*args)-instance-method","name":"raw","doc":"In case the name of the variable is a reserved word (e.g. `not`, `var`, `raw` )\nor in case of a complex piece of computation impossible to express with the expression engine\n(e.g. usage of functions) you can use then raw to pass the String.\n\nBE AWARE than the String is pasted AS-IS and can lead to SQL injection if not used properly.\n\n```\nhaving { raw(\"COUNT(*)\") > 5 } # SELECT ... FROM ... HAVING COUNT(*) > 5\nwhere { raw(\"func(?, ?) = ?\", a, b, c) } # SELECT ... FROM ... WHERE function(a, b) = c\n```\n\n","summary":"<p>In case the name of the variable is a reserved word (e.g.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(x : String, *args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L237","def":{"name":"raw","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"idx = -1\nclause = x.gsub(\"?\") do |_|\n  begin\n    Clear::Expression[args[idx = idx + 1]]\n  rescue e : IndexError\n    raise(Clear::ErrorMessages.query_building_error(e.message))\n  end\nend\nNode::Raw.new(clause)\n"}},{"id":"var(*parts)-instance-method","html_id":"var(*parts)-instance-method","name":"var","doc":"Use var to create expression of variable. Variables are columns with or without the namespace and tablename:\n\nIt escapes each part of the expression with double-quote as requested by PostgreSQL.\nThis is useful to escape SQL keywords or `.` and `\"` character in the name of a column.\n\n```crystal\n  var(\"template1\", \"users\", \"name\") # \"template1\".\"users\".\"name\"\n  var(\"template1\", \"users.table2\", \"name\") # \"template1\".\"users.table2\".\"name\"\n  var(\"order\") # \"order\"\n```\n","summary":"<p>Use var to create expression of variable.</p>","abstract":false,"args":[{"name":"parts","doc":null,"default_value":"","external_name":"parts","restriction":""}],"args_string":"(*parts)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L262","def":{"name":"var","args":[{"name":"parts","doc":null,"default_value":"","external_name":"parts","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_var(parts)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/AvailableLiteral","path":"Clear/Expression/AvailableLiteral.html","kind":"alias","full_name":"Clear::Expression::AvailableLiteral","name":"AvailableLiteral","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/expression/expression.cr","line_number":91,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Bool | Clear::Expression::Literal | Float32 | Float64 | Int16 | Int32 | Int64 | Int8 | String | Symbol | Time | UInt16 | UInt32 | UInt64 | UInt8 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression","kind":"class","full_name":"Clear::Expression","name":"Expression"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB","path":"Clear/Expression/JSONB.html","kind":"module","full_name":"Clear::Expression::JSONB","name":"JSONB","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/jsonb/node.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/node.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression","kind":"class","full_name":"Clear::Expression","name":"Expression"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","path":"Clear/Expression/JSONB/Node.html","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/jsonb/node.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/node.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB","kind":"module","full_name":"Clear::Expression::JSONB","name":"JSONB"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"jsonb(key:String)-instance-method","html_id":"jsonb(key:String)-instance-method","name":"jsonb","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/node.cr#L21","def":{"name":"jsonb","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Expression::Node::JSONB::Field.new(self, key)"}},{"id":"jsonb_all_keys_exists?(keys:Array(T))forallT-instance-method","html_id":"jsonb_all_keys_exists?(keys:Array(T))forallT-instance-method","name":"jsonb_all_keys_exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(T)"}],"args_string":"(keys : Array(T)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/node.cr#L17","def":{"name":"jsonb_all_keys_exists?","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_jsonb_keys_exists(keys, \"?&\")"}},{"id":"jsonb_any_key_exists?(keys:Array(T))forallT-instance-method","html_id":"jsonb_any_key_exists?(keys:Array(T))forallT-instance-method","name":"jsonb_any_key_exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(T)"}],"args_string":"(keys : Array(T)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/node.cr#L13","def":{"name":"jsonb_any_key_exists?","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_jsonb_keys_exists(keys, \"?|\")"}},{"id":"jsonb_key_exists?(key:String)-instance-method","html_id":"jsonb_key_exists?(key:String)-instance-method","name":"jsonb_key_exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/node.cr#L2","def":{"name":"jsonb_key_exists?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Expression::Node::DoubleOperator.new(self, Clear::Expression::Node::Literal.new(key), \"?\")"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Literal","path":"Clear/Expression/Literal.html","kind":"module","full_name":"Clear::Expression::Literal","name":"Literal","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/expression/expression.cr","line_number":62,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Enum","kind":"struct","full_name":"Clear::Enum","name":"Enum"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/UnsafeSql","kind":"class","full_name":"Clear::Expression::UnsafeSql","name":"UnsafeSql"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression","kind":"class","full_name":"Clear::Expression","name":"Expression"},"doc":"Allow any type to be used into the expression engine\n  by including the module Clear::Expression::Literal\n  and defining the method `to_sql`.","summary":"<p>Allow any type to be used into the expression engine   by including the module Clear::Expression::Literal   and defining the method <code><a href=\"../../Clear/Expression/Literal.html#to_sql-instance-method\">#to_sql</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_json(x)-instance-method","html_id":"to_json(x)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":true,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L64","def":{"name":"to_json","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L63","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","path":"Clear/Expression/Node.html","kind":"class","full_name":"Clear::Expression::Node","name":"Node","abstract":true,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/node.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr"},{"filename":"clear/extensions/jsonb/jsonb.cr","line_number":145,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Between","kind":"class","full_name":"Clear::Expression::Node::Between","name":"Between"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/DoubleOperator","kind":"class","full_name":"Clear::Expression::Node::DoubleOperator","name":"DoubleOperator"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Function","kind":"class","full_name":"Clear::Expression::Node::Function","name":"Function"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/InArray","kind":"class","full_name":"Clear::Expression::Node::InArray","name":"InArray"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/InRange","kind":"class","full_name":"Clear::Expression::Node::InRange","name":"InRange"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/InSelect","kind":"class","full_name":"Clear::Expression::Node::InSelect","name":"InSelect"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB/Equality","kind":"class","full_name":"Clear::Expression::Node::JSONB::Equality","name":"Equality"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB/Field","kind":"class","full_name":"Clear::Expression::Node::JSONB::Field","name":"Field"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Literal","kind":"class","full_name":"Clear::Expression::Node::Literal","name":"Literal"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Minus","kind":"class","full_name":"Clear::Expression::Node::Minus","name":"Minus"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Not","kind":"class","full_name":"Clear::Expression::Node::Not","name":"Not"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/NotBetween","kind":"class","full_name":"Clear::Expression::Node::NotBetween","name":"NotBetween"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Null","kind":"class","full_name":"Clear::Expression::Node::Null","name":"Null"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/PGArray","kind":"class","full_name":"Clear::Expression::Node::PGArray(T)","name":"PGArray"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Raw","kind":"class","full_name":"Clear::Expression::Node::Raw","name":"Raw"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Variable","kind":"class","full_name":"Clear::Expression::Node::Variable","name":"Variable"}],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression","kind":"class","full_name":"Clear::Expression","name":"Expression"},"doc":"Mother class of all the rendering nodes","summary":"<p>Mother class of all the rendering nodes</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"!=(any:Node):Node-instance-method","html_id":"!=(any:Node):Node-instance-method","name":"!=","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L49","def":{"name":"!=","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"<>\")"}},{"id":"!=(any:T):NodeforallT-instance-method","html_id":"!=(any:T):NodeforallT-instance-method","name":"!=","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L49","def":{"name":"!=","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"<>\")"}},{"id":"!=(some_nil:Nil):Node-instance-method","html_id":"!=(some_nil:Nil):Node-instance-method","name":"!=","doc":null,"summary":null,"abstract":false,"args":[{"name":"some_nil","doc":null,"default_value":"","external_name":"some_nil","restriction":"Nil"}],"args_string":"(some_nil : Nil) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L49","def":{"name":"!=","args":[{"name":"some_nil","doc":null,"default_value":"","external_name":"some_nil","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Null.new, \"IS NOT\")"}},{"id":"!~(regexp:Regex):Node-instance-method","html_id":"!~(regexp:Regex):Node-instance-method","name":"!~","doc":null,"summary":null,"abstract":false,"args":[{"name":"regexp","doc":null,"default_value":"","external_name":"regexp","restriction":"Regex"}],"args_string":"(regexp : Regex) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L41","def":{"name":"!~","args":[{"name":"regexp","doc":null,"default_value":"","external_name":"regexp","restriction":"Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"if regexp.options.ignore_case?\n  Node::DoubleOperator.new(self, Literal.new(regexp.source), \"!~*\")\nelse\n  Node::DoubleOperator.new(self, Literal.new(regexp.source), \"!~\")\nend"}},{"id":"!~(any:Node):Node-instance-method","html_id":"!~(any:Node):Node-instance-method","name":"!~","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L29","def":{"name":"!~","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"!~\")"}},{"id":"&(any:T):NodeforallT-instance-method","html_id":"&amp;(any:T):NodeforallT-instance-method","name":"&","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L53","def":{"name":"&","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"AND\")"}},{"id":"&(any:Node):Node-instance-method","html_id":"&amp;(any:Node):Node-instance-method","name":"&","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L53","def":{"name":"&","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"AND\")"}},{"id":"*(any:T):NodeforallT-instance-method","html_id":"*(any:T):NodeforallT-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":"*","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"*\")"}},{"id":"*(any:Node):Node-instance-method","html_id":"*(any:Node):Node-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":"*","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"*\")"}},{"id":"+(any:Node):Node-instance-method","html_id":"+(any:Node):Node-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":"+","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"+\")"}},{"id":"+(any:T):NodeforallT-instance-method","html_id":"+(any:T):NodeforallT-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":"+","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"+\")"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L78","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::Minus.new(self)"}},{"id":"-(any:T):NodeforallT-instance-method","html_id":"-(any:T):NodeforallT-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":"-","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"-\")"}},{"id":"-(any:Node):Node-instance-method","html_id":"-(any:Node):Node-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":"-","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"-\")"}},{"id":"/(any:Node):Node-instance-method","html_id":"/(any:Node):Node-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":"/","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"/\")"}},{"id":"/(any:T):NodeforallT-instance-method","html_id":"/(any:T):NodeforallT-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":"/","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"/\")"}},{"id":"<(any:T):NodeforallT-instance-method","html_id":"&lt;(any:T):NodeforallT-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":"<","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"<\")"}},{"id":"<(any:Node):Node-instance-method","html_id":"&lt;(any:Node):Node-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":"<","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"<\")"}},{"id":"<=(any:T):NodeforallT-instance-method","html_id":"&lt;=(any:T):NodeforallT-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":"<=","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"<=\")"}},{"id":"<=(any:Node):Node-instance-method","html_id":"&lt;=(any:Node):Node-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":"<=","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"<=\")"}},{"id":"==(some_nil:Nil):Node-instance-method","html_id":"==(some_nil:Nil):Node-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"some_nil","doc":null,"default_value":"","external_name":"some_nil","restriction":"Nil"}],"args_string":"(some_nil : Nil) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L50","def":{"name":"==","args":[{"name":"some_nil","doc":null,"default_value":"","external_name":"some_nil","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Null.new, \"IS\")"}},{"id":"==(any:T):NodeforallT-instance-method","html_id":"==(any:T):NodeforallT-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L50","def":{"name":"==","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"=\")"}},{"id":"==(any:Node):Node-instance-method","html_id":"==(any:Node):Node-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L50","def":{"name":"==","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"=\")"}},{"id":"=~(any:Node):Node-instance-method","html_id":"=~(any:Node):Node-instance-method","name":"=~","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L25","def":{"name":"=~","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"~\")"}},{"id":"=~(regexp:Regex):Node-instance-method","html_id":"=~(regexp:Regex):Node-instance-method","name":"=~","doc":null,"summary":null,"abstract":false,"args":[{"name":"regexp","doc":null,"default_value":"","external_name":"regexp","restriction":"Regex"}],"args_string":"(regexp : Regex) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L33","def":{"name":"=~","args":[{"name":"regexp","doc":null,"default_value":"","external_name":"regexp","restriction":"Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"if regexp.options.ignore_case?\n  Node::DoubleOperator.new(self, Literal.new(regexp.source), \"~*\")\nelse\n  Node::DoubleOperator.new(self, Literal.new(regexp.source), \"~\")\nend"}},{"id":">(any:Node):Node-instance-method","html_id":"&gt;(any:Node):Node-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":">","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \">\")"}},{"id":">(any:T):NodeforallT-instance-method","html_id":"&gt;(any:T):NodeforallT-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":">","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \">\")"}},{"id":">=(any:T):NodeforallT-instance-method","html_id":"&gt;=(any:T):NodeforallT-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":null,"def":{"name":">=","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \">=\")"}},{"id":">=(any:Node):Node-instance-method","html_id":"&gt;=(any:Node):Node-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":null,"def":{"name":">=","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \">=\")"}},{"id":"between(a,b)-instance-method","html_id":"between(a,b)-instance-method","name":"between","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L74","def":{"name":"between","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::Between.new(self, a, b)"}},{"id":"ilike(any:Node):Node-instance-method","html_id":"ilike(any:Node):Node-instance-method","name":"ilike","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L52","def":{"name":"ilike","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"ILIKE\")"}},{"id":"ilike(any:T):NodeforallT-instance-method","html_id":"ilike(any:T):NodeforallT-instance-method","name":"ilike","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L52","def":{"name":"ilike","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"ILIKE\")"}},{"id":"in?(request:Clear::SQL::SelectBuilder)-instance-method","html_id":"in?(request:Clear::SQL::SelectBuilder)-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"::Clear::SQL::SelectBuilder"}],"args_string":"(request : Clear::SQL::SelectBuilder)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L70","def":{"name":"in?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"::Clear::SQL::SelectBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::InSelect.new(self, request)"}},{"id":"in?(range:Range(B,E))forallB,E-instance-method","html_id":"in?(range:Range(B,E))forallB,E-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(B, E)"}],"args_string":"(range : Range(B, E)) forall B, E","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L56","def":{"name":"in?","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(B, E)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::InRange.new(self, Clear::Expression[range.begin]..Clear::Expression[range.end], range.exclusive?)"}},{"id":"in?(arr:Array(T))forallT-instance-method","html_id":"in?(arr:Array(T))forallT-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(T)"}],"args_string":"(arr : Array(T)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L62","def":{"name":"in?","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::InArray.new(self, arr.map do |x|\n  Clear::Expression[x]\nend)"}},{"id":"in?(tuple:Tuple(*T))forallT-instance-method","html_id":"in?(tuple:Tuple(*T))forallT-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple(*T)"}],"args_string":"(tuple : Tuple(<span class=\"o\">*</span><span class=\"t\">T</span>)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L66","def":{"name":"in?","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple(*T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"in?(tuple.to_a)"}},{"id":"like(any:Node):Node-instance-method","html_id":"like(any:Node):Node-instance-method","name":"like","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L51","def":{"name":"like","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"LIKE\")"}},{"id":"like(any:T):NodeforallT-instance-method","html_id":"like(any:T):NodeforallT-instance-method","name":"like","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L51","def":{"name":"like","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"LIKE\")"}},{"id":"resolve:String-instance-method","html_id":"resolve:String-instance-method","name":"resolve","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L86","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"|(any:T):NodeforallT-instance-method","html_id":"|(any:T):NodeforallT-instance-method","name":"|","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"args_string":"(any : T) : Node forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L54","def":{"name":"|","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, Literal.new(any), \"OR\")"}},{"id":"|(any:Node):Node-instance-method","html_id":"|(any:Node):Node-instance-method","name":"|","doc":null,"summary":null,"abstract":false,"args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"args_string":"(any : Node) : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L54","def":{"name":"|","args":[{"name":"any","doc":null,"default_value":"","external_name":"any","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"Node::DoubleOperator.new(self, any, \"OR\")"}},{"id":"~-instance-method","html_id":"~-instance-method","name":"~","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L82","def":{"name":"~","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::Not.new(self)"}}],"macros":[{"id":"define_operator(op_name,sql_name,null=false)-macro","html_id":"define_operator(op_name,sql_name,null=false)-macro","name":"define_operator","doc":null,"summary":null,"abstract":false,"args":[{"name":"op_name","doc":null,"default_value":"","external_name":"op_name","restriction":""},{"name":"sql_name","doc":null,"default_value":"","external_name":"sql_name","restriction":""},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":""}],"args_string":"(op_name, sql_name, null = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/node.cr#L5","def":{"name":"define_operator","args":[{"name":"op_name","doc":null,"default_value":"","external_name":"op_name","restriction":""},{"name":"sql_name","doc":null,"default_value":"","external_name":"sql_name","restriction":""},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ op_name.id }}\n(any : Node) : Node\n      Node::DoubleOperator.new(self, any, \"\n{{ sql_name.id }}\n\")\n    \nend\n\n    \n{% if null %}\n      def {{ op_name.id }}(some_nil : Nil) : Node\n        Node::DoubleOperator.new(self, Null.new, {{ null }} )\n      end\n    {% end %}\n\n\n    def \n{{ op_name.id }}\n(any : T) : Node forall T\n      Node::DoubleOperator.new(self, Literal.new(any), \"\n{{ sql_name.id }}\n\")\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Between","path":"Clear/Expression/Node/Between.html","kind":"class","full_name":"Clear::Expression::Node::Between","name":"Between","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/between.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/between.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the rendering of `(var BETWEEN a AND b)`\nexpressions.","summary":"<p>A node managing the rendering of <code>(var BETWEEN a AND b)</code> expressions.</p>","class_methods":[],"constructors":[{"id":"new(target:Node,starts:BetweenType,ends:BetweenType)-class-method","html_id":"new(target:Node,starts:BetweenType,ends:BetweenType)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"starts","doc":null,"default_value":"","external_name":"starts","restriction":"BetweenType"},{"name":"ends","doc":null,"default_value":"","external_name":"ends","restriction":"BetweenType"}],"args_string":"(target : Node, starts : BetweenType, ends : BetweenType)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/between.cr#L8","def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"starts","doc":null,"default_value":"","external_name":"starts","restriction":"BetweenType"},{"name":"ends","doc":null,"default_value":"","external_name":"ends","restriction":"BetweenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target, starts, ends)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/between.cr#L11","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"(\", @target.resolve, \" BETWEEN \", Clear::Expression.safe_literal(@starts), \" AND \", Clear::Expression.safe_literal(@ends), \")\"}.join"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Between/BetweenType","path":"Clear/Expression/Node/Between/BetweenType.html","kind":"alias","full_name":"Clear::Expression::Node::Between::BetweenType","name":"BetweenType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/expression/nodes/between.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/between.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Clear::Expression::Node | Float32 | Float64 | Int32 | Int64 | String | Time)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Between","kind":"class","full_name":"Clear::Expression::Node::Between","name":"Between"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/DoubleOperator","path":"Clear/Expression/Node/DoubleOperator.html","kind":"class","full_name":"Clear::Expression::Node::DoubleOperator","name":"DoubleOperator","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/double_operator.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/double_operator.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the rendering of\ncombination operations like `<val1> <op> <val2>`","summary":"<p>A node managing the rendering of combination operations like <code><val1> <op> <val2></code></p>","class_methods":[],"constructors":[{"id":"new(a:Node,b:Node,op:String)-class-method","html_id":"new(a:Node,b:Node,op:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Node"},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"String"}],"args_string":"(a : Node, b : Node, op : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/double_operator.cr#L6","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Node"},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(a, b, op)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/double_operator.cr#L8","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"(\", @a.resolve, \" \", @op, \" \", @b.resolve, \")\"}.join"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Function","path":"Clear/Expression/Node/Function.html","kind":"class","full_name":"Clear::Expression::Node::Function","name":"Function","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/function.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/function.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the rendering of functions in Postgres.","summary":"<p>A node managing the rendering of functions in Postgres.</p>","class_methods":[],"constructors":[{"id":"new(name:String,args:Array(String))-class-method","html_id":"new(name:String,args:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"args_string":"(name : String, args : Array(String))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/function.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/function.cr#L7","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@name, \"(\", @args.join(\", \"), \")\"}.join"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/InArray","path":"Clear/Expression/Node/InArray.html","kind":"class","full_name":"Clear::Expression::Node::InArray","name":"InArray","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/in_array.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_array.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the rendering of array in Postgres.\n- It renders `val IN (...)`.\n- If the array passed as argument is empty, it renders `FALSE` instead.","summary":"<p>A node managing the rendering of array in Postgres.</p>","class_methods":[],"constructors":[{"id":"new(target:Node,array:Array(String))-class-method","html_id":"new(target:Node,array:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(String)"}],"args_string":"(target : Node, array : Array(String))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_array.cr#L7","def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target, array)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_array.cr#L9","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @array.size == 0\n  \"FALSE\"\nelse\n  {@target.resolve, \" IN (\", @array.join(\", \"), \")\"}.join\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/InRange","path":"Clear/Expression/Node/InRange.html","kind":"class","full_name":"Clear::Expression::Node::InRange","name":"InRange","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/in_range.cr","line_number":19,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_range.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the rendering a range in Postgres.\n\nExample:\n\n```crystal\nvalue.in?(1..5)\n```\n\nwill render:\n\n```crystal\nvalue >= 1 AND value < 5\n```\n\nInclusion and exclusion of the last number of the range is featured\n","summary":"<p>A node managing the rendering a range in Postgres.</p>","class_methods":[],"constructors":[{"id":"new(target:Node,range:Range(String,String),exclusive=false)-class-method","html_id":"new(target:Node,range:Range(String,String),exclusive=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(String, String)"},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""}],"args_string":"(target : Node, range : Range(String, String), exclusive = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_range.cr#L20","def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(String, String)"},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target, range, exclusive)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_range.cr#L22","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rt = @target.resolve\nfinal_op = @exclusive ? \" < \" : \" <= \"\n{\"(\", rt, \" >= \", @range.begin, \" AND \", rt, final_op, @range.end, \")\"}.join\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/InSelect","path":"Clear/Expression/Node/InSelect.html","kind":"class","full_name":"Clear::Expression::Node::InSelect","name":"InSelect","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/in_select.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_select.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":" A node managing the rendering of `value IN ( <SUBQUERY> )`","summary":"<p>A node managing the rendering of <code>value IN ( <SUBQUERY> )</code></p>","class_methods":[],"constructors":[{"id":"new(target:Node,select__arg0:Clear::SQL::SelectBuilder)-class-method","html_id":"new(target:Node,select__arg0:Clear::SQL::SelectBuilder)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"__arg0","doc":null,"default_value":"","external_name":"select","restriction":"Clear::SQL::SelectBuilder"}],"args_string":"(target : Node, select __arg0 : Clear::SQL::SelectBuilder)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_select.cr#L5","def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"__arg0","doc":null,"default_value":"","external_name":"select","restriction":"Clear::SQL::SelectBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target, __arg0)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/in_select.cr#L7","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@target.resolve, \" IN (\", @select.to_sql, \")\"}.join"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB","path":"Clear/Expression/Node/JSONB.html","kind":"module","full_name":"Clear::Expression::Node::JSONB","name":"JSONB","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/jsonb/expression.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB/Equality","path":"Clear/Expression/Node/JSONB/Equality.html","kind":"class","full_name":"Clear::Expression::Node::JSONB::Equality","name":"Equality","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/jsonb/expression.cr","line_number":35,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB","kind":"module","full_name":"Clear::Expression::Node::JSONB","name":"JSONB"},"doc":"Define a __value contains?__ operation between a jsonb column and a json hash","summary":"<p>Define a <strong>value contains?</strong> operation between a jsonb column and a json hash</p>","class_methods":[],"constructors":[{"id":"new(jsonb_field,value)-class-method","html_id":"new(jsonb_field,value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"jsonb_field","doc":null,"default_value":"","external_name":"jsonb_field","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(jsonb_field, value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L41","def":{"name":"new","args":[{"name":"jsonb_field","doc":null,"default_value":"","external_name":"jsonb_field","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(jsonb_field, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"jsonb_field:String-instance-method","html_id":"jsonb_field:String-instance-method","name":"jsonb_field","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L40","def":{"name":"jsonb_field","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@jsonb_field"}},{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L44","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@jsonb_field, Clear::Expression[@value.to_json]}.join(\" @> \")"}},{"id":"value:JSONBHash-instance-method","html_id":"value:JSONBHash-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSONBHash","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L41","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONBHash","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB/Field","path":"Clear/Expression/Node/JSONB/Field.html","kind":"class","full_name":"Clear::Expression::Node::JSONB::Field","name":"Field","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/jsonb/expression.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB","kind":"module","full_name":"Clear::Expression::Node::JSONB","name":"JSONB"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(field,key,cast=nil)-class-method","html_id":"new(field,key,cast=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"cast","doc":null,"default_value":"nil","external_name":"cast","restriction":""}],"args_string":"(field, key, cast = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L10","def":{"name":"new","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"cast","doc":null,"default_value":"nil","external_name":"cast","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(field, key, cast)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(value:Clear::Expression::Node)-instance-method","html_id":"==(value:Clear::Expression::Node)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Clear::Expression::Node"}],"args_string":"(value : Clear::Expression::Node)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L21","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Clear::Expression::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(value)"}},{"id":"==(value:UNDERSCORE)-instance-method","html_id":"==(value:UNDERSCORE)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : UNDERSCORE)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L25","def":{"name":"==","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @cast\n  super(value)\nelse\n  Clear::Expression::Node::JSONB::Equality.new(field.resolve, jsonb_k2h(key, value))\nend"}},{"id":"cast(cast)-instance-method","html_id":"cast(cast)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"cast","doc":null,"default_value":"","external_name":"cast","restriction":""}],"args_string":"(cast)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L17","def":{"name":"cast","args":[{"name":"cast","doc":null,"default_value":"","external_name":"cast","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cast = cast\nself\n"}},{"id":"cast:String?-instance-method","html_id":"cast:String?-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L10","def":{"name":"cast","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@cast"}},{"id":"field:Node-instance-method","html_id":"field:Node-instance-method","name":"field","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L8","def":{"name":"field","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node","visibility":"Public","body":"@field"}},{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L9","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key"}},{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/expression.cr#L13","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"jsonb_resolve(@field.resolve, jsonb_k2a(key), @cast)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Literal","path":"Clear/Expression/Node/Literal.html","kind":"class","full_name":"Clear::Expression::Node::Literal","name":"Literal","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/literal.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/literal.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"Management of rendering of literal values.","summary":"<p>Management of rendering of literal values.</p>","class_methods":[],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/literal.cr#L7","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve:String-instance-method","html_id":"resolve:String-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/literal.cr#L15","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"Clear::Expression[@value]"}},{"id":"value:AvailableLiteral-instance-method","html_id":"value:AvailableLiteral-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AvailableLiteral","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/literal.cr#L7","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AvailableLiteral","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Minus","path":"Clear/Expression/Node/Minus.html","kind":"class","full_name":"Clear::Expression::Node::Minus","name":"Minus","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/minus.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/minus.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the unary `-` operator.","summary":"<p>A node managing the unary <code>-</code> operator.</p>","class_methods":[],"constructors":[{"id":"new(a:Node)-class-method","html_id":"new(a:Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node"}],"args_string":"(a : Node)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/minus.cr#L5","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/minus.cr#L7","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"-\", @a.resolve}.join"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Not","path":"Clear/Expression/Node/Not.html","kind":"class","full_name":"Clear::Expression::Node::Not","name":"Not","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/not.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the unary `NOT` operator.","summary":"<p>A node managing the unary <code>NOT</code> operator.</p>","class_methods":[],"constructors":[{"id":"new(a:Node)-class-method","html_id":"new(a:Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node"}],"args_string":"(a : Node)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not.cr#L5","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not.cr#L7","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"NOT \", @a.resolve}.join"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/NotBetween","path":"Clear/Expression/Node/NotBetween.html","kind":"class","full_name":"Clear::Expression::Node::NotBetween","name":"NotBetween","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/not_between.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not_between.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing the rendering of `(var NOT BETWEEN a AND b)`\nexpressions.","summary":"<p>A node managing the rendering of <code>(var NOT BETWEEN a AND b)</code> expressions.</p>","class_methods":[],"constructors":[{"id":"new(target:Node,starts:BetweenType,ends:BetweenType)-class-method","html_id":"new(target:Node,starts:BetweenType,ends:BetweenType)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"starts","doc":null,"default_value":"","external_name":"starts","restriction":"BetweenType"},{"name":"ends","doc":null,"default_value":"","external_name":"ends","restriction":"BetweenType"}],"args_string":"(target : Node, starts : BetweenType, ends : BetweenType)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not_between.cr#L8","def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Node"},{"name":"starts","doc":null,"default_value":"","external_name":"starts","restriction":"BetweenType"},{"name":"ends","doc":null,"default_value":"","external_name":"ends","restriction":"BetweenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target, starts, ends)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not_between.cr#L11","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"(\", @target.resolve, \" NOT BETWEEN \", Clear::Expression[@starts], \" AND \", Clear::Expression[@ends], \")\"}.join"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/NotBetween/BetweenType","path":"Clear/Expression/Node/NotBetween/BetweenType.html","kind":"alias","full_name":"Clear::Expression::Node::NotBetween::BetweenType","name":"BetweenType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/expression/nodes/not_between.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/not_between.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Clear::Expression::Node | Float32 | Float64 | Int32 | Int64 | String | Time)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/NotBetween","kind":"class","full_name":"Clear::Expression::Node::NotBetween","name":"NotBetween"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Null","path":"Clear/Expression/Node/Null.html","kind":"class","full_name":"Clear::Expression::Node::Null","name":"Null","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/null.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/null.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"Render NULL !","summary":"<p>Render NULL !</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/null.cr#L5","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/null.cr#L8","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"NULL\""}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/PGArray","path":"Clear/Expression/Node/PGArray.html","kind":"class","full_name":"Clear::Expression::Node::PGArray(T)","name":"PGArray","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/pg_array.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/pg_array.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"A node managing PG structure `array[args...]`\nNamed PGArray instead of Array to avoid issue with naming","summary":"<p>A node managing PG structure <code>array[args...]</code> Named PGArray instead of Array to avoid issue with naming</p>","class_methods":[],"constructors":[{"id":"new(arr:Array(T))-class-method","html_id":"new(arr:Array(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(T)"}],"args_string":"(arr : Array(T))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/pg_array.cr#L8","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PGArray(T).allocate\n_.initialize(arr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/pg_array.cr#L11","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{\"array[\", Clear::Expression[@arr].join(\", \"), \"]\"}.join"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Raw","path":"Clear/Expression/Node/Raw.html","kind":"class","full_name":"Clear::Expression::Node::Raw","name":"Raw","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/raw.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/raw.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"This node manage the rendering of a raw SQL fragment.","summary":"<p>This node manage the rendering of a raw SQL fragment.</p>","class_methods":[],"constructors":[{"id":"new(raw:String)-class-method","html_id":"new(raw:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/raw.cr#L5","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve:String-instance-method","html_id":"resolve:String-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/raw.cr#L7","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/Variable","path":"Clear/Expression/Node/Variable.html","kind":"class","full_name":"Clear::Expression::Node::Variable","name":"Variable","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/JSONB/Node","kind":"module","full_name":"Clear::Expression::JSONB::Node","name":"Node"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/nodes/variable.cr","line_number":17,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/variable.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node","kind":"class","full_name":"Clear::Expression::Node","name":"Node"},"doc":"##\nA variable AST node.\nIt's what's created under the hood when you use a non-existent variable:\n\n```crystal\nwhere { users.id != nil }\n\nwill produce this tree:\n\n# => double_operator('<>')\n#   # => variable('id', parent: 'users')\n#   # => null\n\n```","summary":"<h2>A variable AST node.</h2>","class_methods":[],"constructors":[{"id":"new(name:String,parent:Variable?=nil)-class-method","html_id":"new(name:String,parent:Variable?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":"Variable | ::Nil"}],"args_string":"(name : String, parent : Variable? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/variable.cr#L18","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":"Variable | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, parent)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve-instance-method","html_id":"resolve-instance-method","name":"resolve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/variable.cr#L29","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parent = @parent\nif parent\n  {parent.resolve, \".\", Clear::SQL.escape(@name)}.join\nelse\n  Clear::SQL.escape(@name)\nend\n"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/nodes/variable.cr#L20","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if call.args.size > 0 %}\n      args = Clear::Expression[{{ call.args }}].join(\", \")\n      return Node::Variable.new(\"{{ call.name.id }}(#{args})\", self)\n    {% else %}\n      return Node::Variable.new({{ call.name.id.stringify }}, self)\n    {% end %}\n\n  \n"}}],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Expression/UnsafeSql","path":"Clear/Expression/UnsafeSql.html","kind":"class","full_name":"Clear::Expression::UnsafeSql","name":"UnsafeSql","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Literal","kind":"module","full_name":"Clear::Expression::Literal","name":"Literal"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/expression/expression.cr","line_number":70,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Literal","kind":"module","full_name":"Clear::Expression::Literal","name":"Literal"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Expression","kind":"class","full_name":"Clear::Expression","name":"Expression"},"doc":"Wrap an unsafe string. Useful to cancel-out the\nsafe_literal function used internally.\nObviously, this can lead to SQL injection, so beware!","summary":"<p>Wrap an unsafe string.</p>","class_methods":[],"constructors":[{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L75","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_json(b=nil):String-instance-method","html_id":"to_json(b=nil):String-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"nil","external_name":"b","restriction":""}],"args_string":"(b = <span class=\"n\">nil</span>) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L86","def":{"name":"to_json","args":[{"name":"b","doc":null,"default_value":"nil","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_s:String-instance-method","html_id":"to_s:String-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L78","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"to_sql:String-instance-method","html_id":"to_sql:String-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/expression/expression.cr#L82","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/IllegalEnumValueError","path":"Clear/IllegalEnumValueError.html","kind":"class","full_name":"Clear::IllegalEnumValueError","name":"IllegalEnumValueError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/enum/enum.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/enum.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration","path":"Clear/Migration.html","kind":"module","full_name":"Clear::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Helper","kind":"module","full_name":"Clear::Migration::Helper","name":"Helper"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableHelpers","kind":"module","full_name":"Clear::Migration::FullTextSearchableHelpers","name":"FullTextSearchableHelpers"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"}],"locations":[{"filename":"clear/migration/direction.cr","line_number":23,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/direction.cr"},{"filename":"clear/migration/migration.cr","line_number":62,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr"},{"filename":"clear/migration/operation/operation.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr"},{"filename":"clear/migration/operation/columns.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr"},{"filename":"clear/migration/operation/execute.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/execute.cr"},{"filename":"clear/migration/operation/indexes.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr"},{"filename":"clear/migration/operation/table.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"},{"filename":"clear/extensions/enum/migration.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Helper","kind":"module","full_name":"Clear::Migration::Helper","name":"Helper"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"##\n# Clear's migration system\n\nMigrations in Clear are very similar to active record's migrations.\nMigrations are two-way modification of the database.\n\nIt helps to keep a consistent database state during development lifecycle\nof your application.\n\n\nTo create a migration, two ways:\n\n## Clear command\n\n### TL;DR\n\nYou can create a new file which will be present in `src/db/migrate` using:\n\n`clear-cli migration:g migration_name`\n\nThus will create a migration in `src/db/migration/[:uid]_migration_name.cr`\n(with uid number) and a class `MigrationName`\n\n### Advanced options\n\nYou can use `clear-cli migration help` to get advanced options.\n\n## Manually\n\nYou can create a class following this naming convention:\n`Anything + Number.`\nThe number is then used to order the migration between each others and must be unique.\n\nFollowing the rule than inclusion is often better than inheritance, just\ninclude the module `Clear::Migration` to your class.\n\n## Methods of migration\n\n### Migration direction\n\nOnly one method must be overrided: `change`. In comparison to ActiveRecord, there's no\nup and down methods, instead you can put specific up/down code like this:\n\n```\ndef change(dir)\n  dir.down { irreversible! }\nend\n```\n\n```\ndef change(dir)\n  add_column :users, :full_name, :string\n\n  dir.up do\n    execute(\"UPDATE users SET full_name = (SELECT first_name || ' '  || last_name) from users\")\n  end\nend\n```\n\n\n##","summary":"<h2># Clear's migration system</h2>","class_methods":[],"constructors":[],"instance_methods":[{"id":"uid:Int64-instance-method","html_id":"uid:Int64-instance-method","name":"uid","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int64","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr#L65","def":{"name":"uid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/AddColumn","path":"Clear/Migration/AddColumn.html","kind":"class","full_name":"Clear::Migration::AddColumn","name":"AddColumn","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/columns.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table,column,datatype)-class-method","html_id":"new(table,column,datatype)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"datatype","doc":null,"default_value":"","external_name":"datatype","restriction":""}],"args_string":"(table, column, datatype)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L7","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"datatype","doc":null,"default_value":"","external_name":"datatype","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, column, datatype)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L14","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"ALTER TABLE #{@table} DROP #{@column}\"]"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L10","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"ALTER TABLE #{@table} ADD #{@column} #{@datatype}\"]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/AddTable","path":"Clear/Migration/AddTable.html","kind":"class","full_name":"Clear::Migration::AddTable","name":"AddTable","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/table.cr","line_number":177,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table)-class-method","html_id":"new(table)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"args_string":"(table)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L180","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L188","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"DROP TABLE #{@table}\"]"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L184","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"CREATE TABLE #{@table}\"]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/AlterColumn","path":"Clear/Migration/AlterColumn.html","kind":"class","full_name":"Clear::Migration::AlterColumn","name":"AlterColumn","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/columns.cr","line_number":40,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table,column_name,column_type,new_column_name,new_column_type)-class-method","html_id":"new(table,column_name,column_type,new_column_name,new_column_type)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column_name","doc":null,"default_value":"","external_name":"column_name","restriction":""},{"name":"column_type","doc":null,"default_value":"","external_name":"column_type","restriction":""},{"name":"new_column_name","doc":null,"default_value":"","external_name":"new_column_name","restriction":""},{"name":"new_column_type","doc":null,"default_value":"","external_name":"new_column_type","restriction":""}],"args_string":"(table, column_name, column_type, new_column_name, new_column_type)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L49","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column_name","doc":null,"default_value":"","external_name":"column_name","restriction":""},{"name":"column_type","doc":null,"default_value":"","external_name":"column_type","restriction":""},{"name":"new_column_name","doc":null,"default_value":"","external_name":"new_column_name","restriction":""},{"name":"new_column_type","doc":null,"default_value":"","external_name":"new_column_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, column_name, column_type, new_column_name, new_column_type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L67","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o = [] of String\nif (@old_column_name && @new_column_name) && (@old_column_name != @new_column_name)\n  o << \"ALTER TABLE #{@table} RENAME COLUMN #{@new_column_name} TO #{@old_column_name};\"\nend\nif (@old_column_type && @new_column_type) && (@old_column_type != @new_column_type)\n  o << \"ALTER TABLE #{@table} ALTER COLUMN #{@old_column_name} SET DATA TYPE #{@old_column_type};\"\nend\no\n"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L54","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o = [] of String\nif (@old_column_name && @new_column_name) && (@old_column_name != @new_column_name)\n  o << \"ALTER TABLE #{@table} RENAME COLUMN #{@old_column_name} TO #{@new_column_name};\"\nend\nif (@old_column_type && @new_column_type) && (@old_column_type != @new_column_type)\n  o << \"ALTER TABLE #{@table} ALTER COLUMN #{@new_column_name} SET DATA TYPE #{@new_column_type};\"\nend\no\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/CreateEnum","path":"Clear/Migration/CreateEnum.html","kind":"class","full_name":"Clear::Migration::CreateEnum","name":"CreateEnum","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/enum/migration.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,values)-class-method","html_id":"new(name,values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(name, values)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L14","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"DROP TYPE #{@name}\"]"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L10","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"CREATE TYPE #{@name} AS ENUM (#{Clear::Expression[@values].join(\", \")})\"]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/CreateIndex","path":"Clear/Migration/CreateIndex.html","kind":"class","full_name":"Clear::Migration::CreateIndex","name":"CreateIndex","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/indexes.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table,fields:Array(String),name=nil,using=nil,unique=false)-class-method","html_id":"new(table,fields:Array(String),name=nil,using=nil,unique=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(table, fields : Array(String), name = <span class=\"n\">nil</span>, using = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L9","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, fields, name, using, unique)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(table,field:String|Symbol,name=nil,using=nil,unique=false)-class-method","html_id":"new(table,field:String|Symbol,name=nil,using=nil,unique=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String | Symbol"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(table, field : String | Symbol, name = <span class=\"n\">nil</span>, using = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L13","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String | Symbol"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, field, name, using, unique)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L38","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"DROP INDEX IF EXISTS #{@name}\"]"}},{"id":"safe_name(x)-instance-method","html_id":"safe_name(x)-instance-method","name":"safe_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L18","def":{"name":"safe_name","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.gsub(/[^A-Za-z_0-9]/, \"_\")"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L34","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[[\"CREATE\", print_unique, \"INDEX\", safe_name(@name), \"ON\", @table, print_using, print_columns].compact.join(\" \")]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Direction","path":"Clear/Migration/Direction.html","kind":"struct","full_name":"Clear::Migration::Direction","name":"Direction","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/direction.cr","line_number":24,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/direction.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DOWN","name":"DOWN","value":"Direction.new(false)","doc":null,"summary":null},{"id":"UP","name":"UP","value":"Direction.new(true)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"down(&block)-instance-method","html_id":"down(&amp;block)-instance-method","name":"down","doc":"Run the block given in parameter if the direction is a rollback","summary":"<p>Run the block given in parameter if the direction is a rollback</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/direction.cr#L45","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if @dir\nelse\n  yield\nend"}},{"id":"down?-instance-method","html_id":"down?-instance-method","name":"down?","doc":"Return true whether the migration is a rollback","summary":"<p>Return true whether the migration is a rollback</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/direction.cr#L50","def":{"name":"down?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!@dir"}},{"id":"up(&block)-instance-method","html_id":"up(&amp;block)-instance-method","name":"up","doc":"Run the block given in parameter if the direction is a upstream","summary":"<p>Run the block given in parameter if the direction is a upstream</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/direction.cr#L35","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if @dir\n  yield\nend"}},{"id":"up?:Bool-instance-method","html_id":"up?:Bool-instance-method","name":"up?","doc":"Return true whether the migration is a upstream","summary":"<p>Return true whether the migration is a upstream</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/direction.cr#L40","def":{"name":"up?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dir"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/DropEnum","path":"Clear/Migration/DropEnum.html","kind":"class","full_name":"Clear::Migration::DropEnum","name":"DropEnum","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/enum/migration.cr","line_number":19,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,values)-class-method","html_id":"new(name,values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(name, values)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L23","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L30","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if values = @values\n  [\"CREATE TYPE #{@name} AS ENUM (#{Clear::Expression[values].join(\", \")})\"]\nelse\n  irreversible!\nend"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L26","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"DROP TYPE #{@name}\"]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/DropTable","path":"Clear/Migration/DropTable.html","kind":"class","full_name":"Clear::Migration::DropTable","name":"DropTable","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/table.cr","line_number":193,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table)-class-method","html_id":"new(table)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"args_string":"(table)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L196","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L203","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"CREATE TABLE #{@table}\"]"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L199","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"DROP TABLE #{@table}\"]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Execute","path":"Clear/Migration/Execute.html","kind":"class","full_name":"Clear::Migration::Execute","name":"Execute","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/execute.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/execute.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(up=nil,down=nil,irreversible=false)-class-method","html_id":"new(up=nil,down=nil,irreversible=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"up","doc":null,"default_value":"nil","external_name":"up","restriction":""},{"name":"down","doc":null,"default_value":"nil","external_name":"down","restriction":""},{"name":"irreversible","doc":null,"default_value":"false","external_name":"irreversible","restriction":""}],"args_string":"(up = <span class=\"n\">nil</span>, down = <span class=\"n\">nil</span>, irreversible = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/execute.cr#L9","def":{"name":"new","args":[{"name":"up","doc":null,"default_value":"nil","external_name":"up","restriction":""},{"name":"down","doc":null,"default_value":"nil","external_name":"down","restriction":""},{"name":"irreversible","doc":null,"default_value":"false","external_name":"irreversible","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(up, down, irreversible)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/execute.cr#L20","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @down\n  [@down]\nelse\n  if @irreversible\n    irreversible!\n  end\n  [] of String\nend"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/execute.cr#L12","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @up\n  [@up]\nelse\n  [] of String\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableHelpers","path":"Clear/Migration/FullTextSearchableHelpers.html","kind":"module","full_name":"Clear::Migration::FullTextSearchableHelpers","name":"FullTextSearchableHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/full_text_searchable/migration.cr","line_number":84,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Helper","kind":"module","full_name":"Clear::Migration::Helper","name":"Helper"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_full_text_searchable(table,on:Array(Tuple(String,Char)),column_name=&quot;full_text_vector&quot;,catalog=&quot;pg_catalog.english&quot;,trigger_name=nil,function_name=nil)-instance-method","html_id":"add_full_text_searchable(table,on:Array(Tuple(String,Char)),column_name=&amp;quot;full_text_vector&amp;quot;,catalog=&amp;quot;pg_catalog.english&amp;quot;,trigger_name=nil,function_name=nil)-instance-method","name":"add_full_text_searchable","doc":"Add a `tsvector` field to a table.\nCreate column, index and trigger.","summary":"<p>Add a <code>tsvector</code> field to a table.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"Array(Tuple(String, Char))"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"args_string":"(table, on : Array(Tuple(String, Char)), column_name = <span class=\"s\">&quot;full_text_vector&quot;</span>, catalog = <span class=\"s\">&quot;pg_catalog.english&quot;</span>, trigger_name = <span class=\"n\">nil</span>, function_name = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L87","def":{"name":"add_full_text_searchable","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"Array(Tuple(String, Char))"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_column(table, column_name, \"tsvector\")\ncreate_index(table, column_name, using: \"gin\")\nmigration.add_operation(Clear::Migration::FullTextSearchableOperation.new(table, on, catalog, trigger_name, function_name, column_name))\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableOperation","path":"Clear/Migration/FullTextSearchableOperation.html","kind":"class","full_name":"Clear::Migration::FullTextSearchableOperation","name":"FullTextSearchableOperation","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/full_text_searchable/migration.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table,src_fields,catalog=&quot;pg_catalog.english&quot;,trigger_name=nil,function_name=nil,dest_field=&quot;full_text_vector&quot;)-class-method","html_id":"new(table,src_fields,catalog=&amp;quot;pg_catalog.english&amp;quot;,trigger_name=nil,function_name=nil,dest_field=&amp;quot;full_text_vector&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"src_fields","doc":null,"default_value":"","external_name":"src_fields","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""},{"name":"dest_field","doc":null,"default_value":"\"full_text_vector\"","external_name":"dest_field","restriction":""}],"args_string":"(table, src_fields, catalog = <span class=\"s\">&quot;pg_catalog.english&quot;</span>, trigger_name = <span class=\"n\">nil</span>, function_name = <span class=\"n\">nil</span>, dest_field = <span class=\"s\">&quot;full_text_vector&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L18","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"src_fields","doc":null,"default_value":"","external_name":"src_fields","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""},{"name":"dest_field","doc":null,"default_value":"\"full_text_vector\"","external_name":"dest_field","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, src_fields, catalog, trigger_name, function_name, dest_field)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"catalog:String-instance-method","html_id":"catalog:String-instance-method","name":"catalog","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L15","def":{"name":"catalog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@catalog"}},{"id":"dest_field:String-instance-method","html_id":"dest_field:String-instance-method","name":"dest_field","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L16","def":{"name":"dest_field","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@dest_field"}},{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L79","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_delete_trigger"}},{"id":"function_name:String-instance-method","html_id":"function_name:String-instance-method","name":"function_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L14","def":{"name":"function_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@function_name"}},{"id":"src_fields:Array(::Tuple(String,Char))-instance-method","html_id":"src_fields:Array(::Tuple(String,Char))-instance-method","name":"src_fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(::Tuple(String, Char))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L18","def":{"name":"src_fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::Tuple(String, Char))","visibility":"Public","body":"@src_fields"}},{"id":"table:String-instance-method","html_id":"table:String-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L12","def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table"}},{"id":"trigger_name:String-instance-method","html_id":"trigger_name:String-instance-method","name":"trigger_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L13","def":{"name":"trigger_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@trigger_name"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L75","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_trigger + print_update_current_data"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableOperation/Priority","path":"Clear/Migration/FullTextSearchableOperation/Priority.html","kind":"module","full_name":"Clear::Migration::FullTextSearchableOperation::Priority","name":"Priority","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/full_text_searchable/migration.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IMPORTANT","name":"IMPORTANT","value":"'B'","doc":null,"summary":null},{"id":"LOW","name":"LOW","value":"'D'","doc":null,"summary":null},{"id":"NORMAL","name":"NORMAL","value":"'C'","doc":null,"summary":null},{"id":"VERY_IMPORTANT","name":"VERY_IMPORTANT","value":"'A'","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableOperation","kind":"class","full_name":"Clear::Migration::FullTextSearchableOperation","name":"FullTextSearchableOperation"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableTableHelpers","path":"Clear/Migration/FullTextSearchableTableHelpers.html","kind":"module","full_name":"Clear::Migration::FullTextSearchableTableHelpers","name":"FullTextSearchableTableHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/full_text_searchable/migration.cr","line_number":99,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table","kind":"class","full_name":"Clear::Migration::Table","name":"Table"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"full_text_searchable(on:Array(Tuple(String,Char)),column_name=&quot;full_text_vector&quot;,catalog=&quot;pg_catalog.english&quot;,trigger_name=nil,function_name=nil)-instance-method","html_id":"full_text_searchable(on:Array(Tuple(String,Char)),column_name=&amp;quot;full_text_vector&amp;quot;,catalog=&amp;quot;pg_catalog.english&amp;quot;,trigger_name=nil,function_name=nil)-instance-method","name":"full_text_searchable","doc":null,"summary":null,"abstract":false,"args":[{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"Array(Tuple(String, Char))"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"args_string":"(on : Array(Tuple(String, Char)), column_name = <span class=\"s\">&quot;full_text_vector&quot;</span>, catalog = <span class=\"s\">&quot;pg_catalog.english&quot;</span>, trigger_name = <span class=\"n\">nil</span>, function_name = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L100","def":{"name":"full_text_searchable","args":[{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"Array(Tuple(String, Char))"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"column(column_name, \"tsvector\", index: \"gin\")\nmigration.not_nil!.add_operation(Clear::Migration::FullTextSearchableOperation.new(self.name, on, catalog, trigger_name, function_name, column_name))\n"}},{"id":"full_text_searchable(on:String,column_name=&quot;full_text_vector&quot;,catalog=&quot;pg_catalog.english&quot;,trigger_name=nil,function_name=nil)-instance-method","html_id":"full_text_searchable(on:String,column_name=&amp;quot;full_text_vector&amp;quot;,catalog=&amp;quot;pg_catalog.english&amp;quot;,trigger_name=nil,function_name=nil)-instance-method","name":"full_text_searchable","doc":null,"summary":null,"abstract":false,"args":[{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"String"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"args_string":"(on : String, column_name = <span class=\"s\">&quot;full_text_vector&quot;</span>, catalog = <span class=\"s\">&quot;pg_catalog.english&quot;</span>, trigger_name = <span class=\"n\">nil</span>, function_name = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L109","def":{"name":"full_text_searchable","args":[{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"String"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"full_text_searchable([{on, 'C'}], column_name, catalog, trigger_name, function_name)"}},{"id":"full_text_searchable(on:Array(String),column_name=&quot;full_text_vector&quot;,catalog=&quot;pg_catalog.english&quot;,trigger_name=nil,function_name=nil)-instance-method","html_id":"full_text_searchable(on:Array(String),column_name=&amp;quot;full_text_vector&amp;quot;,catalog=&amp;quot;pg_catalog.english&amp;quot;,trigger_name=nil,function_name=nil)-instance-method","name":"full_text_searchable","doc":null,"summary":null,"abstract":false,"args":[{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"Array(String)"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"args_string":"(on : Array(String), column_name = <span class=\"s\">&quot;full_text_vector&quot;</span>, catalog = <span class=\"s\">&quot;pg_catalog.english&quot;</span>, trigger_name = <span class=\"n\">nil</span>, function_name = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/migration.cr#L115","def":{"name":"full_text_searchable","args":[{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":"Array(String)"},{"name":"column_name","doc":null,"default_value":"\"full_text_vector\"","external_name":"column_name","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"trigger_name","doc":null,"default_value":"nil","external_name":"trigger_name","restriction":""},{"name":"function_name","doc":null,"default_value":"nil","external_name":"function_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if on.empty?\n  raise(\"cannot implement tsv_searchable because empty array was given\")\nend\nfields = on.map do |name|\n  {name, 'C'}\nend\nfull_text_searchable(fields, column_name, catalog, trigger_name, function_name)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Helper","path":"Clear/Migration/Helper.html","kind":"module","full_name":"Clear::Migration::Helper","name":"Helper","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableHelpers","kind":"module","full_name":"Clear::Migration::FullTextSearchableHelpers","name":"FullTextSearchableHelpers"}],"locations":[{"filename":"clear/migration/migration.cr","line_number":70,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr"},{"filename":"clear/migration/operation/columns.cr","line_number":81,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr"},{"filename":"clear/migration/operation/indexes.cr","line_number":48,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr"},{"filename":"clear/migration/operation/table.cr","line_number":208,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"},{"filename":"clear/extensions/enum/migration.cr","line_number":40,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr"},{"filename":"clear/extensions/full_text_searchable/full_text_searchable.cr","line_number":12,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/full_text_searchable.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableHelpers","kind":"module","full_name":"Clear::Migration::FullTextSearchableHelpers","name":"FullTextSearchableHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_column(table,column,datatype)-instance-method","html_id":"add_column(table,column,datatype)-instance-method","name":"add_column","doc":"Add a column to a specific table","summary":"<p>Add a column to a specific table</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"datatype","doc":null,"default_value":"","external_name":"datatype","restriction":""}],"args_string":"(table, column, datatype)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L83","def":{"name":"add_column","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"datatype","doc":null,"default_value":"","external_name":"datatype","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::AddColumn.new(table, column, datatype))"}},{"id":"add_operation(op:Operation)-instance-method","html_id":"add_operation(op:Operation)-instance-method","name":"add_operation","doc":null,"summary":null,"abstract":false,"args":[{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"Operation"}],"args_string":"(op : Operation)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr#L79","def":{"name":"add_operation","args":[{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"Operation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"op.migration = self\n@operations << op\n"}},{"id":"apply(dir:Direction)-instance-method","html_id":"apply(dir:Direction)-instance-method","name":"apply","doc":"This will apply the migration in a given direction (up or down)","summary":"<p>This will apply the migration in a given direction (up or down)</p>","abstract":false,"args":[{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"Direction"}],"args_string":"(dir : Direction)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr#L87","def":{"name":"apply","args":[{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"Direction"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Migration::Manager.instance.ensure_ready\nClear::SQL.transaction do\n  Clear.logger.info(\"[#{dir.to_s}] #{self.class.name}\")\n  change(dir)\n  dir.up do\n    @operations.each do |op|\n      op.up.each do |x|\n        Clear::SQL.execute(x.as(String))\n      end\n    end\n    (SQL.insert(\"__clear_metadatas\", {metatype: \"migration\", value: uid.to_s})).execute\n  end\n  dir.down do\n    @operations.reverse_each do |op|\n      op.down.each do |x|\n        Clear::SQL.execute(x.as(String))\n      end\n    end\n    ((SQL.delete(\"default\", \"__clear_metadatas\")).where({metatype: \"migration\", value: uid.to_s})).execute\n  end\n  self\nend\n"}},{"id":"change(dir)-instance-method","html_id":"change(dir)-instance-method","name":"change","doc":null,"summary":null,"abstract":true,"args":[{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":""}],"args_string":"(dir)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr#L84","def":{"name":"change","args":[{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"change_column_type(table,column,to,from=nil)-instance-method","html_id":"change_column_type(table,column,to,from=nil)-instance-method","name":"change_column_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"from","doc":null,"default_value":"nil","external_name":"from","restriction":""}],"args_string":"(table, column, to, from = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L97","def":{"name":"change_column_type","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"from","doc":null,"default_value":"nil","external_name":"from","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::AlterColumn.new(table, column, from, nil, to))"}},{"id":"change_type_column(table,from,to)-instance-method","html_id":"change_type_column(table,from,to)-instance-method","name":"change_type_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(table, from, to)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L101","def":{"name":"change_type_column","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::AddColumn.new(table, nil, from, nil, to))"}},{"id":"create_enum(name,arr:Enumerable(T))forallT-instance-method","html_id":"create_enum(name,arr:Enumerable(T))forallT-instance-method","name":"create_enum","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Enumerable(T)"}],"args_string":"(name, arr : Enumerable(T)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L41","def":{"name":"create_enum","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(CreateEnum.new(name.to_s, arr.map(&.to_s)))"}},{"id":"create_enum(name,e)-instance-method","html_id":"create_enum(name,e)-instance-method","name":"create_enum","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(name, e)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L49","def":{"name":"create_enum","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(CreateEnum.new(name.to_s, e.authorized_values))"}},{"id":"create_index(table,columns:Array(String),name=nil,using=nil,unique=false)-instance-method","html_id":"create_index(table,columns:Array(String),name=nil,using=nil,unique=false)-instance-method","name":"create_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(table, columns : Array(String), name = <span class=\"n\">nil</span>, using = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L56","def":{"name":"create_index","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::CreateIndex.new(table, fields: columns, name: name, using: using, unique: unique))"}},{"id":"create_index(table,column,name=nil,using=nil,unique=false)-instance-method","html_id":"create_index(table,column,name=nil,using=nil,unique=false)-instance-method","name":"create_index","doc":"Add a column to a specific table","summary":"<p>Add a column to a specific table</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(table, column, name = <span class=\"n\">nil</span>, using = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/indexes.cr#L50","def":{"name":"create_index","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::CreateIndex.new(table, fields: [column], name: name, using: using, unique: unique))"}},{"id":"create_table(name,id:Symbol|Bool=true,&block)-instance-method","html_id":"create_table(name,id:Symbol|Bool=true,&amp;block)-instance-method","name":"create_table","doc":"\nHelper used in migration to create a new table.\n\nUsage:\n\n```\ncreate_table(:users) do |t|\n  t.string :first_name\n  t.string :last_name\n  t.email :email, unique: true\n  t.timestamps\nend\n```\n\nBy default, a column `id` of type `integer` will be created as primary key of the table.\nThis can be prevented using `primary: false`\n\n```\ncreate_table(:users, id: false) do |t|\n  t.integer :user_id, primary: true # Use custom name for the primary key\n\n  t.string :first_name\n  t.string :last_name\n  t.email :email, unique: true\n  t.timestamps\nend\n```\n","summary":"<p>Helper used in migration to create a new table.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"id","doc":null,"default_value":"true","external_name":"id","restriction":"Symbol | Bool"}],"args_string":"(name, id : Symbol | Bool = <span class=\"n\">true</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L237","def":{"name":"create_table","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"id","doc":null,"default_value":"true","external_name":"id","restriction":"Symbol | Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"table = Table.new(name.to_s, is_create: true)\nself.add_operation(table)\ncase id\nwhen true, :bigserial\n  table.column(\"id\", \"bigserial\", primary: true, null: false)\nwhen :serial\n  table.column(\"id\", \"serial\", primary: true, null: false)\nwhen :uuid\n  table.column(\"id\", \"uuid\", primary: true, null: false)\nwhen false\nelse\n  raise(\"Unknown key type while try to create new table: `#{id}`. Candidates are :bigserial, :serial and :uuid\" + \"Please proceed with `id: false` and add the column manually\")\nend\nyield table\n"}},{"id":"drop_column(table,column,type)-instance-method","html_id":"drop_column(table,column,type)-instance-method","name":"drop_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(table, column, type)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L93","def":{"name":"drop_column","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::RemoveColumn.new(table, column, type))"}},{"id":"drop_enum(name,arr:Enumerable(T)?=nil)forallT-instance-method","html_id":"drop_enum(name,arr:Enumerable(T)?=nil)forallT-instance-method","name":"drop_enum","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"arr","doc":null,"default_value":"nil","external_name":"arr","restriction":"Enumerable(T) | ::Nil"}],"args_string":"(name, arr : Enumerable(T)? = <span class=\"n\">nil</span>) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/enum/migration.cr#L45","def":{"name":"drop_enum","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"arr","doc":null,"default_value":"nil","external_name":"arr","restriction":"Enumerable(T) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(DropEnum.new(name.to_s, arr.try(&.map(&.to_s))))"}},{"id":"execute(up:String?=nil,down:String?=nil)-instance-method","html_id":"execute(up:String?=nil,down:String?=nil)-instance-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[{"name":"up","doc":null,"default_value":"nil","external_name":"up","restriction":"String | ::Nil"},{"name":"down","doc":null,"default_value":"nil","external_name":"down","restriction":"String | ::Nil"}],"args_string":"(up : String? = <span class=\"n\">nil</span>, down : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr#L75","def":{"name":"execute","args":[{"name":"up","doc":null,"default_value":"nil","external_name":"up","restriction":"String | ::Nil"},{"name":"down","doc":null,"default_value":"nil","external_name":"down","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operations << (Clear::Migration::Execute.new(up, down))"}},{"id":"irreversible!-instance-method","html_id":"irreversible!-instance-method","name":"irreversible!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr#L71","def":{"name":"irreversible!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IrreversibleMigration.new(migration_irreversible(self.class.name)))"}},{"id":"rename_column(table,from,to)-instance-method","html_id":"rename_column(table,from,to)-instance-method","name":"rename_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(table, from, to)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L87","def":{"name":"rename_column","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.add_operation(Clear::Migration::AddColumn.new(table, from, nil, to, nil))"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/IrreversibleMigration","path":"Clear/Migration/IrreversibleMigration.html","kind":"class","full_name":"Clear::Migration::IrreversibleMigration","name":"IrreversibleMigration","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/migration.cr","line_number":68,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/migration.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":"This error is throw when you try to revert a migration which is irreversible.","summary":"<p>This error is throw when you try to revert a migration which is irreversible.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Manager","path":"Clear/Migration/Manager.html","kind":"class","full_name":"Clear::Migration::Manager","name":"Manager","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/manager.cr","line_number":12,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"METADATA_VERSION","name":"METADATA_VERSION","value":"\"1\"","doc":"Used to migrate between metadata version, in case we need it in the future.","summary":"<p>Used to migrate between metadata version, in case we need it in the future.</p>"}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":"\nThe migration manager is a singleton, it load all the migrations,\ncheck which one are `up` and `down`, and can trigger one or multiple\ndowngrade / upgrade of the database.\n\nThe migration system needs the creation of a table named `__clear_metadatas`\nin your database. This table will be created automatically on the first\ninitialization of the Migration Manager.\n","summary":"<p>The migration manager is a singleton, it load all the migrations, check which one are <code><a href=\"../../Clear/Migration/Manager.html#up%28number%3AInt64%29%3AVoid-instance-method\">#up</a></code> and <code><a href=\"../../Clear/Migration/Manager.html#down%28number%3AInt64%29%3AVoid-instance-method\">#down</a></code>, and can trigger one or multiple downgrade / upgrade of the database.</p>","class_methods":[{"id":"instance-class-method","html_id":"instance-class-method","name":"instance","doc":"To access to the manager\n```\nClear::Migration::Manager.instance\n```","summary":"<p>To access to the manager <code></code>` Clear::Migration::Manager.instance <code></code>`</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L22","def":{"name":"instance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@instance || (@@instance = Manager.new)"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L38","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"apply_all-instance-method","html_id":"apply_all-instance-method","name":"apply_all","doc":"Apply all the migrations not yet applied.","summary":"<p>Apply all the migrations not yet applied.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L144","def":{"name":"apply_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_ready\nlist_of_migrations = @migrations.sort do |a, b|\n  a.uid <=> b.uid\nend\nlist_of_migrations.reject! do |x|\n  @migrations_up.includes?(x.uid)\nend\nlist_of_migrations.each do |migration|\n  migration.apply(Clear::Migration::Direction::UP)\n  @migrations_up.add(migration.uid)\nend\n"}},{"id":"apply_to(version,direction=:both)-instance-method","html_id":"apply_to(version,direction=:both)-instance-method","name":"apply_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":""},{"name":"direction","doc":null,"default_value":":both","external_name":"direction","restriction":""}],"args_string":"(version, direction = <span class=\"n\">:both</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L76","def":{"name":"apply_to","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":""},{"name":"direction","doc":null,"default_value":":both","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_ready\nlist_of_migrations = @migrations.sort do |a, b|\n  a.uid <=> b.uid\nend\nversion = compute_version(version, list_of_migrations)\noperations = [] of ::Tuple(Int64, Migration::Direction)\nuid_to_apply = list_of_migrations.map(&.uid).reject(&.>(version)) - @migrations_up.to_a\nuid_to_apply.each do |uid|\n  operations << {uid, Migration::Direction::UP}\nend\nuid_to_apply = list_of_migrations.map(&.uid).select(&.>(version)) & @migrations_up.to_a\nuid_to_apply.each do |uid|\n  operations << {uid, Migration::Direction::DOWN}\nend\noperations.sort! do |a, b|\n  if a[1].up?\n    if b[1].down?\n      1\n    else\n      a[0] <=> b[0]\n    end\n  else\n    if b[1].down?\n      b[0] <=> a[0]\n    else\n      0\n    end\n  end\nend\nif operations.empty?\n  Clear.logger.debug(\"Nothing to do.\")\n  return\nend\nClear.logger.debug(\"Migrations will be applied (in this order):\")\noperations.each do |__arg5|\n  uid = __arg5[0]\n  d = __arg5[1]\n  Clear.logger.debug(\"#{d.up? ? \"[ UP ]\" : \"[DOWN]\"} #{uid} - #{(find(uid)).class.name}\")\nend\noperations.each do |__arg6|\n  uid = __arg6[0]\n  d = __arg6[1]\n  if (direction == (:both)) || (direction == (:up))\n    d.up do\n      up(uid)\n    end\n  end\n  if (direction == (:both)) || (direction == (:down))\n    d.down do\n      down(uid)\n    end\n  end\nend\n"}},{"id":"commited?(m:Clear::Migration)-instance-method","html_id":"commited?(m:Clear::Migration)-instance-method","name":"commited?","doc":"\nReturn `true` if the migration has been commited (already applied into the database)\nor `false` otherwise","summary":"<p>Return <code>true</code> if the migration has been commited (already applied into the database) or <code>false</code> otherwise</p>","abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Clear::Migration"}],"args_string":"(m : Clear::Migration)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L159","def":{"name":"commited?","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Clear::Migration"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@migrations_up.includes?(m.uid)"}},{"id":"current_version-instance-method","html_id":"current_version-instance-method","name":"current_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L46","def":{"name":"current_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_ready\nif @migrations_up.any?\n  @migrations_up.max\nelse\n  nil\nend\n"}},{"id":"down(number:Int64):Void-instance-method","html_id":"down(number:Int64):Void-instance-method","name":"down","doc":"Force down a migration; throw error if the mgiration is already down","summary":"<p>Force down a migration; throw error if the mgiration is already down</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int64"}],"args_string":"(number : Int64) : Void","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L252","def":{"name":"down","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"m = find(number)\nif migrations_up.includes?(number)\nelse\n  raise(migration_already_down(number))\nend\nm.apply(Clear::Migration::Direction::DOWN)\n@migrations_up.delete(m.uid)\n"}},{"id":"ensure_ready-instance-method","html_id":"ensure_ready-instance-method","name":"ensure_ready","doc":"Create if needed the metadata table\nto save the migrations.","summary":"<p>Create if needed the metadata table to save the migrations.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L165","def":{"name":"ensure_ready","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @loaded\nelse\n  Clear::SQL.execute(\"  CREATE TABLE IF NOT EXISTS __clear_metadatas ( metatype text NOT NULL, value text NOT NULL );\")\n  Clear::SQL.execute(\"  CREATE UNIQUE INDEX IF NOT EXISTS __clear_metadatas_idx ON __clear_metadatas (metatype, value);\")\n  load_existing_migrations\n  ensure_unicity!\n  @loaded = true\nend"}},{"id":"find(number)-instance-method","html_id":"find(number)-instance-method","name":"find","doc":"Fetch the migration instance with the selected number","summary":"<p>Fetch the migration instance with the selected number</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"args_string":"(number)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L236","def":{"name":"find","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"number = Int64.new(number)\n@migrations.find do |__arg8|\n  __arg8.uid == number\nend || (raise(migration_not_found(number)))\n"}},{"id":"load_existing_migrations-instance-method","html_id":"load_existing_migrations-instance-method","name":"load_existing_migrations","doc":"Fetch all the migrations already activated on the database.","summary":"<p>Fetch all the migrations already activated on the database.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L221","def":{"name":"load_existing_migrations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@migrations_up.clear\n(((Clear::SQL.select(\"*\")).from(\"__clear_metadatas\")).where({metatype: \"migration\"})).to_a.map do |m|\n  @migrations_up.add(Int64.new(m[\"value\"].as(String)))\nend\n"}},{"id":"max_version-instance-method","html_id":"max_version-instance-method","name":"max_version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L56","def":{"name":"max_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @migrations.size > 0\n  @migrations.map(&.uid).max\nelse\n  nil\nend"}},{"id":"migrations_up-instance-method","html_id":"migrations_up-instance-method","name":"migrations_up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L33","def":{"name":"migrations_up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_ready\n@migrations_up\n"}},{"id":"print_status:String-instance-method","html_id":"print_status:String-instance-method","name":"print_status","doc":"Print out the status ( up | down ) of all migrations found by the manager.","summary":"<p>Print out the status ( up | down ) of all migrations found by the manager.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L262","def":{"name":"print_status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ensure_ready\n@migrations.sort do |a, b|\n  (a.as(Clear::Migration)).uid <=> (b.as(Clear::Migration)).uid\nend.map do |m|\n  active = @migrations_up.includes?(m.uid)\n  \"[#{active ? \"✓\".colorize.green : \"✗\".colorize.red}] #{m.uid} - #{m.class.name}\"\nend.join(\"\\n\")\n"}},{"id":"refresh-instance-method","html_id":"refresh-instance-method","name":"refresh","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L231","def":{"name":"refresh","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"load_existing_migrations"}},{"id":"reinit!-instance-method","html_id":"reinit!-instance-method","name":"reinit!","doc":"Force reloading the migration system\nRecheck all the current up migrations\nand the metadata table.\nThis is useful if you access to the migration process\nthrough another program, or during specs","summary":"<p>Force reloading the migration system Recheck all the current up migrations and the metadata table.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L187","def":{"name":"reinit!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@loaded = false\nensure_ready\nself\n"}},{"id":"up(number:Int64):Void-instance-method","html_id":"up(number:Int64):Void-instance-method","name":"up","doc":"Force up a migration; throw error if the migration is already up","summary":"<p>Force up a migration; throw error if the migration is already up</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int64"}],"args_string":"(number : Int64) : Void","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/manager.cr#L242","def":{"name":"up","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"m = find(number)\nif migrations_up.includes?(number)\n  raise(migration_already_up(number))\nend\nm.apply(Clear::Migration::Direction::UP)\n@migrations_up.add(m.uid)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","path":"Clear/Migration/Operation.html","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation","abstract":true,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/operation.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/AddColumn","kind":"class","full_name":"Clear::Migration::AddColumn","name":"AddColumn"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/AddTable","kind":"class","full_name":"Clear::Migration::AddTable","name":"AddTable"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/AlterColumn","kind":"class","full_name":"Clear::Migration::AlterColumn","name":"AlterColumn"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/CreateEnum","kind":"class","full_name":"Clear::Migration::CreateEnum","name":"CreateEnum"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/CreateIndex","kind":"class","full_name":"Clear::Migration::CreateIndex","name":"CreateIndex"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/DropEnum","kind":"class","full_name":"Clear::Migration::DropEnum","name":"DropEnum"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/DropTable","kind":"class","full_name":"Clear::Migration::DropTable","name":"DropTable"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Execute","kind":"class","full_name":"Clear::Migration::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableOperation","kind":"class","full_name":"Clear::Migration::FullTextSearchableOperation","name":"FullTextSearchableOperation"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/RemoveColumn","kind":"class","full_name":"Clear::Migration::RemoveColumn","name":"RemoveColumn"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table","kind":"class","full_name":"Clear::Migration::Table","name":"Table"}],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"down:Array(String)-instance-method","html_id":"down:Array(String)-instance-method","name":"down","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr#L7","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":""}},{"id":"irreversible!(operation_name:String?=nil)-instance-method","html_id":"irreversible!(operation_name:String?=nil)-instance-method","name":"irreversible!","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation_name","doc":null,"default_value":"nil","external_name":"operation_name","restriction":"String | ::Nil"}],"args_string":"(operation_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr#L9","def":{"name":"irreversible!","args":[{"name":"operation_name","doc":null,"default_value":"nil","external_name":"operation_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"operation_name || (operation_name = self.class.name)\nmigration_name = migration ? migration.class.name : nil\nraise(IrreversibleMigration.new(migration_irreversible(migration_name, operation_name)))\n"}},{"id":"migration:Clear::Migration?-instance-method","html_id":"migration:Clear::Migration?-instance-method","name":"migration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Migration?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr#L7","def":{"name":"migration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Migration | ::Nil","visibility":"Public","body":"@migration"}},{"id":"migration=(migration:Clear::Migration?)-instance-method","html_id":"migration=(migration:Clear::Migration?)-instance-method","name":"migration=","doc":null,"summary":null,"abstract":false,"args":[{"name":"migration","doc":null,"default_value":"","external_name":"migration","restriction":"Clear::Migration | ::Nil"}],"args_string":"(migration : Clear::Migration?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr#L11","def":{"name":"migration=","args":[{"name":"migration","doc":null,"default_value":"","external_name":"migration","restriction":"Clear::Migration | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@migration = migration"}},{"id":"up:Array(String)-instance-method","html_id":"up:Array(String)-instance-method","name":"up","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/operation.cr#L6","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/RemoveColumn","path":"Clear/Migration/RemoveColumn.html","kind":"class","full_name":"Clear::Migration::RemoveColumn","name":"RemoveColumn","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/columns.cr","line_number":19,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table,column,datatype=nil)-class-method","html_id":"new(table,column,datatype=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"datatype","doc":null,"default_value":"nil","external_name":"datatype","restriction":""}],"args_string":"(table, column, datatype = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L24","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"datatype","doc":null,"default_value":"nil","external_name":"datatype","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, column, datatype)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L31","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @datatype.nil?\n  raise(IrreversibleMigration.new(\"Cannot revert column drop, because datatype is unknown\"))\nend\n[\"ALTER TABLE #{@table} ADD #{@column} #{@datatype}\"]\n"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/columns.cr#L27","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"ALTER TABLE #{@table} DROP #{@column}\"]"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table","path":"Clear/Migration/Table.html","kind":"class","full_name":"Clear::Migration::Table","name":"Table","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableTableHelpers","kind":"module","full_name":"Clear::Migration::FullTextSearchableTableHelpers","name":"FullTextSearchableTableHelpers"},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Operation","kind":"class","full_name":"Clear::Migration::Operation","name":"Operation"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/table.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"},{"filename":"clear/extensions/full_text_searchable/full_text_searchable.cr","line_number":8,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/full_text_searchable.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/FullTextSearchableTableHelpers","kind":"module","full_name":"Clear::Migration::FullTextSearchableTableHelpers","name":"FullTextSearchableTableHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration","kind":"module","full_name":"Clear::Migration","name":"Migration"},"doc":"Reopen Table to add the helpers","summary":"<p>Reopen Table to add the helpers</p>","class_methods":[],"constructors":[{"id":"new(name,is_create)-class-method","html_id":"new(name,is_create)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"is_create","doc":null,"default_value":"","external_name":"is_create","restriction":""}],"args_string":"(name, is_create)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L21","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"is_create","doc":null,"default_value":"","external_name":"is_create","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, is_create)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_column(column,type,default=nil,null=true,primary=false,index=false,unique=false,array=false)-instance-method","html_id":"add_column(column,type,default=nil,null=true,primary=false,index=false,unique=false,array=false)-instance-method","name":"add_column","doc":"Add/alter a column for this table.","summary":"<p>Add/alter a column for this table.</p>","abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"null","doc":null,"default_value":"true","external_name":"null","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"array","doc":null,"default_value":"false","external_name":"array","restriction":""}],"args_string":"(column, type, default = <span class=\"n\">nil</span>, null = <span class=\"n\">true</span>, primary = <span class=\"n\">false</span>, index = <span class=\"n\">false</span>, unique = <span class=\"n\">false</span>, array = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L50","def":{"name":"add_column","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"null","doc":null,"default_value":"true","external_name":"null","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"array","doc":null,"default_value":"false","external_name":"array","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.column_operations << ColumnOperation.new(column: column.to_s, type: type.to_s, default: default, null: null, primary: primary, array: array)\nif unique\n  add_index(fields: [column.to_s], unique: true)\nelse\n  if index\n    if index.is_a?(Bool)\n      add_index(fields: [column.to_s], unique: false)\n    else\n      add_index(fields: [column.to_s], unique: false, using: index)\n    end\n  end\nend\n"}},{"id":"add_fkey(fields:Array(String),table:String,foreign_fields:Array(String),on_delete:String,primary:Bool)-instance-method","html_id":"add_fkey(fields:Array(String),table:String,foreign_fields:Array(String),on_delete:String,primary:Bool)-instance-method","name":"add_fkey","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"String"},{"name":"foreign_fields","doc":null,"default_value":"","external_name":"foreign_fields","restriction":"Array(String)"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"String"},{"name":"primary","doc":null,"default_value":"","external_name":"primary","restriction":"Bool"}],"args_string":"(fields : Array(String), table : String, foreign_fields : Array(String), on_delete : String, primary : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L43","def":{"name":"add_fkey","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"String"},{"name":"foreign_fields","doc":null,"default_value":"","external_name":"foreign_fields","restriction":"Array(String)"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"String"},{"name":"primary","doc":null,"default_value":"","external_name":"primary","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.fkey_operations << FkeyOperation.new(fields: fields, table: table, foreign_fields: foreign_fields, on_delete: on_delete, primary: primary)"}},{"id":"column(name,type,default=nil,null=true,primary=false,index=false,unique=false,array=false)-instance-method","html_id":"column(name,type,default=nil,null=true,primary=false,index=false,unique=false,array=false)-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"null","doc":null,"default_value":"true","external_name":"null","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"array","doc":null,"default_value":"false","external_name":"array","restriction":""}],"args_string":"(name, type, default = <span class=\"n\">nil</span>, null = <span class=\"n\">true</span>, primary = <span class=\"n\">false</span>, index = <span class=\"n\">false</span>, unique = <span class=\"n\">false</span>, array = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L156","def":{"name":"column","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"null","doc":null,"default_value":"true","external_name":"null","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"array","doc":null,"default_value":"false","external_name":"array","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type = case type.to_s\nwhen \"string\"\n  \"text\"\nwhen \"int32\", \"integer\"\n  \"integer\"\nwhen \"int64\", \"long\"\n  \"bigint\"\nwhen \"datetime\"\n  \"timestamp without time zone\"\nelse\n  type.to_s\nend\nself.add_column(name.to_s, type: type, default: default, null: null, primary: primary, index: index, unique: unique, array: array)\n"}},{"id":"column_operations:Array(ColumnOperation)-instance-method","html_id":"column_operations:Array(ColumnOperation)-instance-method","name":"column_operations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(ColumnOperation)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L19","def":{"name":"column_operations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ColumnOperation)","visibility":"Public","body":"@column_operations"}},{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L102","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(if is_create?\n  [\"DROP TABLE\", @name].join(\" \")\nend)]"}},{"id":"fkey_operations:Array(FkeyOperation)-instance-method","html_id":"fkey_operations:Array(FkeyOperation)-instance-method","name":"fkey_operations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(FkeyOperation)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L21","def":{"name":"fkey_operations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(FkeyOperation)","visibility":"Public","body":"@fkey_operations"}},{"id":"index(field:String|Symbol,name=nil,using=nil,unique=false)-instance-method","html_id":"index(field:String|Symbol,name=nil,using=nil,unique=false)-instance-method","name":"index","doc":"Add or replace an index for this table.\nAlias for `add_index`","summary":"<p>Add or replace an index for this table.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String | Symbol"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(field : String | Symbol, name = <span class=\"n\">nil</span>, using = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L68","def":{"name":"index","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String | Symbol"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_index(fields: [field.to_s], name: name, using: using, unique: unique)"}},{"id":"index(fields:Array,name=nil,using=nil,unique=false)-instance-method","html_id":"index(fields:Array,name=nil,using=nil,unique=false)-instance-method","name":"index","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(fields : Array, name = <span class=\"n\">nil</span>, using = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L72","def":{"name":"index","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_index(fields: fields.map(&.to_s), name: name, using: using, unique: unique)"}},{"id":"index_operations:Array(IndexOperation)-instance-method","html_id":"index_operations:Array(IndexOperation)-instance-method","name":"index_operations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(IndexOperation)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L20","def":{"name":"index_operations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(IndexOperation)","visibility":"Public","body":"@index_operations"}},{"id":"is_create?:Bool-instance-method","html_id":"is_create?:Bool-instance-method","name":"is_create?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L17","def":{"name":"is_create?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@is_create"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L16","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"references(to,name:String?=nil,on_delete=&quot;restrict&quot;,type=&quot;bigint&quot;,null=false,foreign_key=&quot;id&quot;,primary=false)-instance-method","html_id":"references(to,name:String?=nil,on_delete=&amp;quot;restrict&amp;quot;,type=&amp;quot;bigint&amp;quot;,null=false,foreign_key=&amp;quot;id&amp;quot;,primary=false)-instance-method","name":"references","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"on_delete","doc":null,"default_value":"\"restrict\"","external_name":"on_delete","restriction":""},{"name":"type","doc":null,"default_value":"\"bigint\"","external_name":"type","restriction":""},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":""},{"name":"foreign_key","doc":null,"default_value":"\"id\"","external_name":"foreign_key","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""}],"args_string":"(to, name : String? = <span class=\"n\">nil</span>, on_delete = <span class=\"s\">&quot;restrict&quot;</span>, type = <span class=\"s\">&quot;bigint&quot;</span>, null = <span class=\"n\">false</span>, foreign_key = <span class=\"s\">&quot;id&quot;</span>, primary = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L33","def":{"name":"references","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"on_delete","doc":null,"default_value":"\"restrict\"","external_name":"on_delete","restriction":""},{"name":"type","doc":null,"default_value":"\"bigint\"","external_name":"type","restriction":""},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":""},{"name":"foreign_key","doc":null,"default_value":"\"id\"","external_name":"foreign_key","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name || (name = to.singularize.underscore + \"_id\")\nadd_column(name, type, null: null, index: true)\nadd_fkey(fields: [name.to_s], table: to.to_s, foreign_fields: [foreign_key.to_s], on_delete: on_delete.to_s, primary: primary)\n"}},{"id":"timestamps(null=false)-instance-method","html_id":"timestamps(null=false)-instance-method","name":"timestamps","doc":"Add the timestamps to the field.","summary":"<p>Add the timestamps to the field.</p>","abstract":false,"args":[{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":""}],"args_string":"(null = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L26","def":{"name":"timestamps","args":[{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_column(:created_at, \"timestamp without time zone\", null: null, default: \"NOW()\")\nadd_column(:updated_at, \"timestamp without time zone\", null: null, default: \"NOW()\")\nadd_index([\"created_at\"])\nadd_index([\"updated_at\"])\n"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L92","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"columns_and_fkeys = print_columns + print_fkeys\nif columns_and_fkeys.empty?\nelse\n  content = \"(#{columns_and_fkeys.join(\", \")})\"\nend\n[(if is_create?\n  [\"CREATE TABLE\", @name, content].reject do |__arg1|\n    __arg1.nil?\n  end.join(\" \")\nend)] + print_indexes\n"}}],"macros":[{"id":"method_missing(caller)-macro","html_id":"method_missing(caller)-macro","name":"method_missing","doc":"DEPRECATED\nMethod missing is used to generate add_column using the method name as\ncolumn type (ActiveRecord's style)","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Method missing is used to generate add_column using the method name as column type (ActiveRecord's style)</p>","abstract":false,"args":[{"name":"caller","doc":null,"default_value":"","external_name":"caller","restriction":""}],"args_string":"(caller)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L151","def":{"name":"method_missing","args":[{"name":"caller","doc":null,"default_value":"","external_name":"caller","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% raise(\"Migration: usage of Table##{caller.name} is deprecated.\\n\" + \"Tip: use instead `self.column(NAME, \\\"#{caller.name}\\\", ...)`\") %}\n\n    \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table/ColumnOperation","path":"Clear/Migration/Table/ColumnOperation.html","kind":"struct","full_name":"Clear::Migration::Table::ColumnOperation","name":"ColumnOperation","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/table.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table","kind":"class","full_name":"Clear::Migration::Table","name":"Table"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column:String,type:String,null:Bool=false,default:SQL::Any=nil,primary:Bool=false,array:Bool=false)-class-method","html_id":"new(column:String,type:String,null:Bool=false,default:SQL::Any=nil,primary:Bool=false,array:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":"Bool"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"SQL::Any"},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":"Bool"},{"name":"array","doc":null,"default_value":"false","external_name":"array","restriction":"Bool"}],"args_string":"(column : String, type : String, null : Bool = <span class=\"n\">false</span>, default : SQL::Any = <span class=\"n\">nil</span>, primary : Bool = <span class=\"n\">false</span>, array : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L4","def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"null","doc":null,"default_value":"false","external_name":"null","restriction":"Bool"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"SQL::Any"},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":"Bool"},{"name":"array","doc":null,"default_value":"false","external_name":"array","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column, type, null, default, primary, array)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"array:Bool-instance-method","html_id":"array:Bool-instance-method","name":"array","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"array","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@array"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L4","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ColumnOperation.new(@column.clone, @type.clone, @null.clone, @default.clone, @primary.clone, @array.clone)"}},{"id":"column:String-instance-method","html_id":"column:String-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@column"}},{"id":"copy_with(column_column=@column,type_type=@type,null_null=@null,default_default=@default,primary_primary=@primary,array_array=@array)-instance-method","html_id":"copy_with(column_column=@column,type_type=@type,null_null=@null,default_default=@default,primary_primary=@primary,array_array=@array)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_column","doc":null,"default_value":"@column","external_name":"column","restriction":""},{"name":"_type","doc":null,"default_value":"@type","external_name":"type","restriction":""},{"name":"_null","doc":null,"default_value":"@null","external_name":"null","restriction":""},{"name":"_default","doc":null,"default_value":"@default","external_name":"default","restriction":""},{"name":"_primary","doc":null,"default_value":"@primary","external_name":"primary","restriction":""},{"name":"_array","doc":null,"default_value":"@array","external_name":"array","restriction":""}],"args_string":"(column _column = @column, type _type = @type, null _null = @null, default _default = @default, primary _primary = @primary, array _array = @array)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L4","def":{"name":"copy_with","args":[{"name":"_column","doc":null,"default_value":"@column","external_name":"column","restriction":""},{"name":"_type","doc":null,"default_value":"@type","external_name":"type","restriction":""},{"name":"_null","doc":null,"default_value":"@null","external_name":"null","restriction":""},{"name":"_default","doc":null,"default_value":"@default","external_name":"default","restriction":""},{"name":"_primary","doc":null,"default_value":"@primary","external_name":"primary","restriction":""},{"name":"_array","doc":null,"default_value":"@array","external_name":"array","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ColumnOperation.new(_column, _type, _null, _default, _primary, _array)"}},{"id":"default:SQL::Any-instance-method","html_id":"default:SQL::Any-instance-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SQL::Any","source_link":null,"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SQL::Any","visibility":"Public","body":"@default"}},{"id":"null:Bool-instance-method","html_id":"null:Bool-instance-method","name":"null","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"null","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@null"}},{"id":"primary:Bool-instance-method","html_id":"primary:Bool-instance-method","name":"primary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"primary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@primary"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table/FkeyOperation","path":"Clear/Migration/Table/FkeyOperation.html","kind":"struct","full_name":"Clear::Migration::Table::FkeyOperation","name":"FkeyOperation","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/table.cr","line_number":11,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table","kind":"class","full_name":"Clear::Migration::Table","name":"Table"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(fields:Array(String),table:String,foreign_fields:Array(String),on_delete:String,primary:Bool)-class-method","html_id":"new(fields:Array(String),table:String,foreign_fields:Array(String),on_delete:String,primary:Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"String"},{"name":"foreign_fields","doc":null,"default_value":"","external_name":"foreign_fields","restriction":"Array(String)"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"String"},{"name":"primary","doc":null,"default_value":"","external_name":"primary","restriction":"Bool"}],"args_string":"(fields : Array(String), table : String, foreign_fields : Array(String), on_delete : String, primary : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L11","def":{"name":"new","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"String"},{"name":"foreign_fields","doc":null,"default_value":"","external_name":"foreign_fields","restriction":"Array(String)"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"String"},{"name":"primary","doc":null,"default_value":"","external_name":"primary","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(fields, table, foreign_fields, on_delete, primary)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L11","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"FkeyOperation.new(@fields.clone, @table.clone, @foreign_fields.clone, @on_delete.clone, @primary.clone)"}},{"id":"copy_with(fields_fields=@fields,table_table=@table,foreign_fields_foreign_fields=@foreign_fields,on_delete_on_delete=@on_delete,primary_primary=@primary)-instance-method","html_id":"copy_with(fields_fields=@fields,table_table=@table,foreign_fields_foreign_fields=@foreign_fields,on_delete_on_delete=@on_delete,primary_primary=@primary)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_fields","doc":null,"default_value":"@fields","external_name":"fields","restriction":""},{"name":"_table","doc":null,"default_value":"@table","external_name":"table","restriction":""},{"name":"_foreign_fields","doc":null,"default_value":"@foreign_fields","external_name":"foreign_fields","restriction":""},{"name":"_on_delete","doc":null,"default_value":"@on_delete","external_name":"on_delete","restriction":""},{"name":"_primary","doc":null,"default_value":"@primary","external_name":"primary","restriction":""}],"args_string":"(fields _fields = @fields, table _table = @table, foreign_fields _foreign_fields = @foreign_fields, on_delete _on_delete = @on_delete, primary _primary = @primary)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L11","def":{"name":"copy_with","args":[{"name":"_fields","doc":null,"default_value":"@fields","external_name":"fields","restriction":""},{"name":"_table","doc":null,"default_value":"@table","external_name":"table","restriction":""},{"name":"_foreign_fields","doc":null,"default_value":"@foreign_fields","external_name":"foreign_fields","restriction":""},{"name":"_on_delete","doc":null,"default_value":"@on_delete","external_name":"on_delete","restriction":""},{"name":"_primary","doc":null,"default_value":"@primary","external_name":"primary","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"FkeyOperation.new(_fields, _table, _foreign_fields, _on_delete, _primary)"}},{"id":"fields:Array(String)-instance-method","html_id":"fields:Array(String)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@fields"}},{"id":"foreign_fields:Array(String)-instance-method","html_id":"foreign_fields:Array(String)-instance-method","name":"foreign_fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"foreign_fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@foreign_fields"}},{"id":"on_delete:String-instance-method","html_id":"on_delete:String-instance-method","name":"on_delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"on_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@on_delete"}},{"id":"primary:Bool-instance-method","html_id":"primary:Bool-instance-method","name":"primary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"primary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@primary"}},{"id":"table:String-instance-method","html_id":"table:String-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table/IndexOperation","path":"Clear/Migration/Table/IndexOperation.html","kind":"struct","full_name":"Clear::Migration::Table::IndexOperation","name":"IndexOperation","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/migration/operation/table.cr","line_number":8,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Migration/Table","kind":"class","full_name":"Clear::Migration::Table","name":"Table"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(fields:Array(String),name:String,using:String?=nil,unique:Bool=false)-class-method","html_id":"new(fields:Array(String),name:String,using:String?=nil,unique:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":"String | ::Nil"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":"Bool"}],"args_string":"(fields : Array(String), name : String, using : String? = <span class=\"n\">nil</span>, unique : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L8","def":{"name":"new","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"using","doc":null,"default_value":"nil","external_name":"using","restriction":"String | ::Nil"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(fields, name, using, unique)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L8","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"IndexOperation.new(@fields.clone, @name.clone, @using.clone, @unique.clone)"}},{"id":"copy_with(fields_fields=@fields,name_name=@name,using_using=@using,unique_unique=@unique)-instance-method","html_id":"copy_with(fields_fields=@fields,name_name=@name,using_using=@using,unique_unique=@unique)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_fields","doc":null,"default_value":"@fields","external_name":"fields","restriction":""},{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_using","doc":null,"default_value":"@using","external_name":"using","restriction":""},{"name":"_unique","doc":null,"default_value":"@unique","external_name":"unique","restriction":""}],"args_string":"(fields _fields = @fields, name _name = @name, using _using = @using, unique _unique = @unique)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/migration/operation/table.cr#L8","def":{"name":"copy_with","args":[{"name":"_fields","doc":null,"default_value":"@fields","external_name":"fields","restriction":""},{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_using","doc":null,"default_value":"@using","external_name":"using","restriction":""},{"name":"_unique","doc":null,"default_value":"@unique","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"IndexOperation.new(_fields, _name, _using, _unique)"}},{"id":"fields:Array(String)-instance-method","html_id":"fields:Array(String)-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@fields"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"unique:Bool-instance-method","html_id":"unique:Bool-instance-method","name":"unique","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"unique","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@unique"}},{"id":"using:String?-instance-method","html_id":"using:String?-instance-method","name":"using","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"using","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@using"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model","path":"Clear/Model.html","kind":"module","full_name":"Clear::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/FullTextSearchable","kind":"module","full_name":"Clear::Model::FullTextSearchable","name":"FullTextSearchable"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Initializer","kind":"module","full_name":"Clear::Model::Initializer","name":"Initializer"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasFactory","kind":"module","full_name":"Clear::Model::HasFactory","name":"HasFactory"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasJson","kind":"module","full_name":"Clear::Model::HasJson","name":"HasJson"},{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation"},{"html_id":"github.com/anykeyh/clear/Clear/Validation/Helper","kind":"module","full_name":"Clear::Validation::Helper","name":"Helper"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSaving","kind":"module","full_name":"Clear::Model::HasSaving","name":"HasSaving"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSerialPkey","kind":"module","full_name":"Clear::Model::HasSerialPkey","name":"HasSerialPkey"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasTimestamps","kind":"module","full_name":"Clear::Model::HasTimestamps","name":"HasTimestamps"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks","kind":"module","full_name":"Clear::Model::HasHooks","name":"HasHooks"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Connection","kind":"module","full_name":"Clear::Model::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"}],"locations":[{"filename":"clear/model/collection.cr","line_number":158,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr"},{"filename":"clear/model/errors.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr"},{"filename":"clear/model/model.cr","line_number":9,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/model.cr"},{"filename":"clear/extensions/full_text_searchable/full_text_searchable.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/full_text_searchable.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Connection","kind":"module","full_name":"Clear::Model::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/Model/FullTextSearchable","kind":"module","full_name":"Clear::Model::FullTextSearchable","name":"FullTextSearchable"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasFactory","kind":"module","full_name":"Clear::Model::HasFactory","name":"HasFactory"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks","kind":"module","full_name":"Clear::Model::HasHooks","name":"HasHooks"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasJson","kind":"module","full_name":"Clear::Model::HasJson","name":"HasJson"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSaving","kind":"module","full_name":"Clear::Model::HasSaving","name":"HasSaving"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSerialPkey","kind":"module","full_name":"Clear::Model::HasSerialPkey","name":"HasSerialPkey"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasTimestamps","kind":"module","full_name":"Clear::Model::HasTimestamps","name":"HasTimestamps"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Initializer","kind":"module","full_name":"Clear::Model::Initializer","name":"Initializer"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Column","kind":"class","full_name":"Clear::Reflection::Column","name":"Column"},{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Table","kind":"class","full_name":"Clear::Reflection::Table","name":"Table"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"Model definition is made by adding the `Clear::Model` mixin in your class.\n## Simple Model\n\n```crystal\nclass MyModel\n  include Clear::Model\n\n  column my_column : String\nend\n```\n\nWe just created a new model, linked to your database, mapping the column `my_column` of type String (`text` in postgres).\n\nNow, you can play with your model:\n\n```crystal\n  row = MyModel.new # create an empty row\n  row.my_column = \"This is a content\"\n  row.save! # insert the new row in the database !\n```\n\nBy convention, the table name will follow an underscore, plural version of your model: `my_models`.\nA model into a module will prepend the module name before, so `Logistic::MyModel` will check for `logistic_my_models` in your database.\nYou can force a specific table name using:\n\n```crystal\nclass MyModel\n  include Clear::Model\n  self.table = \"another_table_name\"\nend\n```\n\n## Presence validation\n\nUnlike many ORM around, Clear carry about non-nullable pattern in crystal. Meaning `column my_column : String` assume than a call to `row.my_column` will return a String.\n\nBut it exists cases where the column is not yet initialized:\n- When the object is built with constructor without providing the value (See above).\n- When an object is semi-fetched through the database query. This is useful to ignore some large fields non-interesting in the body of the current operation.\n\nFor example, this code will compile:\n\n```crystal\n  row = MyModel.new # create an empty row\n  puts row.my_column\n```\n\nHowever, it will throw a runtime exception `You cannot access to the field 'my_column' because it never has been initialized`\n\nSame way, trying to save the object will raise an error:\n\n```crystal\n  row.save # Will return false\n  pp row.errors # Will tell you than `my_column` presence is mandatory.\n```\n\nThanks to expressiveness of the Crystal language, we can handle presence validation by simply using the `Nilable` type in crystal:\n\n```crystal\nclass MyModel\n  include Clear::Model\n\n  column my_column : String? # Now, the column can be NULL or text in postgres.\nend\n```\n\nThis time, the code above will works; in case of no value, my_column will be `nil` by default.\n\n## Querying your code\n\nWhenever you want to fetch data from your database, you must create a new collection query:\n\n`MyModel.query #Will setup a vanilla 'SELECT * FROM my_models'`\n\nQueries are fetchable using `each`:\n\n```crystal\nMyModel.query.each do |model|\n  # Do something with your model here.\nend\n```\n\n## Refining your query\n\nA collection query offers a lot of functionalities. You can read the [API](https://anykeyh.github.io/clear/Clear/Model/CollectionBase.html) for more informations.\n\n## Column type\n\nBy default, Clear map theses columns types:\n\n- `String` => `text`\n- `Numbers` (any from 8 to 64 bits, float, double, big number, big float) => `int, large int etc... (depends of your choice)`\n- `Bool` => `text or bool`\n- `Time` => `timestamp without timezone or text`\n- `JSON::Any` => `json and jsonb`\n- `Nilable` => `NULL` (treated as special !)\n\n_NOTE_: The `crystal-pg` gems map also some structures like GIS coordinates, but their implementation is not tested in Clear. Use them at your own risk. Tell me if it's working 😉\n\nIf you need to map special structure, see [Mapping Your Data](Mapping) guides for more informations.\n\n## Primary key\n\nPrimary key is essential for relational mapping. Currently Clear support only one column primary key.\n\nA model without primary key can work in sort of degraded mode, throwing error in case of using some methods on them:\n- `collection#first` will be throwing error if no `order_by` has been setup\n\nTo setup a primary key, you can add the modifier `primary: true` to the column:\n\n```crystal\nclass MyModel\n  include Clear::Model\n\n  column id : Int32, primary: true, presence: false\n  column my_column : String?\nend\n```\n\nNote the flag `presence: false` added to the column. This tells Clear than presence checking on save is not mandatory. Usually this happens if you setup a default value in postgres. In the case of our primary key `id`, we use a serial auto-increment default value.\nTherefore, saving the model without primary key will works. The id will be fetched after insertion:\n\n```crystal\nm = MyModel\nm.save!\nm.id # Now the id value is setup.\n```\n\n## Helpers\n\nClear provides various built-in helpers to facilitate your life:\n\n### Timestamps\n\n```crystal\nclass MyModel\n  include Clear::Model\n  timestamps #Will map the two columns 'created_at' and 'updated_at', and map some hooks to update their values.\nend\n```\n\nTheses fields are automatically updated whenever you call `save` methods, and works as Rails ActiveRecord.\n\n### With Serial Pkey\n\n```crystal\nclass MyModel\n  include Clear::Model\n  with_serial_pkey \"my_primary_key\"\nend\n```\n\nBasically rewrite `column id : UInt64, primary: true, presence: false`\n\nArgument is optional (default = id)","summary":"<p>Model definition is made by adding the <code><a href=\"../Clear/Model.html\">Clear::Model</a></code> mixin in your class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cache:Clear::Model::QueryCache?-instance-method","html_id":"cache:Clear::Model::QueryCache?-instance-method","name":"cache","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Model::QueryCache?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/model.cr#L27","def":{"name":"cache","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::QueryCache | ::Nil","visibility":"Public","body":"@cache"}},{"id":"pkey-instance-method","html_id":"pkey-instance-method","name":"pkey","doc":"Alias method for primary key.\n\nIf `Model#id` IS the primary key, then calling `Model#pkey` is exactly the same as `Model#id`.\n\nThis method exists to tremendously simplify the meta-programming code.\nIf no primary key has been setup to this model, raise an exception.","summary":"<p>Alias method for primary key.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/model.cr#L33","def":{"name":"pkey","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(lack_of_primary_key(self.class.name))"}}],"macros":[{"id":"scope(name,&block)-macro","html_id":"scope(name,&amp;block)-macro","name":"scope","doc":"A scope allow you to filter in a very human way a set of data.\n\nUsage:\n\n```\n scope(\"admin\"){ where({role: \"admin\"}) }\n```\n\nfor example, instead of writing:\n\n```\n  User.query.where{ (role == \"admin\") & (active == true) }\n```\n\nYou can write:\n\n```\n  User.admin.active\n```\n\nScope can be used for other purpose than just filter (e.g. ordering),\nbut I would not recommend it.","summary":"<p>A scope allow you to filter in a very human way a set of data.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/model.cr#L19","def":{"name":"scope","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% parameters = \"\" %}\n\n      \n{% for arg, idx in block.args %}\n        {% if (block.splat_index && (idx == block.splat_index))\n  parameters = parameters + \"*\"\nend %}\n        {% parameters = parameters + \"#{arg}\" %}\n        {% unless (idx == (block.args.size - 1))\n  parameters = parameters + \", \"\nend %}\n      {% end %}\n\n      \n{% parameters = parameters.id %}\n\n\n      def self.\n{{ name.id }}\n(\n{{ parameters }}\n)\n        query.\n{{ name.id }}\n(\n{{ parameters }}\n)\n      \nend\n\n      class Collection < Clear::Model::CollectionBase(\n{{ @type }}\n);\n        def \n{{ name.id }}\n(\n{{ parameters }}\n)\n          \n{{ yield }}\n\n\n          return self\n        \nend\n      \nend\n    \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","path":"Clear/Model/ClassMethods.html","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/class_methods.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/class_methods.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/View","kind":"module","full_name":"Clear::View","name":"View"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/CollectionBase","path":"Clear/Model/CollectionBase.html","kind":"class","full_name":"Clear::Model::CollectionBase(T)","name":"CollectionBase","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","kind":"module","full_name":"Clear::SQL::Query::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/collection.cr","line_number":169,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Column/Collection","kind":"class","full_name":"Clear::Reflection::Column::Collection","name":"Collection"},{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Table/Collection","kind":"class","full_name":"Clear::Reflection::Table::Collection","name":"Collection"}],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"`CollectionBase(T)` is the base class for collection of model.\nCollection of model are a SQL `SELECT` query mapping & building system. They are Enumerable and are\n`Clear::SQL::SelectBuilder` behavior; therefore, they can be used array-like and are working with low-level SQL\nBuilding.\n\nThe `CollectionBase(T)` is extended by each model. For example, generating the model `MyModel` will generate the\nclass `MyModel::Collection` which inherits from `CollectionBase(MyModel)`\n\nCollection are instantiated using `Model.query` method.","summary":"<p><code><a href=\"../../Clear/Model/CollectionBase.html\">CollectionBase</a>(T)</code> is the base class for collection of model.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"<<(item:T)-instance-method","html_id":"&lt;&lt;(item:T)-instance-method","name":"<<","doc":"Add an item to the current collection.\n\nIf the current collection is not originated from a `has_many` or `has_many through:` relation, calling `<<` over\nthe collection will raise a `Clear::SQL::OperationNotPermittedError`\n\nReturns `self` and therefore can be chained","summary":"<p>Add an item to the current collection.</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"args_string":"(item : T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L400","def":{"name":"<<","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_operation = self.add_operation\nif add_operation\nelse\n  raise(\"Operation not permitted on this collection.\")\nend\nadd_operation.call(item)\n@cached_result.try(&.<<(item))\nself\n"}},{"id":"[](range:Range(Int64),fetch_columns=false):Array(T)-instance-method","html_id":"[](range:Range(Int64),fetch_columns=false):Array(T)-instance-method","name":"[]","doc":"Get a range of models","summary":"<p>Get a range of models</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int64)"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(range : Range(Int64), fetch_columns = <span class=\"n\">false</span>) : Array(T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L455","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int64)"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"self[range, fetch_columns]?.not_nil"}},{"id":"[](off,fetch_columns=false):T-instance-method","html_id":"[](off,fetch_columns=false):T-instance-method","name":"[]","doc":"Basically a custom way to write `OFFSET x LIMIT 1`","summary":"<p>Basically a custom way to write <code>OFFSET x LIMIT 1</code></p>","abstract":false,"args":[{"name":"off","doc":null,"default_value":"","external_name":"off","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(off, fetch_columns = <span class=\"n\">false</span>) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L445","def":{"name":"[]","args":[{"name":"off","doc":null,"default_value":"","external_name":"off","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"self[off, fetch_columns]?.not_nil!"}},{"id":"[]?(off,fetch_columns=false):T?-instance-method","html_id":"[]?(off,fetch_columns=false):T?-instance-method","name":"[]?","doc":"Basically a custom way to write `OFFSET x LIMIT 1`","summary":"<p>Basically a custom way to write <code>OFFSET x LIMIT 1</code></p>","abstract":false,"args":[{"name":"off","doc":null,"default_value":"","external_name":"off","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(off, fetch_columns = <span class=\"n\">false</span>) : T?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L450","def":{"name":"[]?","args":[{"name":"off","doc":null,"default_value":"","external_name":"off","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"(self.offset(off)).first(fetch_columns)"}},{"id":"[]?(range:Range(Int64),fetch_columns=false):Array(T)-instance-method","html_id":"[]?(range:Range(Int64),fetch_columns=false):Array(T)-instance-method","name":"[]?","doc":"Get a range of models","summary":"<p>Get a range of models</p>","abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int64)"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(range : Range(Int64), fetch_columns = <span class=\"n\">false</span>) : Array(T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L460","def":{"name":"[]?","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(Int64)"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"((self.offset(range.start)).limit(range.end - range.start)).to_a(fetch_columns)"}},{"id":"add(item:T)-instance-method","html_id":"add(item:T)-instance-method","name":"add","doc":"Alias for `Collection#<<`","summary":"<p>Alias for <code>Collection#<<</code></p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"args_string":"(item : T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L412","def":{"name":"add","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self << item"}},{"id":"any?-instance-method","html_id":"any?-instance-method","name":"any?","doc":"Check whether the query return any row.","summary":"<p>Check whether the query return any row.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L369","def":{"name":"any?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cr = @cached_result\nif cr\n  return cr.any?\nend\n((clear_select.select(\"1\")).limit(1)).fetch do |_|\n  return true\nend\nfalse\n"}},{"id":"build(x:NamedTuple):T-instance-method","html_id":"build(x:NamedTuple):T-instance-method","name":"build","doc":"Build a new collection; if the collection comes from a has_many relation\n(e.g. `my_model.associations.build`), the foreign column which store\nthe primary key of `my_model` will be setup by default, preventing you\nto forget it.\nYou can pass extra parameters using a named tuple:\n`my_model.associations.build({a_column: \"value\"}) `","summary":"<p>Build a new collection; if the collection comes from a has_many relation (e.g.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L364","def":{"name":"build","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"Clear::Model::Factory.build(T, @tags.merge(x.to_h), persisted: false)"}},{"id":"build:T-instance-method","html_id":"build:T-instance-method","name":"build","doc":"Build a new collection; if the collection comes from a has_many relation\n(e.g. `my_model.associations.build`), the foreign column which store\nthe primary key of `my_model` will be setup by default, preventing you\nto forget it.","summary":"<p>Build a new collection; if the collection comes from a has_many relation (e.g.</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L354","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"Clear::Model::Factory.build(T, @tags, persisted: false)"}},{"id":"count(type:X.class=Int64)forallX-instance-method","html_id":"count(type:X.class=Int64)forallX-instance-method","name":"count","doc":"Use SQL `COUNT` over your query, and return this number as a Int64","summary":"<p>Use SQL <code>COUNT</code> over your query, and return this number as a Int64</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"Int64","external_name":"type","restriction":"X.class"}],"args_string":"(type : <span class=\"t\">X</span>.<span class=\"k\">class</span> = <span class=\"t\">Int64</span>) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L387","def":{"name":"count","args":[{"name":"type","doc":null,"default_value":"Int64","external_name":"type","restriction":"X.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cr = @cached_result\nif cr.nil?\nelse\n  return X.new(cr.size)\nend\nsuper(type)\n"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L221","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @polymorphic\n  super().flag_as_polymorphic!(@polymorphic_key.not_nil!, @polymorphic_scope.not_nil!)\nelse\n  super()\nend"}},{"id":"each(fetch_columns=false,&block:T->)-instance-method","html_id":"each(fetch_columns=false,&amp;block:T-&gt;)-instance-method","name":"each","doc":"Build the SQL, send the query then iterate through each models\ngathered by the request.","summary":"<p>Build the SQL, send the query then iterate through each models gathered by the request.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>, &block : T -> )","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L296","def":{"name":"each","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> )"},"return_type":"","visibility":"Public","body":"cr = @cached_result\nif cr\n  cr.each(&block)\nelse\n  o = [] of T\n  if @polymorphic\n    fetch(fetch_all: false) do |hash|\n      type = hash[@polymorphic_key].as(String)\n      o << ((Clear::Model::Factory.build(type, hash, persisted: true, fetch_columns: fetch_columns, cache: @cache)).as(T))\n    end\n  else\n    fetch(fetch_all: false) do |hash|\n      o << (Clear::Model::Factory.build(T, hash, persisted: true, fetch_columns: fetch_columns, cache: @cache))\n    end\n  end\n  o.each(&block)\nend\n"}},{"id":"each_with_cursor(batch=1000,fetch_columns=false,&block:T->)-instance-method","html_id":"each_with_cursor(batch=1000,fetch_columns=false,&amp;block:T-&gt;)-instance-method","name":"each_with_cursor","doc":"Build the SQL, send the query then iterate through each models\ngathered by the request.\nUse a postgres cursor to avoid memory bloating.\nUseful to fetch millions of rows at once.","summary":"<p>Build the SQL, send the query then iterate through each models gathered by the request.</p>","abstract":false,"args":[{"name":"batch","doc":null,"default_value":"1000","external_name":"batch","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(batch = <span class=\"n\">1000</span>, fetch_columns = <span class=\"n\">false</span>, &block : T -> )","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L331","def":{"name":"each_with_cursor","args":[{"name":"batch","doc":null,"default_value":"1000","external_name":"batch","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> )"},"return_type":"","visibility":"Public","body":"cr = @cached_result\nif cr\n  cr.each(&block)\nelse\n  if @polymorphic\n    fetch_with_cursor(count: batch) do |hash|\n      type = hash[@polymorphic_key].as(String)\n      yield (Clear::Model::Factory.build(type, hash, persisted: true, fetch_columns: fetch_columns, cache: @cache)).as(T)\n    end\n  else\n    fetch_with_cursor(count: batch) do |hash|\n      yield Clear::Model::Factory.build(T, hash, persisted: true, fetch_columns: fetch_columns, cache: @cache)\n    end\n  end\nend\n"}},{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":"Inverse of `any?`, return true if the request return no rows.","summary":"<p>Inverse of <code><a href=\"../../Clear/Model/CollectionBase.html#any%3F-instance-method\">#any?</a></code>, return true if the request return no rows.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L382","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!any?"}},{"id":"find(tuple:NamedTuple,fetch_columns=false):T?-instance-method","html_id":"find(tuple:NamedTuple,fetch_columns=false):T?-instance-method","name":"find","doc":"A convenient way to write `where({any_column: \"any_value\"}).first`","summary":"<p>A convenient way to write <code>where({any_column: \"any_value\"})<a href=\"../../Clear/Model/CollectionBase.html#first%28fetch_columns%3Dfalse%29%3AT%3F-instance-method\">.first</a></code></p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(tuple : NamedTuple, fetch_columns = <span class=\"n\">false</span>) : T?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L471","def":{"name":"find","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"(where(tuple)).first(fetch_columns)"}},{"id":"find(fetch_columns=false,&block):T?-instance-method","html_id":"find(fetch_columns=false,&amp;block):T?-instance-method","name":"find","doc":"A convenient way to write `where{ condition }.first`","summary":"<p>A convenient way to write <code>where{ condition }<a href=\"../../Clear/Model/CollectionBase.html#first%28fetch_columns%3Dfalse%29%3AT%3F-instance-method\">.first</a></code></p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>, &block) : T?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L465","def":{"name":"find","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"x = Clear::Expression.ensure_node!(with Clear::Expression.new yield)\n(where(x)).first(fetch_columns)\n"}},{"id":"find!(fetch_columns=false,&block):T-instance-method","html_id":"find!(fetch_columns=false,&amp;block):T-instance-method","name":"find!","doc":"A convenient way to write `where({any_column: \"any_value\"}).first!`","summary":"<p>A convenient way to write <code>where({any_column: \"any_value\"})<a href=\"../../Clear/Model/CollectionBase.html#first%21%28fetch_columns%3Dfalse%29%3AT-instance-method\">.first!</a></code></p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>, &block) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L476","def":{"name":"find!","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"T","visibility":"Public","body":"x = Clear::Expression.ensure_node!(with Clear::Expression.new yield)\n(where(x)).first!(fetch_columns)\n"}},{"id":"find!(tuple:NamedTuple,fetch_columns=false):T-instance-method","html_id":"find!(tuple:NamedTuple,fetch_columns=false):T-instance-method","name":"find!","doc":"A convenient way to write `where{ condition }.first!`","summary":"<p>A convenient way to write <code>where{ condition }<a href=\"../../Clear/Model/CollectionBase.html#first%21%28fetch_columns%3Dfalse%29%3AT-instance-method\">.first!</a></code></p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(tuple : NamedTuple, fetch_columns = <span class=\"n\">false</span>) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L482","def":{"name":"find!","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"((where(tuple)).first(fetch_columns)).not_nil!"}},{"id":"find_or_build(tuple:NamedTuple,&block:T->Void):T-instance-method","html_id":"find_or_build(tuple:NamedTuple,&amp;block:T-&gt;Void):T-instance-method","name":"find_or_build","doc":"Try to fetch a row. If not found, build a new object and setup\nthe fields like setup in the condition tuple.","summary":"<p>Try to fetch a row.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"args_string":"(tuple : NamedTuple, &block : T -> Void) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L488","def":{"name":"find_or_build","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> Void)"},"return_type":"T","visibility":"Public","body":"r = (where(tuple)).first\nif r\n  return r\nend\nstr_hash = {} of String => Clear::SQL::Any\ntuple.map do |k, v|\n  str_hash[k.to_s] = v\nend\nstr_hash.merge!(@tags)\nr = Clear::Model::Factory.build(T, str_hash)\nyield r\nr\n"}},{"id":"find_or_create(tuple:NamedTuple,&block:T->Void):T-instance-method","html_id":"find_or_create(tuple:NamedTuple,&amp;block:T-&gt;Void):T-instance-method","name":"find_or_create","doc":"Try to fetch a row. If not found, build a new object and setup\nthe fields like setup in the condition tuple.\nJust after building, save the object.","summary":"<p>Try to fetch a row.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"args_string":"(tuple : NamedTuple, &block : T -> Void) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L507","def":{"name":"find_or_create","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> Void)"},"return_type":"T","visibility":"Public","body":"r = find_or_build(tuple, &block)\nr.save\nr\n"}},{"id":"first(fetch_columns=false):T?-instance-method","html_id":"first(fetch_columns=false):T?-instance-method","name":"first","doc":"Get the first row from the collection query.\nif not found, return `nil`","summary":"<p>Get the first row from the collection query.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>) : T?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L521","def":{"name":"first","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"if T.pkey.nil? || order_bys.any?\nelse\n  order_by(Clear::SQL.escape(\"#{T.pkey}\"), \"ASC\")\nend\n(limit(1)).fetch do |hash|\n  return Clear::Model::Factory.build(T, hash, persisted: true, cache: @cache, fetch_columns: fetch_columns)\nend\nnil\n"}},{"id":"first!(fetch_columns=false):T-instance-method","html_id":"first!(fetch_columns=false):T-instance-method","name":"first!","doc":"Get the first row from the collection query.\nif not found, throw an error","summary":"<p>Get the first row from the collection query.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L515","def":{"name":"first!","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(first(fetch_columns)) || (raise(Clear::SQL::RecordNotFoundError.new))"}},{"id":"last(fetch_columns=false):T?-instance-method","html_id":"last(fetch_columns=false):T?-instance-method","name":"last","doc":"Get the last row from the collection query.\nif not found, return `nil`","summary":"<p>Get the last row from the collection query.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>) : T?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L549","def":{"name":"last","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"if T.pkey.nil? || order_bys.any?\nelse\n  order_by(\"#{T.pkey}\", \"ASC\")\nend\narr = order_bys.dup\nbegin\n  new_order = arr.map do |x|\n    Clear::SQL::Query::OrderBy::Record.new(x.op, (    x.dir == (:asc) ? :desc : :asc))\n  end\n  clear_order_bys.order_by(new_order)\n  (limit(1)).fetch do |hash|\n    return Clear::Model::Factory.build(T, hash, persisted: true, cache: @cache, fetch_columns: fetch_columns)\n  end\n  nil\nensure\n  clear_order_bys.order_by(order_bys)\nend\n"}},{"id":"last!(fetch_columns=false):T-instance-method","html_id":"last!(fetch_columns=false):T-instance-method","name":"last!","doc":"Get the last row from the collection query.\nif not found, throw an error","summary":"<p>Get the last row from the collection query.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>) : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L533","def":{"name":"last!","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(last(fetch_columns)).not_nil!"}},{"id":"map(fetch_columns=false,&block:T->X):Array(X)forallX-instance-method","html_id":"map(fetch_columns=false,&amp;block:T-&gt;X):Array(X)forallX-instance-method","name":"map","doc":"Build the SQL, send the query then build and array by applying the\nblock transformation over it.","summary":"<p>Build the SQL, send the query then build and array by applying the block transformation over it.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>, &block : T -> X) : Array(X) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L321","def":{"name":"map","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> X)"},"return_type":"Array(X)","visibility":"Public","body":"o = [] of X\neach(fetch_columns) do |mdl|\n  o << (block.call(mdl))\nend\no\n"}},{"id":"tags-instance-method","html_id":"tags-instance-method","name":"tags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L284","def":{"name":"tags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tags"}},{"id":"to_a(fetch_columns=false):Array(T)-instance-method","html_id":"to_a(fetch_columns=false):Array(T)-instance-method","name":"to_a","doc":"Create an array from the query.","summary":"<p>Create an array from the query.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>) : Array(T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L434","def":{"name":"to_a","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"cr = @cached_result\nif cr\n  return cr\nend\no = [] of T\neach(fetch_columns: fetch_columns) do |m|\n  o << m\nend\no\n"}},{"id":"unlink(item:T)-instance-method","html_id":"unlink(item:T)-instance-method","name":"unlink","doc":"Unlink the model currently referenced through a relation `has_many through`\n\nIf the current colleciton doesn't come from a `has_many through` relation,\nthis method will throw `Clear::SQL::OperationNotPermittedError`\n\nReturns `true` if unlinking is successful (e.g. one or more rows have been updated), or `false` otherwise","summary":"<p>Unlink the model currently referenced through a relation <code>has_many through</code></p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"args_string":"(item : T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/collection.cr#L422","def":{"name":"unlink","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unlink_operation = self.unlink_operation\nif unlink_operation\nelse\n  raise(\"Operation not permitted on this collection.\")\nend\nunlink_operation.call(item)\n@cached_result.try(&.remove(item))\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Column","path":"Clear/Model/Column.html","kind":"class","full_name":"Clear::Model::Column(T, C)","name":"Column","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/column.cr","line_number":9,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"UNKNOWN","name":"UNKNOWN","value":"UnknownClass.new","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"A column of a Model\nProvide some methods like:\n  - Informations persistance (value before, value changed?)\n  - Raise error if we try to access the value of a field\n    which is not gathered through the query system (uninitialized column).\n    Or use the `get_def` to get with default value","summary":"<p>A column of a Model Provide some methods like:   - Informations persistance (value before, value changed?)   - Raise error if we try to access the value of a field     which is not gathered through the query system (uninitialized column).</p>","class_methods":[],"constructors":[{"id":"new(name:String,value:T|UnknownClass=UNKNOWN,has_db_default=false)-class-method","html_id":"new(name:String,value:T|UnknownClass=UNKNOWN,has_db_default=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"UNKNOWN","external_name":"value","restriction":"T | UnknownClass"},{"name":"has_db_default","doc":null,"default_value":"false","external_name":"has_db_default","restriction":""}],"args_string":"(name : String, value : T | UnknownClass = <span class=\"t\">UNKNOWN</span>, has_db_default = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L24","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"UNKNOWN","external_name":"value","restriction":"T | UnknownClass"},{"name":"has_db_default","doc":null,"default_value":"false","external_name":"has_db_default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Column(T, C).allocate\n_.initialize(name, value, has_db_default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"changed?:Bool-instance-method","html_id":"changed?:Bool-instance-method","name":"changed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L23","def":{"name":"changed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@changed"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Completely clear the column, remove both `value` and `old_value` and turning the column in a non-defined state.","summary":"<p>Completely clear the column, remove both <code><a href=\"../../Clear/Model/Column.html#value%3AT-instance-method\">#value</a></code> and <code><a href=\"../../Clear/Model/Column.html#old_value%3AT%7CUnknownClass-instance-method\">#old_value</a></code> and turning the column in a non-defined state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L144","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.value = UNKNOWN\n@old_value = UNKNOWN\n@changed = false\nself\n"}},{"id":"clear_change_flag-instance-method","html_id":"clear_change_flag-instance-method","name":"clear_change_flag","doc":"Reset `changed?` flag to `false`. See `Column(T)#dirty!` for the counter part.","summary":"<p>Reset <code><a href=\"../../Clear/Model/Column.html#changed%3F%3ABool-instance-method\">#changed?</a></code> flag to <code>false</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L160","def":{"name":"clear_change_flag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changed = false\nself\n"}},{"id":"defined?-instance-method","html_id":"defined?-instance-method","name":"defined?","doc":"Check whether the column is defined or not.","summary":"<p>Check whether the column is defined or not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L132","def":{"name":"defined?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UNKNOWN != @value"}},{"id":"dirty!-instance-method","html_id":"dirty!-instance-method","name":"dirty!","doc":"Reset `changed?` flag to `true`. See `Column(T)#clear_change_flag` for the counter part.","summary":"<p>Reset <code><a href=\"../../Clear/Model/Column.html#changed%3F%3ABool-instance-method\">#changed?</a></code> flag to <code>true</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L154","def":{"name":"dirty!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changed = true\nself\n"}},{"id":"has_db_default?:Bool-instance-method","html_id":"has_db_default?:Bool-instance-method","name":"has_db_default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L24","def":{"name":"has_db_default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@has_db_default"}},{"id":"inspect-instance-method","html_id":"inspect-instance-method","name":"inspect","doc":"Inspect this column.\nIf a column is not loaded (e.g. not defined once), it will show \"#undef\".\nIf a column is dirty (e.g. change hasn't be saved), it will show a \"*\" after the value.","summary":"<p>Inspect this column.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L118","def":{"name":"inspect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if defined?\n  @value.inspect + (changed? ? \"*\" : \"\")\nelse\n  \"#undef\"\nend"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L22","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"nilable?-instance-method","html_id":"nilable?-instance-method","name":"nilable?","doc":"Return `true` if the value is an union of a Type with Nilable, `false` otherwise.","summary":"<p>Return <code>true</code> if the value is an union of a Type with Nilable, <code>false</code> otherwise.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L111","def":{"name":"nilable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.nilable?"}},{"id":"old_value:T|UnknownClass-instance-method","html_id":"old_value:T|UnknownClass-instance-method","name":"old_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T | UnknownClass","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L21","def":{"name":"old_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | UnknownClass","visibility":"Public","body":"@old_value"}},{"id":"reset(x:T?)-instance-method","html_id":"reset(x:T?)-instance-method","name":"reset","doc":"Reset the current field.\nRestore the `old_value` state to current value.\nReset the flag `changed` to false.","summary":"<p>Reset the current field.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T | ::Nil"}],"args_string":"(x : T?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L79","def":{"name":"reset","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if T.nilable? %}\n      @value = x.as(T)\n    {% else %}\n      raise null_column_mapping_error(@name, T) if x.nil?\n      @value = x.not_nil!\n    {% end %}\n@changed = false\n@old_value = @value\n"}},{"id":"reset_convert(x)-instance-method","html_id":"reset_convert(x)-instance-method","name":"reset_convert","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L55","def":{"name":"reset_convert","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset(C.to_column(x))"}},{"id":"revert-instance-method","html_id":"revert-instance-method","name":"revert","doc":"If the column is dirty (e.g the value has been changed), return to the previous state.","summary":"<p>If the column is dirty (e.g the value has been changed), return to the previous state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L46","def":{"name":"revert","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (@value != @old_value) && (@old_value != UNKNOWN)\n  @changed = true\n  @value = @old_value\nend\n@value\n"}},{"id":"set(x:T?)-instance-method","html_id":"set(x:T?)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T | ::Nil"}],"args_string":"(x : T?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L63","def":{"name":"set","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"old_value = @value\n{% if T.nilable? %}\n      @value = x.as(T)\n    {% else %}\n      raise null_column_mapping_error(@name, T) if x.nil?\n      @value = x.not_nil!\n    {% end %}\n@old_value = old_value\n@changed = true\n"}},{"id":"set_convert(x)-instance-method","html_id":"set_convert(x)-instance-method","name":"set_convert","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L59","def":{"name":"set_convert","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(C.to_column(x))"}},{"id":"to_sql_value(default=nil):Clear::SQL::Any-instance-method","html_id":"to_sql_value(default=nil):Clear::SQL::Any-instance-method","name":"to_sql_value","doc":"Return the database converted value using the converter","summary":"<p>Return the database converted value using the converter</p>","abstract":false,"args":[{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(default = <span class=\"n\">nil</span>) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L36","def":{"name":"to_sql_value","args":[{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"C.to_db(value(default))"}},{"id":"value:T-instance-method","html_id":"value:T-instance-method","name":"value","doc":"Returns the current value of this column.\nIf the value has never been initialized, throw an exception","summary":"<p>Returns the current value of this column.</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L30","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if defined?\nelse\n  raise(illegal_setter_access_to_undefined_column(@name))\nend\n@value.as(T)\n"}},{"id":"value(default:X):T|XforallX-instance-method","html_id":"value(default:X):T|XforallX-instance-method","name":"value","doc":"Returns the current value of this column or `default` if the value is undefined.","summary":"<p>Returns the current value of this column or <code>default</code> if the value is undefined.</p>","abstract":false,"args":[{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":"X"}],"args_string":"(default : X) : T | X forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L41","def":{"name":"value","args":[{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":"X"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | X","visibility":"Public","body":"defined? ? @value.as(T) : default"}},{"id":"value=(x:T)-instance-method","html_id":"value=(x:T)-instance-method","name":"value=","doc":"Set the value of the column to the value `x`. If `x` is not equal to the old value, then the column `changed?`\nflag is set to `true`.","summary":"<p>Set the value of the column to the value <code>x</code>.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"args_string":"(x : T)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L101","def":{"name":"value=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (@value == UNKNOWN) || (x != @value)\n  @value = x\n  @changed = (@old_value != @value)\nend\n@value\n"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Column/UnknownClass","path":"Clear/Model/Column/UnknownClass.html","kind":"struct","full_name":"Clear::Model::Column::UnknownClass","name":"UnknownClass","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/column.cr","line_number":12,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Column","kind":"class","full_name":"Clear::Model::Column(T, C)","name":"Column"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/column.cr#L12","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Connection","path":"Clear/Model/Connection.html","kind":"module","full_name":"Clear::Model::Connection","name":"Connection","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/connection.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/connection.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","path":"Clear/Model/Converter.html","kind":"module","full_name":"Clear::Model::Converter","name":"Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/base.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/base.cr"},{"filename":"clear/model/converters/number_converters.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONVERTERS","name":"CONVERTERS","value":"{\"Array(Bool)\" => Clear::Model::Converter::ArrayConverterBool, \"Array(Bool | Nil)\" => Clear::Model::Converter::ArrayConverterBool, \"Array(String)\" => Clear::Model::Converter::ArrayConverterString, \"Array(String | Nil)\" => Clear::Model::Converter::ArrayConverterString, \"Array(Float32)\" => Clear::Model::Converter::ArrayConverterFloat32, \"Array(Float32 | Nil)\" => Clear::Model::Converter::ArrayConverterFloat32, \"Array(Float64)\" => Clear::Model::Converter::ArrayConverterFloat64, \"Array(Float64 | Nil)\" => Clear::Model::Converter::ArrayConverterFloat64, \"Array(Int32)\" => Clear::Model::Converter::ArrayConverterInt32, \"Array(Int32 | Nil)\" => Clear::Model::Converter::ArrayConverterInt32, \"Array(Int64)\" => Clear::Model::Converter::ArrayConverterInt64, \"Array(Int64 | Nil)\" => Clear::Model::Converter::ArrayConverterInt64, \"Bool\" => Clear::Model::Converter::BoolConverter, \"JSON::Any\" => Clear::Model::Converter::JSON::AnyConverter, \"Int8\" => ::Clear::Model::Converter::Int8Converter, \"Int16\" => ::Clear::Model::Converter::Int16Converter, \"Int32\" => ::Clear::Model::Converter::Int32Converter, \"Int64\" => ::Clear::Model::Converter::Int64Converter, \"UInt8\" => ::Clear::Model::Converter::UInt8Converter, \"UInt16\" => ::Clear::Model::Converter::UInt16Converter, \"UInt32\" => ::Clear::Model::Converter::UInt32Converter, \"UInt64\" => ::Clear::Model::Converter::UInt64Converter, \"Float32\" => ::Clear::Model::Converter::Float32Converter, \"Float64\" => ::Clear::Model::Converter::Float64Converter, \"BigInt\" => ::Clear::Model::Converter::BigIntConverter, \"BigFloat\" => ::Clear::Model::Converter::BigFloatConverter, \"String\" => Clear::Model::Converter::StringConverter, \"Time\" => Clear::Model::Converter::TimeConverter, \"Crypto::Bcrypt::Password\" => Clear::Model::Converter::BcryptPasswordConverter, \"Clear::TSVector\" => Clear::TSVector::Converter, \"Clear::SQL::Interval\" => Clear::SQL::Interval::Converter, \"UUID\" => Clear::Model::Converter::UUIDConverter} of String => Base.class","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"add_converter(name,klazz)-macro","html_id":"add_converter(name,klazz)-macro","name":"add_converter","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"klazz","doc":null,"default_value":"","external_name":"klazz","restriction":""}],"args_string":"(name, klazz)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/base.cr#L10","def":{"name":"add_converter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"klazz","doc":null,"default_value":"","external_name":"klazz","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% CONVERTERS[name] = klazz %}\n\n  \n"}},{"id":"to_column(name,value)-macro","html_id":"to_column(name,value)-macro","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(name, value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/base.cr#L14","def":{"name":"to_column","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !name.is_a?(StringLiteral) %}\n      {% name = \"#{name}\" %}\n    {% end %}\n\n\n    \n{% if CONVERTERS[name] == nil %}\n      {% raise(\"Unknown converter: #{name}\") %}\n    {% end %}\n\n\n    \n{{ CONVERTERS[name] }}\n.to_column(\n{{ value }}\n)\n  \n"}},{"id":"to_db(name,value)-macro","html_id":"to_db(name,value)-macro","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(name, value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/base.cr#L26","def":{"name":"to_db","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !name.is_a?(StringLiteral) %}\n      {% name = \"#{name.resolve}\" %}\n    {% end %}\n\n\n    \n{% if CONVERTERS[name] == nil %}\n      {% raise(\"Unknown converter: #{name}\") %}\n    {% end %}\n\n\n    \n{{ CONVERTERS[name] }}\n.to_db(\n{{ value }}\n)\n  \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/ArrayConverterBool","path":"Clear/Model/Converter/ArrayConverterBool.html","kind":"module","full_name":"Clear::Model::Converter::ArrayConverterBool","name":"ArrayConverterBool","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/array_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Array(Bool)?-class-method","html_id":"to_column(x):Array(Bool)?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Array(Bool)?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::Bool) | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  return nil\nwhen ::Bool\n  return [x]\nwhen Array(::Bool)\n  return x\nwhen Array(::PG::BoolArray)\n  return x.map do |i|\n    case i\n    when ::Bool\n      i\n    else\n      nil\n    end\n  end.compact\nwhen ::JSON::Any\n  if arr = x.as_a?\n    return arr.map(&.as_bool)\n  else\n    raise(\"Cannot convert from #{x.class} to Array(Bool) [1]\")\n  end\nelse\n  raise(\"Cannot convert from #{x.class} to Array(Bool) [2]\")\nend"}},{"id":"to_db(x:Array(Bool)?):Clear::SQL::Any-class-method","html_id":"to_db(x:Array(Bool)?):Clear::SQL::Any-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Bool) | ::Nil"}],"args_string":"(x : Array(Bool)?) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Bool) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"if x\n  Clear::Expression.unsafe({\"Array[\", to_string(x), \"]::boolean[]\"}.join)\nelse\n  nil\nend"}},{"id":"to_string(x):String-class-method","html_id":"to_string(x):String-class-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_string","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case x\nwhen Array\n  x.map do |it|\n    to_string(it)\n  end.join(\", \")\nelse\n  \"\" + Clear::Expression[x]\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/ArrayConverterFloat32","path":"Clear/Model/Converter/ArrayConverterFloat32.html","kind":"module","full_name":"Clear::Model::Converter::ArrayConverterFloat32","name":"ArrayConverterFloat32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/array_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Array(Float32)?-class-method","html_id":"to_column(x):Array(Float32)?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Array(Float32)?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::Float32) | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  return nil\nwhen ::Float32\n  return [x]\nwhen Array(::Float32)\n  return x\nwhen Array(::PG::Float32Array)\n  return x.map do |i|\n    case i\n    when ::Float32\n      i\n    else\n      nil\n    end\n  end.compact\nwhen ::JSON::Any\n  if arr = x.as_a?\n    return arr.map(&.as_f32)\n  else\n    raise(\"Cannot convert from #{x.class} to Array(Float32) [1]\")\n  end\nelse\n  raise(\"Cannot convert from #{x.class} to Array(Float32) [2]\")\nend"}},{"id":"to_db(x:Array(Float32)?):Clear::SQL::Any-class-method","html_id":"to_db(x:Array(Float32)?):Clear::SQL::Any-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Float32) | ::Nil"}],"args_string":"(x : Array(Float32)?) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Float32) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"if x\n  Clear::Expression.unsafe({\"Array[\", to_string(x), \"]::real[]\"}.join)\nelse\n  nil\nend"}},{"id":"to_string(x):String-class-method","html_id":"to_string(x):String-class-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_string","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case x\nwhen Array\n  x.map do |it|\n    to_string(it)\n  end.join(\", \")\nelse\n  \"\" + Clear::Expression[x]\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/ArrayConverterFloat64","path":"Clear/Model/Converter/ArrayConverterFloat64.html","kind":"module","full_name":"Clear::Model::Converter::ArrayConverterFloat64","name":"ArrayConverterFloat64","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/array_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Array(Float64)?-class-method","html_id":"to_column(x):Array(Float64)?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Array(Float64)?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::Float64) | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  return nil\nwhen ::Float64\n  return [x]\nwhen Array(::Float64)\n  return x\nwhen Array(::PG::Float64Array)\n  return x.map do |i|\n    case i\n    when ::Float64\n      i\n    else\n      nil\n    end\n  end.compact\nwhen ::JSON::Any\n  if arr = x.as_a?\n    return arr.map(&.as_f)\n  else\n    raise(\"Cannot convert from #{x.class} to Array(Float64) [1]\")\n  end\nelse\n  raise(\"Cannot convert from #{x.class} to Array(Float64) [2]\")\nend"}},{"id":"to_db(x:Array(Float64)?):Clear::SQL::Any-class-method","html_id":"to_db(x:Array(Float64)?):Clear::SQL::Any-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Float64) | ::Nil"}],"args_string":"(x : Array(Float64)?) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Float64) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"if x\n  Clear::Expression.unsafe({\"Array[\", to_string(x), \"]::double precision[]\"}.join)\nelse\n  nil\nend"}},{"id":"to_string(x):String-class-method","html_id":"to_string(x):String-class-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_string","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case x\nwhen Array\n  x.map do |it|\n    to_string(it)\n  end.join(\", \")\nelse\n  \"\" + Clear::Expression[x]\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/ArrayConverterInt32","path":"Clear/Model/Converter/ArrayConverterInt32.html","kind":"module","full_name":"Clear::Model::Converter::ArrayConverterInt32","name":"ArrayConverterInt32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/array_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Array(Int32)?-class-method","html_id":"to_column(x):Array(Int32)?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Array(Int32)?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::Int32) | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  return nil\nwhen ::Int32\n  return [x]\nwhen Array(::Int32)\n  return x\nwhen Array(::PG::Int32Array)\n  return x.map do |i|\n    case i\n    when ::Int32\n      i\n    else\n      nil\n    end\n  end.compact\nwhen ::JSON::Any\n  if arr = x.as_a?\n    return arr.map(&.as_i)\n  else\n    raise(\"Cannot convert from #{x.class} to Array(Int32) [1]\")\n  end\nelse\n  raise(\"Cannot convert from #{x.class} to Array(Int32) [2]\")\nend"}},{"id":"to_db(x:Array(Int32)?):Clear::SQL::Any-class-method","html_id":"to_db(x:Array(Int32)?):Clear::SQL::Any-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Int32) | ::Nil"}],"args_string":"(x : Array(Int32)?) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Int32) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"if x\n  Clear::Expression.unsafe({\"Array[\", to_string(x), \"]::int[]\"}.join)\nelse\n  nil\nend"}},{"id":"to_string(x):String-class-method","html_id":"to_string(x):String-class-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_string","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case x\nwhen Array\n  x.map do |it|\n    to_string(it)\n  end.join(\", \")\nelse\n  \"\" + Clear::Expression[x]\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/ArrayConverterInt64","path":"Clear/Model/Converter/ArrayConverterInt64.html","kind":"module","full_name":"Clear::Model::Converter::ArrayConverterInt64","name":"ArrayConverterInt64","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/array_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Array(Int64)?-class-method","html_id":"to_column(x):Array(Int64)?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Array(Int64)?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::Int64) | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  return nil\nwhen ::Int64\n  return [x]\nwhen Array(::Int64)\n  return x\nwhen Array(::PG::Int64Array)\n  return x.map do |i|\n    case i\n    when ::Int64\n      i\n    else\n      nil\n    end\n  end.compact\nwhen ::JSON::Any\n  if arr = x.as_a?\n    return arr.map(&.as_i64)\n  else\n    raise(\"Cannot convert from #{x.class} to Array(Int64) [1]\")\n  end\nelse\n  raise(\"Cannot convert from #{x.class} to Array(Int64) [2]\")\nend"}},{"id":"to_db(x:Array(Int64)?):Clear::SQL::Any-class-method","html_id":"to_db(x:Array(Int64)?):Clear::SQL::Any-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Int64) | ::Nil"}],"args_string":"(x : Array(Int64)?) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::Int64) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"if x\n  Clear::Expression.unsafe({\"Array[\", to_string(x), \"]::bigint[]\"}.join)\nelse\n  nil\nend"}},{"id":"to_string(x):String-class-method","html_id":"to_string(x):String-class-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_string","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case x\nwhen Array\n  x.map do |it|\n    to_string(it)\n  end.join(\", \")\nelse\n  \"\" + Clear::Expression[x]\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/ArrayConverterString","path":"Clear/Model/Converter/ArrayConverterString.html","kind":"module","full_name":"Clear::Model::Converter::ArrayConverterString","name":"ArrayConverterString","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/array_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Array(String)?-class-method","html_id":"to_column(x):Array(String)?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Array(String)?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(::String) | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  return nil\nwhen ::String\n  return [x]\nwhen Array(::String)\n  return x\nwhen Array(::PG::StringArray)\n  return x.map do |i|\n    case i\n    when ::String\n      i\n    else\n      nil\n    end\n  end.compact\nwhen ::JSON::Any\n  if arr = x.as_a?\n    return arr.map(&.as_s)\n  else\n    raise(\"Cannot convert from #{x.class} to Array(String) [1]\")\n  end\nelse\n  raise(\"Cannot convert from #{x.class} to Array(String) [2]\")\nend"}},{"id":"to_db(x:Array(String)?):Clear::SQL::Any-class-method","html_id":"to_db(x:Array(String)?):Clear::SQL::Any-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::String) | ::Nil"}],"args_string":"(x : Array(String)?) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(::String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Any","visibility":"Public","body":"if x\n  Clear::Expression.unsafe({\"Array[\", to_string(x), \"]::text[]\"}.join)\nelse\n  nil\nend"}},{"id":"to_string(x):String-class-method","html_id":"to_string(x):String-class-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/array_converter.cr#L3","def":{"name":"to_string","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case x\nwhen Array\n  x.map do |it|\n    to_string(it)\n  end.join(\", \")\nelse\n  \"\" + Clear::Expression[x]\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Base","path":"Clear/Model/Converter/Base.html","kind":"class","full_name":"Clear::Model::Converter::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/base.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/base.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/BcryptPasswordConverter","path":"Clear/Model/Converter/BcryptPasswordConverter.html","kind":"module","full_name":"Clear::Model::Converter::BcryptPasswordConverter","name":"BcryptPasswordConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/bcrypt/bcrypt.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/bcrypt/bcrypt.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Crypto::Bcrypt::Password?-class-method","html_id":"to_column(x):Crypto::Bcrypt::Password?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Crypto::Bcrypt::Password?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/bcrypt/bcrypt.cr#L4","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Crypto::Bcrypt::Password | ::Nil","visibility":"Public","body":"case x\nwhen String\n  ::Crypto::Bcrypt::Password.new(x)\nwhen ::Crypto::Bcrypt::Password\n  x\nwhen Nil\n  nil\nelse\n  raise(Clear::ErrorMessages.converter_error(x.class.name, \"Crypto::Bcrypt::Password\"))\nend"}},{"id":"to_db(x:Crypto::Bcrypt::Password?)-class-method","html_id":"to_db(x:Crypto::Bcrypt::Password?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::Crypto::Bcrypt::Password | ::Nil"}],"args_string":"(x : Crypto::Bcrypt::Password?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/bcrypt/bcrypt.cr#L17","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::Crypto::Bcrypt::Password | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case x\nwhen ::Union(::Crypto::Bcrypt::Password, ::Nil)\n  x.to_s\nwhen Nil\n  nil\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/BigFloatConverter","path":"Clear/Model/Converter/BigFloatConverter.html","kind":"class","full_name":"Clear::Model::Converter::BigFloatConverter","name":"BigFloatConverter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":42,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to BigFloat","summary":"<p>Convert from and to BigFloat</p>","class_methods":[{"id":"to_column(x):BigFloat?-class-method","html_id":"to_column(x):BigFloat?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : BigFloat?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L43","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigFloat | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  BigFloat.new(x)\nelse\n  BigFloat.new(x.to_s)\nend"}},{"id":"to_db(x:BigFloat?)-class-method","html_id":"to_db(x:BigFloat?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"BigFloat | ::Nil"}],"args_string":"(x : BigFloat?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L42","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"BigFloat | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/BigIntConverter","path":"Clear/Model/Converter/BigIntConverter.html","kind":"class","full_name":"Clear::Model::Converter::BigIntConverter","name":"BigIntConverter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":41,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to BigInt","summary":"<p>Convert from and to BigInt</p>","class_methods":[{"id":"to_column(x):BigInt?-class-method","html_id":"to_column(x):BigInt?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : BigInt?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L42","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BigInt | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  BigInt.new(x)\nelse\n  BigInt.new(x.to_s)\nend"}},{"id":"to_db(x:BigInt?)-class-method","html_id":"to_db(x:BigInt?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"BigInt | ::Nil"}],"args_string":"(x : BigInt?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L41","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"BigInt | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/BoolConverter","path":"Clear/Model/Converter/BoolConverter.html","kind":"module","full_name":"Clear::Model::Converter::BoolConverter","name":"BoolConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/bool_converter.cr","line_number":11,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/bool_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert the column to a boolean\nIf value is not boolean (e.g. string or number), rules of `falsey`\nvalue is used:\n\nfalsey's values are:\n`false`, `nil`, `0`, `\"0\"`, `\"\"` (empty string), `\"false\"`, `\"f\"`\n\nAnything else is considered `true`","summary":"<p>Convert the column to a boolean If value is not boolean (e.g.</p>","class_methods":[{"id":"to_column(x):Bool?-class-method","html_id":"to_column(x):Bool?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Bool?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/bool_converter.cr#L12","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Bool\n  x\nwhen Number\n  x != 0\nwhen String\n  x = x.downcase\n  (((x != \"f\") && (x != \"false\")) && (x != \"\")) && (x != \"0\")\nelse\n  true\nend"}},{"id":"to_db(x:Bool?)-class-method","html_id":"to_db(x:Bool?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Bool | ::Nil"}],"args_string":"(x : Bool?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/bool_converter.cr#L28","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.nil? ? nil : (x ? \"t\" : \"f\")"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Float32Converter","path":"Clear/Model/Converter/Float32Converter.html","kind":"class","full_name":"Clear::Model::Converter::Float32Converter","name":"Float32Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":38,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to Float32","summary":"<p>Convert from and to Float32</p>","class_methods":[{"id":"to_column(x):Float32?-class-method","html_id":"to_column(x):Float32?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Float32?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L39","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  Float32.new(x)\nelse\n  Float32.new(x.to_s)\nend"}},{"id":"to_db(x:Float32?)-class-method","html_id":"to_db(x:Float32?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32 | ::Nil"}],"args_string":"(x : Float32?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L38","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Float64Converter","path":"Clear/Model/Converter/Float64Converter.html","kind":"class","full_name":"Clear::Model::Converter::Float64Converter","name":"Float64Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":39,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to Float64","summary":"<p>Convert from and to Float64</p>","class_methods":[{"id":"to_column(x):Float64?-class-method","html_id":"to_column(x):Float64?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Float64?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L40","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  Float64.new(x)\nelse\n  Float64.new(x.to_s)\nend"}},{"id":"to_db(x:Float64?)-class-method","html_id":"to_db(x:Float64?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64 | ::Nil"}],"args_string":"(x : Float64?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L39","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Int16Converter","path":"Clear/Model/Converter/Int16Converter.html","kind":"class","full_name":"Clear::Model::Converter::Int16Converter","name":"Int16Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":29,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to Int16","summary":"<p>Convert from and to Int16</p>","class_methods":[{"id":"to_column(x):Int16?-class-method","html_id":"to_column(x):Int16?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Int16?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L30","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  Int16.new(x)\nelse\n  Int16.new(x.to_s)\nend"}},{"id":"to_db(x:Int16?)-class-method","html_id":"to_db(x:Int16?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16 | ::Nil"}],"args_string":"(x : Int16?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L29","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Int32Converter","path":"Clear/Model/Converter/Int32Converter.html","kind":"class","full_name":"Clear::Model::Converter::Int32Converter","name":"Int32Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":30,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to Int32","summary":"<p>Convert from and to Int32</p>","class_methods":[{"id":"to_column(x):Int32?-class-method","html_id":"to_column(x):Int32?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Int32?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L31","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  Int32.new(x)\nelse\n  Int32.new(x.to_s)\nend"}},{"id":"to_db(x:Int32?)-class-method","html_id":"to_db(x:Int32?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32 | ::Nil"}],"args_string":"(x : Int32?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L30","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Int64Converter","path":"Clear/Model/Converter/Int64Converter.html","kind":"class","full_name":"Clear::Model::Converter::Int64Converter","name":"Int64Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":31,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to Int64","summary":"<p>Convert from and to Int64</p>","class_methods":[{"id":"to_column(x):Int64?-class-method","html_id":"to_column(x):Int64?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Int64?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L32","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  Int64.new(x)\nelse\n  Int64.new(x.to_s)\nend"}},{"id":"to_db(x:Int64?)-class-method","html_id":"to_db(x:Int64?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int64 | ::Nil"}],"args_string":"(x : Int64?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L31","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/Int8Converter","path":"Clear/Model/Converter/Int8Converter.html","kind":"class","full_name":"Clear::Model::Converter::Int8Converter","name":"Int8Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":28,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to Int8","summary":"<p>Convert from and to Int8</p>","class_methods":[{"id":"to_column(x):Int8?-class-method","html_id":"to_column(x):Int8?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Int8?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L29","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int8 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  Int8.new(x)\nelse\n  Int8.new(x.to_s)\nend"}},{"id":"to_db(x:Int8?)-class-method","html_id":"to_db(x:Int8?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int8 | ::Nil"}],"args_string":"(x : Int8?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L28","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int8 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/JSON","path":"Clear/Model/Converter/JSON.html","kind":"module","full_name":"Clear::Model::Converter::JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/json_any_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/json_any_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/JSON/AnyConverter","path":"Clear/Model/Converter/JSON/AnyConverter.html","kind":"module","full_name":"Clear::Model::Converter::JSON::AnyConverter","name":"AnyConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/converters/json_any_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/json_any_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/JSON","kind":"module","full_name":"Clear::Model::Converter::JSON","name":"JSON"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):::JSON::Any?-class-method","html_id":"to_column(x):::JSON::Any?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : ::JSON::Any?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/json_any_converter.cr#L4","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::JSON::Any | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen ::JSON::Any\n  x\nelse\n  ::JSON.parse(x.to_s)\nend"}},{"id":"to_db(x:::JSON::Any?)-class-method","html_id":"to_db(x:::JSON::Any?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::JSON::Any | ::Nil"}],"args_string":"(x : ::JSON::Any?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/json_any_converter.cr#L15","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::JSON::Any | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.to_json"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/StringConverter","path":"Clear/Model/Converter/StringConverter.html","kind":"class","full_name":"Clear::Model::Converter::StringConverter","name":"StringConverter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/string_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/string_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):String?-class-method","html_id":"to_column(x):String?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/string_converter.cr#L4","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Slice(UInt8)\n  String.new(x)\nelse\n  x.to_s\nend"}},{"id":"to_db(x:String?)-class-method","html_id":"to_db(x:String?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String | ::Nil"}],"args_string":"(x : String?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/string_converter.cr#L15","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/TimeConverter","path":"Clear/Model/Converter/TimeConverter.html","kind":"class","full_name":"Clear::Model::Converter::TimeConverter","name":"TimeConverter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/time_converter.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/time_converter.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Time?-class-method","html_id":"to_column(x):Time?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Time?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/time_converter.cr#L4","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Time\n  x.to_local\nelse\n  Time.parse_local(x.to_s, \"%F %X.%L\")\nend"}},{"id":"to_db(x:Time?)-class-method","html_id":"to_db(x:Time?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Time | ::Nil"}],"args_string":"(x : Time?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/time_converter.cr#L15","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Time | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case x\nwhen Nil\n  nil\nelse\n  x.to_utc.to_s(Clear::Expression::DATABASE_DATE_TIME_FORMAT)\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/UInt16Converter","path":"Clear/Model/Converter/UInt16Converter.html","kind":"class","full_name":"Clear::Model::Converter::UInt16Converter","name":"UInt16Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":34,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to UInt16","summary":"<p>Convert from and to UInt16</p>","class_methods":[{"id":"to_column(x):UInt16?-class-method","html_id":"to_column(x):UInt16?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : UInt16?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L35","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  UInt16.new(x)\nelse\n  UInt16.new(x.to_s)\nend"}},{"id":"to_db(x:UInt16?)-class-method","html_id":"to_db(x:UInt16?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt16 | ::Nil"}],"args_string":"(x : UInt16?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L34","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt16 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/UInt32Converter","path":"Clear/Model/Converter/UInt32Converter.html","kind":"class","full_name":"Clear::Model::Converter::UInt32Converter","name":"UInt32Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":35,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to UInt32","summary":"<p>Convert from and to UInt32</p>","class_methods":[{"id":"to_column(x):UInt32?-class-method","html_id":"to_column(x):UInt32?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : UInt32?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L36","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  UInt32.new(x)\nelse\n  UInt32.new(x.to_s)\nend"}},{"id":"to_db(x:UInt32?)-class-method","html_id":"to_db(x:UInt32?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt32 | ::Nil"}],"args_string":"(x : UInt32?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L35","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/UInt64Converter","path":"Clear/Model/Converter/UInt64Converter.html","kind":"class","full_name":"Clear::Model::Converter::UInt64Converter","name":"UInt64Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":36,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to UInt64","summary":"<p>Convert from and to UInt64</p>","class_methods":[{"id":"to_column(x):UInt64?-class-method","html_id":"to_column(x):UInt64?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : UInt64?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L37","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  UInt64.new(x)\nelse\n  UInt64.new(x.to_s)\nend"}},{"id":"to_db(x:UInt64?)-class-method","html_id":"to_db(x:UInt64?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt64 | ::Nil"}],"args_string":"(x : UInt64?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L36","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/UInt8Converter","path":"Clear/Model/Converter/UInt8Converter.html","kind":"class","full_name":"Clear::Model::Converter::UInt8Converter","name":"UInt8Converter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/converters/number_converters.cr","line_number":33,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from and to UInt8","summary":"<p>Convert from and to UInt8</p>","class_methods":[{"id":"to_column(x):UInt8?-class-method","html_id":"to_column(x):UInt8?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : UInt8?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L34","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8 | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen Number\n  UInt8.new(x)\nelse\n  UInt8.new(x.to_s)\nend"}},{"id":"to_db(x:UInt8?)-class-method","html_id":"to_db(x:UInt8?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt8 | ::Nil"}],"args_string":"(x : UInt8?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/converters/number_converters.cr#L33","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt8 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter/UUIDConverter","path":"Clear/Model/Converter/UUIDConverter.html","kind":"class","full_name":"Clear::Model::Converter::UUIDConverter","name":"UUIDConverter","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/uuid/uuid.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/uuid/uuid.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":"Convert from UUID column to Crystal's UUID","summary":"<p>Convert from UUID column to Crystal's UUID</p>","class_methods":[{"id":"to_column(x):UUID?-class-method","html_id":"to_column(x):UUID?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : UUID?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/uuid/uuid.cr#L3","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UUID | ::Nil","visibility":"Public","body":"case x\nwhen String\n  UUID.new(x)\nwhen Slice(UInt8)\n  UUID.new(x)\nwhen UUID\n  x\nwhen Nil\n  nil\nelse\n  raise(Clear::ErrorMessages.converter_error(x.class.name, \"UUID\"))\nend"}},{"id":"to_db(x:UUID?)-class-method","html_id":"to_db(x:UUID?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UUID | ::Nil"}],"args_string":"(x : UUID?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/uuid/uuid.cr#L18","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UUID | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.to_s"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Error","path":"Clear/Model/Error.html","kind":"class","full_name":"Clear::Model::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/errors.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/anykeyh/clear/Clear/Model/InvalidError","kind":"class","full_name":"Clear::Model::InvalidError","name":"InvalidError"},{"html_id":"github.com/anykeyh/clear/Clear/Model/ReadOnlyError","kind":"class","full_name":"Clear::Model::ReadOnlyError","name":"ReadOnlyError"}],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/EventManager","path":"Clear/Model/EventManager.html","kind":"class","full_name":"Clear::Model::EventManager","name":"EventManager","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/event_manager.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/event_manager.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"EVENT_CALLBACKS","name":"EVENT_CALLBACKS","value":"{} of EventKey => Array(HookFunction)","doc":null,"summary":null},{"id":"INHERITANCE_MAP","name":"INHERITANCE_MAP","value":"{} of String => String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"Global storage for model lifecycle event management\n\nThis class acts as a storage and can trigger events\nThis class a singleton.","summary":"<p>Global storage for model lifecycle event management</p>","class_methods":[{"id":"add_inheritance(parent,child)-class-method","html_id":"add_inheritance(parent,child)-class-method","name":"add_inheritance","doc":"Map the inheritance between models. Events which belongs to parent model are triggered when child model lifecycle\nactions occurs","summary":"<p>Map the inheritance between models.</p>","abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""},{"name":"child","doc":null,"default_value":"","external_name":"child","restriction":""}],"args_string":"(parent, child)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/event_manager.cr#L42","def":{"name":"add_inheritance","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""},{"name":"child","doc":null,"default_value":"","external_name":"child","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"INHERITANCE_MAP[child.to_s] = parent.to_s"}},{"id":"attach(klazz,direction:Symbol,event:Symbol,block:HookFunction)-class-method","html_id":"attach(klazz,direction:Symbol,event:Symbol,block:HookFunction)-class-method","name":"attach","doc":"Add an event for a specific class, to a specific direction (after or before), a specific event Symbol (validate, save, commit...)","summary":"<p>Add an event for a specific class, to a specific direction (after or before), a specific event Symbol (validate, save, commit...)</p>","abstract":false,"args":[{"name":"klazz","doc":null,"default_value":"","external_name":"klazz","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Symbol"},{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Symbol"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"HookFunction"}],"args_string":"(klazz, direction : Symbol, event : Symbol, block : HookFunction)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/event_manager.cr#L47","def":{"name":"attach","args":[{"name":"klazz","doc":null,"default_value":"","external_name":"klazz","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Symbol"},{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Symbol"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"HookFunction"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tuple = {klazz.to_s, direction, event}\narr = EVENT_CALLBACKS.fetch(tuple) do\n  [] of HookFunction\nend\narr.push(block)\nEVENT_CALLBACKS[tuple] = arr\n"}},{"id":"trigger(klazz,direction:Symbol,event:Symbol,mdl:Clear::Model)-class-method","html_id":"trigger(klazz,direction:Symbol,event:Symbol,mdl:Clear::Model)-class-method","name":"trigger","doc":"Trigger events callback for a specific model.\nDirection can be `:before` and `:after`\nIn case of `:before` direction, the events are called in reverse order:\n```\nbefore:\n- Last defined event\n- First defined event\naction\nafter:\n- First defined events\n- Last defined events","summary":"<p>Trigger events callback for a specific model.</p>","abstract":false,"args":[{"name":"klazz","doc":null,"default_value":"","external_name":"klazz","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Symbol"},{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Symbol"},{"name":"mdl","doc":null,"default_value":"","external_name":"mdl","restriction":"Clear::Model"}],"args_string":"(klazz, direction : Symbol, event : Symbol, mdl : Clear::Model)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/event_manager.cr#L23","def":{"name":"trigger","args":[{"name":"klazz","doc":null,"default_value":"","external_name":"klazz","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Symbol"},{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Symbol"},{"name":"mdl","doc":null,"default_value":"","external_name":"mdl","restriction":"Clear::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arr = EVENT_CALLBACKS.fetch({klazz.to_s, direction, event}) do\n  [] of HookFunction\nend\nparent = INHERITANCE_MAP[klazz.to_s]?\nif direction == (:after)\n  arr = arr.reverse\n  arr.each(&.call(mdl))\n  if parent.nil?\n  else\n    self.trigger(parent, direction, event, mdl)\n  end\nelse\n  if parent.nil?\n  else\n    self.trigger(parent, direction, event, mdl)\n  end\n  arr.each(&.call(mdl))\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/EventManager/EventKey","path":"Clear/Model/EventManager/EventKey.html","kind":"alias","full_name":"Clear::Model::EventManager::EventKey","name":"EventKey","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/event_manager.cr","line_number":7,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/event_manager.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"Tuple(String, Symbol, Symbol)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/EventManager","kind":"class","full_name":"Clear::Model::EventManager","name":"EventManager"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/EventManager/HookFunction","path":"Clear/Model/EventManager/HookFunction.html","kind":"alias","full_name":"Clear::Model::EventManager::HookFunction","name":"HookFunction","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/event_manager.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/event_manager.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"Proc(Clear::Model, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/EventManager","kind":"class","full_name":"Clear::Model::EventManager","name":"EventManager"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory","path":"Clear/Model/Factory.html","kind":"module","full_name":"Clear::Model::Factory","name":"Factory","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/factories/base.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/base.cr"},{"filename":"clear/model/factories/polymorphic_factory.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr"},{"filename":"clear/model/factories/simple_factory.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/simple_factory.cr"},{"filename":"clear/model/factory.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factory.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"FACTORIES","name":"FACTORIES","value":"{\"Clear::Reflection::Column\" => ::Clear::Model::Factory::SimpleFactory(Clear::Reflection::Column).new, \"Clear::Reflection::Table\" => ::Clear::Model::Factory::SimpleFactory(Clear::Reflection::Table).new} of String => Clear::Model::Factory::Base","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[{"id":"build(type:String,h:Hash,cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false):Clear::Model-class-method","html_id":"build(type:String,h:Hash,cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false):Clear::Model-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(type : String, h : Hash, cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted = <span class=\"n\">false</span>, fetch_columns = <span class=\"n\">false</span>) : Clear::Model","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factory.cr#L10","def":{"name":"build","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model","visibility":"Public","body":"factory = FACTORIES[type].as(Base)\nfactory.build(h, cache, persisted, fetch_columns)\n"}},{"id":"build(type:T.class,h:Hash,cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false):TforallT-class-method","html_id":"build(type:T.class,h:Hash,cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false):TforallT-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>, h : Hash, cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted = <span class=\"n\">false</span>, fetch_columns = <span class=\"n\">false</span>) : T forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factory.cr#L21","def":{"name":"build","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(self.build(T.name, h, cache, persisted, fetch_columns)).as(T)"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"add(type,factory)-macro","html_id":"add(type,factory)-macro","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"factory","doc":null,"default_value":"","external_name":"factory","restriction":""}],"args_string":"(type, factory)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factory.cr#L6","def":{"name":"add","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"factory","doc":null,"default_value":"","external_name":"factory","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% Clear::Model::Factory::FACTORIES[type] = factory %}\n\n  \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/Base","path":"Clear/Model/Factory/Base.html","kind":"module","full_name":"Clear::Model::Factory::Base","name":"Base","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/factories/base.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/base.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/PolymorphicFactory","kind":"class","full_name":"Clear::Model::Factory::PolymorphicFactory(T)","name":"PolymorphicFactory"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/SimpleFactory","kind":"class","full_name":"Clear::Model::Factory::SimpleFactory(T)","name":"SimpleFactory"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory","kind":"module","full_name":"Clear::Model::Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build(h:Hash(String,Clear::SQL::Any),cache:Clear::Model::QueryCache?=nil,persisted:Bool=false,fetch_columns:Bool=false):Clear::Model-instance-method","html_id":"build(h:Hash(String,Clear::SQL::Any),cache:Clear::Model::QueryCache?=nil,persisted:Bool=false,fetch_columns:Bool=false):Clear::Model-instance-method","name":"build","doc":null,"summary":null,"abstract":true,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, ::Clear::SQL::Any)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":"Bool"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":"Bool"}],"args_string":"(h : Hash(String, Clear::SQL::Any), cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted : Bool = <span class=\"n\">false</span>, fetch_columns : Bool = <span class=\"n\">false</span>) : Clear::Model","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/base.cr#L3","def":{"name":"build","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, ::Clear::SQL::Any)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":"Bool"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/PolymorphicFactory","path":"Clear/Model/Factory/PolymorphicFactory.html","kind":"class","full_name":"Clear::Model::Factory::PolymorphicFactory(T)","name":"PolymorphicFactory","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/Base","kind":"module","full_name":"Clear::Model::Factory::Base","name":"Base"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/factories/polymorphic_factory.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/Base","kind":"module","full_name":"Clear::Model::Factory::Base","name":"Base"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory","kind":"module","full_name":"Clear::Model::Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(type_field,self_class)-class-method","html_id":"new(type_field,self_class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_field","doc":null,"default_value":"","external_name":"type_field","restriction":""},{"name":"self_class","doc":null,"default_value":"","external_name":"self_class","restriction":""}],"args_string":"(type_field, self_class)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr#L9","def":{"name":"new","args":[{"name":"type_field","doc":null,"default_value":"","external_name":"type_field","restriction":""},{"name":"self_class","doc":null,"default_value":"","external_name":"self_class","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PolymorphicFactory(T).allocate\n_.initialize(type_field, self_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build(h:Hash(String,Clear::SQL::Any),cache:Clear::Model::QueryCache?=nil,persisted:Bool=false,fetch_columns:Bool=false):Clear::Model-instance-method","html_id":"build(h:Hash(String,Clear::SQL::Any),cache:Clear::Model::QueryCache?=nil,persisted:Bool=false,fetch_columns:Bool=false):Clear::Model-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, ::Clear::SQL::Any)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":"Bool"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":"Bool"}],"args_string":"(h : Hash(String, Clear::SQL::Any), cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted : Bool = <span class=\"n\">false</span>, fetch_columns : Bool = <span class=\"n\">false</span>) : Clear::Model","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr#L12","def":{"name":"build","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, ::Clear::SQL::Any)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":"Bool"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model","visibility":"Public","body":"v = h[@type_field]\ncase v\nwhen String\n  if v == T.name\n    {% if T.abstract? %}\n            raise \"Cannot instantiate #{@type_field} because it is abstract class\"\n          {% else %}\n            T.new(v, h, cache, persisted, fetch_columns).as(Clear::Model)\n          {% end %}\n  else\n    (Clear::Model::Factory.build(v, h, cache, persisted, fetch_columns)).as(Clear::Model)\n  end\nwhen Nil\n  raise(Clear::ErrorMessages.polymorphic_nil(@type_field))\nelse\n  raise(Clear::ErrorMessages.polymorphic_nil(@type_field))\nend\n"}},{"id":"self_class:String-instance-method","html_id":"self_class:String-instance-method","name":"self_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr#L9","def":{"name":"self_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@self_class"}},{"id":"self_class=(self_class:String)-instance-method","html_id":"self_class=(self_class:String)-instance-method","name":"self_class=","doc":null,"summary":null,"abstract":false,"args":[{"name":"self_class","doc":null,"default_value":"","external_name":"self_class","restriction":"String"}],"args_string":"(self_class : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr#L13","def":{"name":"self_class=","args":[{"name":"self_class","doc":null,"default_value":"","external_name":"self_class","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@self_class = self_class"}},{"id":"type_field:String-instance-method","html_id":"type_field:String-instance-method","name":"type_field","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr#L8","def":{"name":"type_field","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type_field"}},{"id":"type_field=(type_field:String)-instance-method","html_id":"type_field=(type_field:String)-instance-method","name":"type_field=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_field","doc":null,"default_value":"","external_name":"type_field","restriction":"String"}],"args_string":"(type_field : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/polymorphic_factory.cr#L12","def":{"name":"type_field=","args":[{"name":"type_field","doc":null,"default_value":"","external_name":"type_field","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type_field = type_field"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/SimpleFactory","path":"Clear/Model/Factory/SimpleFactory.html","kind":"class","full_name":"Clear::Model::Factory::SimpleFactory(T)","name":"SimpleFactory","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/Base","kind":"module","full_name":"Clear::Model::Factory::Base","name":"Base"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/factories/simple_factory.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/simple_factory.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory/Base","kind":"module","full_name":"Clear::Model::Factory::Base","name":"Base"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/Factory","kind":"module","full_name":"Clear::Model::Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build(h:Hash(String,Clear::SQL::Any),cache:Clear::Model::QueryCache?=nil,persisted:Bool=false,fetch_columns:Bool=false):Clear::Model-instance-method","html_id":"build(h:Hash(String,Clear::SQL::Any),cache:Clear::Model::QueryCache?=nil,persisted:Bool=false,fetch_columns:Bool=false):Clear::Model-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, ::Clear::SQL::Any)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":"Bool"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":"Bool"}],"args_string":"(h : Hash(String, Clear::SQL::Any), cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted : Bool = <span class=\"n\">false</span>, fetch_columns : Bool = <span class=\"n\">false</span>) : Clear::Model","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/factories/simple_factory.cr#L7","def":{"name":"build","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, ::Clear::SQL::Any)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":"Bool"},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model","visibility":"Public","body":"(T.new(h, cache, persisted, fetch_columns)).as(Clear::Model)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/FullTextSearchable","path":"Clear/Model/FullTextSearchable.html","kind":"module","full_name":"Clear::Model::FullTextSearchable","name":"FullTextSearchable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/full_text_searchable/model.cr","line_number":86,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/model.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"Full text search plugin offers full integration with `tsvector` capabilities of\nPostgresql.\n\nIt allows you to query models through the text content of one or multiple fields.\n\n### The blog example\n\nLet's assume we have a blog and want to implement full text search over title and content:\n\n```crystal\ncreate_table \"posts\" do |t|\n  t.string \"title\", nullable: false\n  t.string \"content\", nullable: false\n\n  t.full_text_searchable on: [{\"title\", 'A'}, {\"content\", 'C'}]\nend\n```\n\nThis migration will create a 3rd column named `full_text_vector` of type `tsvector`,\na gin index, a trigger and a function to update automatically this column.\n\nOver the `on` keyword, `'{\"title\", 'A'}'` means it allows search of the content of \"title\", with level of priority (weight) \"A\", which tells postgres than title content is more meaningful than the article content itself.\n\nNow, let's build some models:\n\n```crystal\n\n  model Post\n    include Clear::Model\n    #...\n\n    full_text_searchable\n  end\n\n  Post.create!({title: \"About poney\", content: \"Poney are cool\"})\n  Post.create!({title: \"About dog and cat\", content: \"Cat and dog are cool. But not as much as poney\"})\n  Post.create!({title: \"You won't believe: She raises her poney like as star!\", content: \"She's cool because poney are cool\"})\n```\n\nSearch is now easily done\n```crystal\nPost.query.search(\"poney\") # Return all the articles !\n```\n\nObviously, search call can be chained:\n\n```crystal\nuser = User.find! { email == \"some_email@example.com\" }\nPost.query.from_user(user).search(\"orm\")\n```\n\n### Additional parameters\n\n#### `catalog`\n\nSelect the catalog to use to build the tsquery. By default, `pg_catalog.english` is used.\n\n```crystal\n# in your migration:\nt.full_text_searchable on: [{\"title\", 'A'}, {\"content\", 'C'}], catalog: \"pg_catalog.french\"\n\n# in your model\nfull_text_searchable catalog: \"pg_catalog.french\"\n```\n\nNote: For now, Clear doesn't offers dynamic selection of catalog (for let's say multi-lang service).\nIf your app need this feature, do not hesitate to open an issue.\n\n#### `trigger_name`, `function_name`\n\nIn migration, you can change the name generated for the trigger and the function, using theses two keys.\n\n#### `dest_field`\n\nThe field created in the database, which will contains your ts vector. Default is `full_text_vector`.\n\n```crystal\n# in your migration\nt.full_text_searchable on: [{\"title\", 'A'}, {\"content\", 'C'}], dest_field: \"tsv\"\n\n# in your model\nfull_text_searchable \"tsv\"\n```","summary":"<p>Full text search plugin offers full integration with <code>tsvector</code> capabilities of Postgresql.</p>","class_methods":[{"id":"to_tsq(text)-class-method","html_id":"to_tsq(text)-class-method","name":"to_tsq","doc":"Parse client side text and generate string ready to be ingested by PG's `to_tsquery`.\n\nAuthor note: pg `to_tsquery` is awesome but can easily fail to parse.\n  `search` method use then a wrapper text_to_search used to ensure than\n  request is understood and produce ALWAYS legal string for `to_tsquery`\nThis is a good helper then to use with the input of your end-users !\n\nHowever, this helper can be improved, as it doesn't use all the features\nof tsvector (parentesis, OR operator etc...)","summary":"<p>Parse client side text and generate string ready to be ingested by PG's <code>to_tsquery</code>.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/model.cr#L178","def":{"name":"to_tsq","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"text = text.gsub(/\\+/, \" \")\ntokens = split_to_exp(text)\ntokens.map do |__arg0|\n  modifier = __arg0[0]\n  value = __arg0[1]\n  if modifier == (:-)\n    \"!\" + Clear::Expression[value]\n  else\n    Clear::Expression[value]\n  end\nend.join(\" & \")\n"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"full_text_searchable(through=&quot;full_text_vector&quot;,catalog=&quot;pg_catalog.english&quot;,scope_name=&quot;search&quot;)-macro","html_id":"full_text_searchable(through=&amp;quot;full_text_vector&amp;quot;,catalog=&amp;quot;pg_catalog.english&amp;quot;,scope_name=&amp;quot;search&amp;quot;)-macro","name":"full_text_searchable","doc":"Set this model as searchable using tsvector","summary":"<p>Set this model as searchable using tsvector</p>","abstract":false,"args":[{"name":"through","doc":null,"default_value":"\"full_text_vector\"","external_name":"through","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"scope_name","doc":null,"default_value":"\"search\"","external_name":"scope_name","restriction":""}],"args_string":"(through = <span class=\"s\">&quot;full_text_vector&quot;</span>, catalog = <span class=\"s\">&quot;pg_catalog.english&quot;</span>, scope_name = <span class=\"s\">&quot;search&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/model.cr#L88","def":{"name":"full_text_searchable","args":[{"name":"through","doc":null,"default_value":"\"full_text_vector\"","external_name":"through","restriction":""},{"name":"catalog","doc":null,"default_value":"\"pg_catalog.english\"","external_name":"catalog","restriction":""},{"name":"scope_name","doc":null,"default_value":"\"search\"","external_name":"scope_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    column( \n{{ through.id }}\n : Clear::TSVector, presence: false)\n\n    scope \"\n{{ scope_name.id }}\n\" do |str|\n      where\n{ op(\n{{ through.id }}\n, to_tsquery(\n{{ catalog }}\n,\n        Clear::Model::FullTextSearchable.to_tsq(str)), \"@@\") }\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","path":"Clear/Model/HasColumns.html","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_columns.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/View","kind":"module","full_name":"Clear::View","name":"View"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"This module declare all the methods and macro related to columns in `Clear::Model`","summary":"<p>This module declare all the methods and macro related to columns in <code><a href=\"../../Clear/Model.html\">Clear::Model</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"[](x):Clear::SQL::Any-instance-method","html_id":"[](x):Clear::SQL::Any-instance-method","name":"[]","doc":"Access to direct SQL attributes given by the request used to build the model.\nAccess is read only and updating the model columns will not apply change to theses columns.\n\n```\n  model = Model.query.select(\"MIN(id) as min_id\").first(fetch_columns: true)\n  id = model[\"min_id\"].to_i32\n```","summary":"<p>Access to direct SQL attributes given by the request used to build the model.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L74","def":{"name":"[]","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Clear::SQL::Any","visibility":"Public","body":"attributes[x]"}},{"id":"[]?(x):Clear::SQL::Any-instance-method","html_id":"[]?(x):Clear::SQL::Any-instance-method","name":"[]?","doc":"Access to direct SQL attributes given by the request and used to build the model\nor Nil if not found.\n\nAccess is read only and updating the model columns will not apply change to theses columns.\nYou must set `fetch_column: true` in your model to access the attributes.","summary":"<p>Access to direct SQL attributes given by the request and used to build the model or Nil if not found.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Clear::SQL::Any","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L83","def":{"name":"[]?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Clear::SQL::Any","visibility":"Public","body":"attributes[x]?"}},{"id":"reset(h:Hash(String,UNDERSCORE))-instance-method","html_id":"reset(h:Hash(String,UNDERSCORE))-instance-method","name":"reset","doc":"See `reset(**t : **T)`","summary":"<p>See <code><a href=\"../../Clear/Model/HasColumns.html#reset%28h%3AHash%28String%2CUNDERSCORE%29%29-instance-method\">#reset(**t : **T)</a></code></p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"args_string":"(h : Hash(String, UNDERSCORE))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L35","def":{"name":"reset","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"reset(h:Hash(Symbol,UNDERSCORE))-instance-method","html_id":"reset(h:Hash(Symbol,UNDERSCORE))-instance-method","name":"reset","doc":"See `reset(**t : **T)`","summary":"<p>See <code><a href=\"../../Clear/Model/HasColumns.html#reset%28h%3AHash%28String%2CUNDERSCORE%29%29-instance-method\">#reset(**t : **T)</a></code></p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"args_string":"(h : Hash(Symbol, UNDERSCORE))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L39","def":{"name":"reset","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"reset(**t:**T)forallT-instance-method","html_id":"reset(**t:**T)forallT-instance-method","name":"reset","doc":"Reset one or multiple columns; Reseting set the current value of the column\nto the given value, while the `changed?` flag remains false.\nIf you call save on a persisted model, the reset columns won't be\ncommited in the UPDATE query.","summary":"<p>Reset one or multiple columns; Reseting set the current value of the column to the given value, while the <code>changed?</code> flag remains false.</p>","abstract":false,"args":[],"args_string":"(**t : **T) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L26","def":{"name":"reset","args":[],"double_splat":{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"set(h:Hash(String,UNDERSCORE))-instance-method","html_id":"set(h:Hash(String,UNDERSCORE))-instance-method","name":"set","doc":"See `set(**t : **T)`","summary":"<p>See <code><a href=\"../../Clear/Model/HasColumns.html#set%28h%3AHash%28String%2CUNDERSCORE%29%29-instance-method\">#set(**t : **T)</a></code></p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"args_string":"(h : Hash(String, UNDERSCORE))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L59","def":{"name":"set","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"set(h:Hash(Symbol,UNDERSCORE))-instance-method","html_id":"set(h:Hash(Symbol,UNDERSCORE))-instance-method","name":"set","doc":"See `set(**t : **T)`","summary":"<p>See <code><a href=\"../../Clear/Model/HasColumns.html#set%28h%3AHash%28String%2CUNDERSCORE%29%29-instance-method\">#set(**t : **T)</a></code></p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"args_string":"(h : Hash(Symbol, UNDERSCORE))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L63","def":{"name":"set","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"set(**t:**T)forallT-instance-method","html_id":"set(**t:**T)forallT-instance-method","name":"set","doc":"Set one or multiple columns to a specific value\nThis two are equivalents:\n\n```\n  model.set(a: 1)\n  model.a = 1\n```","summary":"<p>Set one or multiple columns to a specific value This two are equivalents:</p>","abstract":false,"args":[],"args_string":"(**t : **T) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L50","def":{"name":"set","args":[],"double_splat":{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_h(full=false)-instance-method","html_id":"to_h(full=false)-instance-method","name":"to_h","doc":"Returns the model columns as Hash.\nCalling `to_h` will returns only the defined columns, while settings the optional parameter `full` to `true`\n  will return all the column and fill the undefined columns by `nil` values.\nExample:\n\n```\n# Assuming our model has a primary key, a first name and last name and two timestamp columns:\nmodel = Model.query.select(\"first_name, last_name\").first!\nmodel.to_h # => { \"first_name\" => \"Johnny\", \"last_name\" => \"Walker\" }\nmodel.to_h(full: true) # => {\"id\" => nil, \"first_name\" => \"Johnny\", \"last_name\" => \"Walker\", \"created_at\" => nil, \"updated_at\" => nil}\n```","summary":"<p>Returns the model columns as Hash.</p>","abstract":false,"args":[{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"args_string":"(full = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L112","def":{"name":"to_h","args":[{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{} of String => ::Clear::SQL::Any"}},{"id":"update_h-instance-method","html_id":"update_h-instance-method","name":"update_h","doc":"Returns the current hash of the modified values:\n\n```\nmodel = Model.query.first!\nmodel.update_h # => {}\nmodel.first_name = \"hello\"\nmodel.update_h # => { \"first_name\" => \"hello\" }\nmodel.save!\nmodel.update_h # => {}\n```","summary":"<p>Returns the current hash of the modified values:</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L97","def":{"name":"update_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{} of String => ::Clear::SQL::Any"}}],"macros":[{"id":"column(name,primary=false,converter=nil,column_name=nil,presence=true)-macro","html_id":"column(name,primary=false,converter=nil,column_name=nil,presence=true)-macro","name":"column","doc":"Bind a column to the model.\n\nSimple example:\n```\nclass MyModel\n  include Clear::Model\n\n  column some_id : Int32, primary: true\n  column nullable_column : String?\nend\n```\noptions:\n\n* `primary : Bool`: Let Clear ORM know which column is the primary key.\nCurrently compound primary key are not compatible with Clear ORM.\n\n* `converter : Class | Module`: Use this class to convert the data from the\nSQL. This class must possess the class methods\n`to_column(::Clear::SQL::Any) : T` and `to_db(T) : ::Clear::SQL::Any`\nwith `T` the type of the column.\n\n* `column_name : String`: If the name of the column in the model doesn't fit the name of the\n  column in the SQL, you can use the parameter `column_name` to tell Clear about\n  which db column is linked to current field.\n\n* `presence : Bool (default = true)`: Use this option to let know Clear that\n  your column is not nullable but with default value generated by the database\n  on insert (e.g. serial)\nDuring validation before saving, the presence will not be checked on this field\n  and Clear will try to insert without the field value.\n","summary":"<p>Bind a column to the model.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":""},{"name":"column_name","doc":null,"default_value":"nil","external_name":"column_name","restriction":""},{"name":"presence","doc":null,"default_value":"true","external_name":"presence","restriction":""}],"args_string":"(name, primary = <span class=\"n\">false</span>, converter = <span class=\"n\">nil</span>, column_name = <span class=\"n\">nil</span>, presence = <span class=\"n\">true</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_columns.cr#L147","def":{"name":"column","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":""},{"name":"column_name","doc":null,"default_value":"nil","external_name":"column_name","restriction":""},{"name":"presence","doc":null,"default_value":"true","external_name":"presence","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% _type = name.type %}\n\n    \n{% if converter\nelse\n  if _type.is_a?(Path)\n    if _type.resolve.stringify =~ (/\\(/)\n      converter = _type.stringify\n    else\n      converter = _type.resolve.stringify\n    end\n  else\n    if _type.is_a?(Generic)\n      if _type.name.stringify == \"::Union\"\n        converter = (_type.type_vars.map(&.resolve).map(&.stringify).sort.reject do |x|\n          (x == \"Nil\") || (x == \"::Nil\")\n        end.join(\"\")).id.stringify\n      else\n        converter = _type.resolve.stringify\n      end\n    else\n      if _type.is_a?(Union)\n        converter = (_type.types.map(&.resolve).map(&.stringify).sort.reject do |x|\n          (x == \"Nil\") || (x == \"::Nil\")\n        end.join(\"\")).id.stringify\n      else\n        raise(\"Unknown: #{_type}, #{_type.class}\")\n      end\n    end\n  end\nend %}\n\n\n    \n{% COLUMNS[name.var] = {type: _type, primary: primary, converter: converter, column_name: \"#{(column_name || name.var)}\", presence: presence} %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasFactory","path":"Clear/Model/HasFactory.html","kind":"module","full_name":"Clear::Model::HasFactory","name":"HasFactory","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_factory.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_factory.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"polymorphic(through=&quot;type&quot;)-macro","html_id":"polymorphic(through=&amp;quot;type&amp;quot;)-macro","name":"polymorphic","doc":"Define a polymorphic factory, if the model is tagged as polymorphic","summary":"<p>Define a polymorphic factory, if the model is tagged as polymorphic</p>","abstract":false,"args":[{"name":"through","doc":null,"default_value":"\"type\"","external_name":"through","restriction":""}],"args_string":"(through = <span class=\"s\">&quot;type&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_factory.cr#L37","def":{"name":"polymorphic","args":[{"name":"through","doc":null,"default_value":"\"type\"","external_name":"through","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% POLYMORPHISM_SETTINGS[:has_factory] = true %}\n\n\n    column \n{{ through.id }}\n : String\n\n    before(:validate) do |model|\n      model = model.as(self)\n      model.\n{{ through.id }}\n = model.class.name\n    \nend\n\n    \n# Subclasses are refined using a default scope\n\n    \n# to filter by type.\n\n    macro inherited\n      class Collection < Clear::Model::CollectionBase(\n\\{\n{@type}}); \nend\n\n      def self.query\n        Collection.new.from(table).where\n{ \n{{ through.id }}\n == self.name }\n      \nend\n    \nend\n\n    \n# Base class can be refined too, only if the baseclass is not abstract.\n\n    \n{% if @type.abstract? %}{% else %}\n      def self.query\n        Collection.new.from(table).where{ {{ through.id }} == self.name }\n      end\n    {% end %}\n\n\n    def self.polymorphic?\n      true\n    \nend\n\n    Clear::Model::Factory.add(\"\n{{ @type }}\n\", Clear::Model::Factory::PolymorphicFactory(\n{{ @type }}\n).new(\n{{ through.id.stringify }}\n, \"\n{{ @type }}\n\" ) )\n\n    macro inherited\n      Clear::Model::Factory.add(\"\n\\{\n{@type}}\", Clear::Model::Factory::SimpleFactory(\n\\{\n{@type}}).new )\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks","path":"Clear/Model/HasHooks.html","kind":"module","full_name":"Clear::Model::HasHooks","name":"HasHooks","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_hooks.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"trigger_after_events(event_name)-instance-method","html_id":"trigger_after_events(event_name)-instance-method","name":"trigger_after_events","doc":"Triggers the events hooked after `event_name`","summary":"<p>Triggers the events hooked after <code>event_name</code></p>","abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""}],"args_string":"(event_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L29","def":{"name":"trigger_after_events","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Model::EventManager.trigger(self.class, :after, event_name, self)"}},{"id":"trigger_before_events(event_name)-instance-method","html_id":"trigger_before_events(event_name)-instance-method","name":"trigger_before_events","doc":"Triggers the events hooked before `event_name`","summary":"<p>Triggers the events hooked before <code>event_name</code></p>","abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""}],"args_string":"(event_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L24","def":{"name":"trigger_before_events","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Model::EventManager.trigger(self.class, :before, event_name, self)"}},{"id":"with_triggers(event_name,&block)-instance-method","html_id":"with_triggers(event_name,&amp;block)-instance-method","name":"with_triggers","doc":"This performs theses operations:\n\n- Call triggers `before` the event\n- Yield the given block\n- Call triggers `after` the event\n\n```\n   model.with_triggers(\"email_sent\") do |m|\n      model.send_email\n   end\n```\n\nReturns `self`","summary":"<p>This performs theses operations:</p>","abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""}],"args_string":"(event_name, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L15","def":{"name":"with_triggers","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"trigger_before_events(event_name)\nyield\ntrigger_after_events(event_name)\nself\n"}}],"macros":[{"id":"after(event_name,method_name)-macro","html_id":"after(event_name,method_name)-macro","name":"after","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(event_name, method_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L49","def":{"name":"after","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    after(\n{{ event_name }}\n) \n{ |mdl|\n      mdl.as(\n{{ @type }}\n).\n{{ method_name.id }}\n\n    }\n  \n"}},{"id":"before(event_name,method_name)-macro","html_id":"before(event_name,method_name)-macro","name":"before","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(event_name, method_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L43","def":{"name":"before","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    before(\n{{ event_name }}\n) \n{ |mdl|\n      mdl.as(\n{{ @type }}\n).\n{{ method_name.id }}\n\n    }\n  \n"}}],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks/ClassMethods","path":"Clear/Model/HasHooks/ClassMethods.html","kind":"module","full_name":"Clear::Model::HasHooks::ClassMethods","name":"ClassMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_hooks.cr","line_number":33,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks","kind":"module","full_name":"Clear::Model::HasHooks","name":"HasHooks"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"after(event_name:Symbol,&block:Clear::Model->Void)-instance-method","html_id":"after(event_name:Symbol,&amp;block:Clear::Model-&gt;Void)-instance-method","name":"after","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":"Symbol"}],"args_string":"(event_name : Symbol, &block : Clear::Model -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L38","def":{"name":"after","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Clear::Model -> Void)"},"return_type":"","visibility":"Public","body":"Clear::Model::EventManager.attach(self, :after, event_name, block)"}},{"id":"before(event_name:Symbol,&block:Clear::Model->Void)-instance-method","html_id":"before(event_name:Symbol,&amp;block:Clear::Model-&gt;Void)-instance-method","name":"before","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":"Symbol"}],"args_string":"(event_name : Symbol, &block : Clear::Model -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_hooks.cr#L34","def":{"name":"before","args":[{"name":"event_name","doc":null,"default_value":"","external_name":"event_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Clear::Model -> Void)"},"return_type":"","visibility":"Public","body":"Clear::Model::EventManager.attach(self, :before, event_name, block)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasJson","path":"Clear/Model/HasJson.html","kind":"module","full_name":"Clear::Model::HasJson","name":"HasJson","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_json.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_json.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_json(full:Bool)-instance-method","html_id":"to_json(full:Bool)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"full","doc":null,"default_value":"","external_name":"full","restriction":"Bool"}],"args_string":"(full : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_json.cr#L2","def":{"name":"to_json","args":[{"name":"full","doc":null,"default_value":"","external_name":"full","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(to_h(full)).to_json"}},{"id":"to_json(json,full=false)-instance-method","html_id":"to_json(json,full=false)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":""},{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"args_string":"(json, full = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_json.cr#L6","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":""},{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(to_h(full)).to_json(json)"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","path":"Clear/Model/HasRelations.html","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_relations.cr","line_number":12,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_relations.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/View","kind":"module","full_name":"Clear::View","name":"View"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"```\nclass Model\n  include Clear::Model\n\n  has_many posts : Post, [ foreign_key: Model.underscore_name + \"_id\", no_cache : false]\n\n  has_one passport : Passport\n  has_many posts\n```","summary":"<pre><code class=\"language-class Model   include Clear::Model\"></code></pre>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"belongs_to(name,foreign_key=nil,no_cache=false,primary=false,key_type=Int64)-macro","html_id":"belongs_to(name,foreign_key=nil,no_cache=false,primary=false,key_type=Int64)-macro","name":"belongs_to","doc":"```\nclass Model\n  include Clear::Model\n  belongs_to user : User, foreign_key: \"the_user_id\"\n\n```","summary":"<pre><code class=\"language-class Model   include Clear::Model   belongs_to user : User, foreign_key: \"the_user_id\"\"></code></pre>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"no_cache","doc":null,"default_value":"false","external_name":"no_cache","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"key_type","doc":null,"default_value":"Int64","external_name":"key_type","restriction":""}],"args_string":"(name, foreign_key = <span class=\"n\">nil</span>, no_cache = <span class=\"n\">false</span>, primary = <span class=\"n\">false</span>, key_type = <span class=\"t\">Int64</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_relations.cr#L122","def":{"name":"belongs_to","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"no_cache","doc":null,"default_value":"false","external_name":"no_cache","restriction":""},{"name":"primary","doc":null,"default_value":"false","external_name":"primary","restriction":""},{"name":"key_type","doc":null,"default_value":"Int64","external_name":"key_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if foreign_key.is_a?(SymbolLiteral) || foreign_key.is_a?(StringLiteral)\n  foreign_key = foreign_key.id\nend\nnilable = false\nif name.type.is_a?(Union)\n  types = name.type.types.map do |x|\n    \"#{x.id}\"\n  end\n  nilable = types.includes?(\"Nil\")\n  type = name.type.types.first\nelse\n  type = name.type\nend\nif nilable\n  unless key_type.resolve.nilable?\n    key_type = \"#{key_type.id}?\".id\n  end\nend\nRELATIONS[name.var.id] = {relation_type: :belongs_to, type: type, foreign_key: foreign_key, nilable: nilable, primary: primary, no_cache: no_cache, key_type: key_type}\n %}\n\n  \n"}},{"id":"has_many(name,through=nil,foreign_key=nil,own_key=nil,primary_key=nil,no_cache=false,polymorphic=false,foreign_key_type=nil)-macro","html_id":"has_many(name,through=nil,foreign_key=nil,own_key=nil,primary_key=nil,no_cache=false,polymorphic=false,foreign_key_type=nil)-macro","name":"has_many","doc":"Has Many and Has One are the relations where the model share its primary key into a foreign table. In our example above, we can assume than a User has many Post as author.\n\nBasically, for each `belongs_to` declaration, you must have a `has_many` or `has_one` declaration on the other model.\n\nWhile `has_many` relation returns a list of models, `has_one` returns only one model when called.\n\nExample:\n\n```crystal\n  class User\n    include Clear::Model\n    #...\n    has_many posts : Post, foreign_key: \"author_id\"\n end\n```","summary":"<p>Has Many and Has One are the relations where the model share its primary key into a foreign table.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"own_key","doc":null,"default_value":"nil","external_name":"own_key","restriction":""},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":""},{"name":"no_cache","doc":null,"default_value":"false","external_name":"no_cache","restriction":""},{"name":"polymorphic","doc":null,"default_value":"false","external_name":"polymorphic","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"nil","external_name":"foreign_key_type","restriction":""}],"args_string":"(name, through = <span class=\"n\">nil</span>, foreign_key = <span class=\"n\">nil</span>, own_key = <span class=\"n\">nil</span>, primary_key = <span class=\"n\">nil</span>, no_cache = <span class=\"n\">false</span>, polymorphic = <span class=\"n\">false</span>, foreign_key_type = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_relations.cr#L72","def":{"name":"has_many","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"own_key","doc":null,"default_value":"nil","external_name":"own_key","restriction":""},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":""},{"name":"no_cache","doc":null,"default_value":"false","external_name":"no_cache","restriction":""},{"name":"polymorphic","doc":null,"default_value":"false","external_name":"polymorphic","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"nil","external_name":"foreign_key_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if through != nil\n  if through.is_a?(SymbolLiteral) || through.is_a?(StringLiteral)\n    through = through.id\n  end\n  if own_key.is_a?(SymbolLiteral) || own_key.is_a?(StringLiteral)\n    own_key = own_key.id\n  end\n  if foreign_key.is_a?(SymbolLiteral) || foreign_key.is_a?(StringLiteral)\n    foreign_key = foreign_key.id\n  end\n  if foreign_key_type.is_a?(SymbolLiteral) || foreign_key_type.is_a?(StringLiteral)\n    foreign_key_type = foreign_key_type.id\n  end\n  RELATIONS[name.var.id] = {relation_type: :has_many_through, type: name.type, through: through, own_key: own_key, foreign_key: foreign_key, foreign_key_type: foreign_key_type, polymorphic: polymorphic}\nelse\n  if foreign_key.is_a?(SymbolLiteral) || foreign_key.is_a?(StringLiteral)\n    foreign_key = foreign_key.id\n  end\n  if primary_key.is_a?(SymbolLiteral) || primary_key.is_a?(StringLiteral)\n    primary_key = primary_key.id\n  end\n  if foreign_key_type.is_a?(SymbolLiteral) || foreign_key_type.is_a?(StringLiteral)\n    foreign_key_type = foreign_key_type.id\n  end\n  RELATIONS[name.var.id] = {relation_type: :has_many, type: name.type, foreign_key: foreign_key, primary_key: primary_key, foreign_key_type: foreign_key_type, no_cache: no_cache, polymorphic: polymorphic}\nend %}\n\n  \n"}},{"id":"has_one(name,foreign_key=nil,primary_key=nil,no_cache=false,polymorphic=false,foreign_key_type=nil)-macro","html_id":"has_one(name,foreign_key=nil,primary_key=nil,no_cache=false,polymorphic=false,foreign_key_type=nil)-macro","name":"has_one","doc":"The method `has_one` declare a relation 1 to [0,1]\nwhere the current model primary key is stored in the foreign table.\n`primary_key` method (default: `self#pkey`) and `foreign_key` method\n(default: table_name in singular, plus \"_id\" appended)\ncan be redefined\n\nExample:\n\n```\nmodel Passport\n  column id : Int32, primary : true\n  has_one user : User It assumes the table `users` have a column `passport_id`\nend\n\nmodel Passport\n  column id : Int32, primary : true\n  has_one owner : User # It assumes the table `users` have a column `passport_id`\nend\n```","summary":"<p>The method <code><a href=\"../../Clear/Model/HasRelations.html#has_one%28name%2Cforeign_key%3Dnil%2Cprimary_key%3Dnil%2Cno_cache%3Dfalse%2Cpolymorphic%3Dfalse%2Cforeign_key_type%3Dnil%29-macro\">has_one</a></code> declare a relation 1 to [0,1] where the current model primary key is stored in the foreign table.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":""},{"name":"no_cache","doc":null,"default_value":"false","external_name":"no_cache","restriction":""},{"name":"polymorphic","doc":null,"default_value":"false","external_name":"polymorphic","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"nil","external_name":"foreign_key_type","restriction":""}],"args_string":"(name, foreign_key = <span class=\"n\">nil</span>, primary_key = <span class=\"n\">nil</span>, no_cache = <span class=\"n\">false</span>, polymorphic = <span class=\"n\">false</span>, foreign_key_type = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_relations.cr#L40","def":{"name":"has_one","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":""},{"name":"no_cache","doc":null,"default_value":"false","external_name":"no_cache","restriction":""},{"name":"polymorphic","doc":null,"default_value":"false","external_name":"polymorphic","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"nil","external_name":"foreign_key_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if foreign_key.is_a?(SymbolLiteral) || foreign_key.is_a?(StringLiteral)\n  foreign_key = foreign_key.id\nend\nif primary_key.is_a?(SymbolLiteral) || primary_key.is_a?(StringLiteral)\n  primary_key = primary_key.id\nend\nRELATIONS[name.var.id] = {relation_type: :has_one, type: name.type, foreign_key: foreign_key, primary_key: primary_key, no_cache: no_cache}\n %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSaving","path":"Clear/Model/HasSaving.html","kind":"module","full_name":"Clear::Model::HasSaving","name":"HasSaving","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_saving.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":" Delete the model by building and executing a `DELETE` query.\n A deleted model is not persisted anymore, and can be saved again.\n    Clear will do `INSERT` instead of `UPDATE` then\n Return `true` if the model has been successfully deleted, and `false` otherwise.","summary":"<p>Delete the model by building and executing a <code>DELETE</code> query.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L185","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if persisted?\nelse\n  return false\nend\nwith_triggers(:delete) do\n  (Clear::SQL::DeleteQuery.new.from(self.class.table)).where do\n    (var(\"#{self.class.pkey}\")) == pkey\n  end.execute(@@connection)\n  @persisted = false\n  clear_change_flags\nend\ntrue\n"}},{"id":"persisted?:Bool-instance-method","html_id":"persisted?:Bool-instance-method","name":"persisted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L54","def":{"name":"persisted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@persisted"}},{"id":"reload:self-instance-method","html_id":"reload:self-instance-method","name":"reload","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L171","def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"set(self.class.query.where do\n  (var(\"#{self.class.pkey}\")) == pkey\nend.fetch_first!)\n@attributes.clear\nclear_change_flags\n@persisted = true\nself\n"}},{"id":"save(on_conflict:Clear::SQL::InsertQuery->?=nil)-instance-method","html_id":"save(on_conflict:Clear::SQL::InsertQuery-&gt;?=nil)-instance-method","name":"save","doc":"Save the model. If the model is already persisted, will call `UPDATE` query.\nIf the model is not persisted, will call `INSERT`\n\nOptionally, you can pass a `Proc` to refine the `INSERT` with on conflict\nresolution functions.\n\nReturn `false` if the model cannot be saved (validation issue)\nReturn `true` if the model has been correctly saved.\n\nExample:\n\n```crystal\nu = User.new\nif u.save\n  puts \"User correctly saved !\"\nelse\n  puts \"There was a problem during save: \"\n  # do something with `u.errors`\nend\n```\n\n## `on_conflict` optional parameter\n\nExample:\n\n```crystal\nu = User.new id: 123, email: \"email@example.com\"\nu.save(-> (qry) { qry.on_conflict.do_update{ |u| u.set(email: \"email@example.com\") } #update\n# IMPORTANT NOTICE: user may not be saved, but will be still detected as persisted !\n```\n\nYou may want to use a block for `on_conflict` optional parameter:\n\n```crystal\nu = User.new id: 123, email: \"email@example.com\"\nu.save do |qry|\n   qry.on_conflict.do_update{ |u| u.set(email: \"email@example.com\")\nend\n```\n","summary":"<p>Save the model.</p>","abstract":false,"args":[{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"args_string":"(on_conflict : Clear::SQL::InsertQuery -> ? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L94","def":{"name":"save","args":[{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.class.read_only?\n  return false\nend\nwith_triggers(:save) do\n  if valid?\n    if persisted?\n      h = update_h\n      if h.any?\n        with_triggers(:update) do\n          ((Clear::SQL.update(self.class.table)).set(update_h)).where do\n            (var(\"#{self.class.pkey}\")) == pkey\n          end.execute(@@connection)\n        end\n      end\n    else\n      with_triggers(:create) do\n        query = (Clear::SQL.insert_into(self.class.table, to_h)).returning(\"*\")\n        if on_conflict\n          on_conflict.call(query)\n        end\n        hash = query.execute(@@connection)\n        self.reset(hash)\n        @persisted = true\n      end\n    end\n    self.clear_change_flags\n    return true\n  else\n    return false\n  end\nend\n"}},{"id":"save(&block)-instance-method","html_id":"save(&amp;block)-instance-method","name":"save","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L128","def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"return_type":"","visibility":"Public","body":"save(on_conflict: block)"}},{"id":"save!(on_conflict:Clear::SQL::InsertQuery->?=nil)-instance-method","html_id":"save!(on_conflict:Clear::SQL::InsertQuery-&gt;?=nil)-instance-method","name":"save!","doc":"Performs `save` call, but instead of returning `false` if validation failed,\nraise `Clear::Model::InvalidModelError` exception","summary":"<p>Performs <code><a href=\"../../Clear/Model/HasSaving.html#save%28%26block%29-instance-method\">#save</a></code> call, but instead of returning <code>false</code> if validation failed, raise <code>Clear::Model::InvalidModelError</code> exception</p>","abstract":false,"args":[{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"args_string":"(on_conflict : Clear::SQL::InsertQuery -> ? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L134","def":{"name":"save!","args":[{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.class.read_only?\n  raise(Clear::Model::ReadOnlyError.new(self))\nend\nif save(on_conflict)\nelse\n  raise(Clear::Model::InvalidError.new(self))\nend\nself\n"}},{"id":"save!(&block:Clear::SQL::InsertQuery->)-instance-method","html_id":"save!(&amp;block:Clear::SQL::InsertQuery-&gt;)-instance-method","name":"save!","doc":"Pass the `on_conflict` optional parameter via block.","summary":"<p>Pass the <code>on_conflict</code> optional parameter via block.</p>","abstract":false,"args":[],"args_string":"(&block : Clear::SQL::InsertQuery -> )","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L143","def":{"name":"save!","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Clear::SQL::InsertQuery -> )"},"return_type":"","visibility":"Public","body":"save!(block)"}},{"id":"update(**args)-instance-method","html_id":"update(**args)-instance-method","name":"update","doc":"Set the fields passed as argument and call `save` on the object","summary":"<p>Set the fields passed as argument and call <code><a href=\"../../Clear/Model/HasSaving.html#save%28%26block%29-instance-method\">#save</a></code> on the object</p>","abstract":false,"args":[],"args_string":"(**args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L148","def":{"name":"update","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(**args)\nsave\n"}},{"id":"update!(**args)-instance-method","html_id":"update!(**args)-instance-method","name":"update!","doc":"Set the fields passed as argument and call `save!` on the object","summary":"<p>Set the fields passed as argument and call <code><a href=\"../../Clear/Model/HasSaving.html#save%21%28%26block%3AClear%3A%3ASQL%3A%3AInsertQuery-%3E%29-instance-method\">#save!</a></code> on the object</p>","abstract":false,"args":[],"args_string":"(**args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_saving.cr#L154","def":{"name":"update!","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(**args)\nsave!\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","path":"Clear/Model/HasScope.html","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_scope.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_scope.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/View","kind":"module","full_name":"Clear::View","name":"View"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSerialPkey","path":"Clear/Model/HasSerialPkey.html","kind":"module","full_name":"Clear::Model::HasSerialPkey","name":"HasSerialPkey","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_serial_pkey.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_serial_pkey.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"PKEY_TYPE","name":"PKEY_TYPE","value":"{\"bigserial\" => \"column(__name__ : Int64, primary: true, presence: false)\", \"serial\" => \"column(__name__ : Int32, primary: true, presence: false)\", \"text\" => \"column(__name__ : String, primary: true, presence: true)\", \"int\" => \"column(__name__ : Int32, primary: true, presence: true)\", \"bigint\" => \"column(__name__ : Int64, primary: true, presence: true)\", \"uuid\" => \"column(__name__ : UUID, primary: true, presence: true)\\nbefore(:validate) do |m|\\n  if m.persisted?\\n  else\\n    (m.as(self)).__name__=(UUID.random)\\n  end\\nend\\n\"} of Nil => Nil","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"add_pkey_type(type,&block)-macro","html_id":"add_pkey_type(type,&amp;block)-macro","name":"add_pkey_type","doc":"Add a hook for the `primary_key`\nIn the hook, __name__ will be replaced by the column name required by calling primary_key\n\n## Example\n\n```\n  Clear::Model::HasSerialPkey.add_pkey_type(\"awesomepkeysystem\") do\n    column __name__ : AwesomePkey, primary: true, presence: false\n\n    before_validate do\n       #...\n    end\n  end\n```","summary":"<p>Add a hook for the <code><a href=\"../../Clear/Model/HasSerialPkey.html#primary_key%28name%3D%26quot%3Bid%26quot%3B%2Ctype%3D%3Abigserial%29-macro\">primary_key</a></code> In the hook, <strong>name</strong> will be replaced by the column name required by calling primary_key</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(type, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_serial_pkey.cr#L41","def":{"name":"add_pkey_type","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% PKEY_TYPE[type] = \"#{block.body}\" %}\n\n  \n"}},{"id":"primary_key(name=&quot;id&quot;,type=:bigserial)-macro","html_id":"primary_key(name=&amp;quot;id&amp;quot;,type=:bigserial)-macro","name":"primary_key","doc":"Macro used to define serializable primary keys.\nCurrently support `bigserial`, `serial` and `uuid`.\n\nFor `bigserial` and `serial`, let to PostgreSQL the handling of sequence numbers.\nFor `uuid`, will generate a new `UUID` number on creation.","summary":"<p>Macro used to define serializable primary keys.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"id\"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":":bigserial","external_name":"type","restriction":""}],"args_string":"(name = <span class=\"s\">&quot;id&quot;</span>, type = <span class=\"n\">:bigserial</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_serial_pkey.cr#L17","def":{"name":"primary_key","args":[{"name":"name","doc":null,"default_value":"\"id\"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":":bigserial","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% type = \"#{type.id}\" %}\n\n    \n{% cb = PKEY_TYPE[type] %}\n\n    \n{% if cb %}\n      {{ (cb.gsub(/__name__/, name)).id }}\n    {% else %}\n      { raise \"Cannot define primary key of type #{type}. Candidates are: #{PKEY_TYPE.keys.join(\", \")}\" %}\n    {% end %}\n\n  \n"}},{"id":"with_serial_pkey(name=&quot;id&quot;,type=:bigserial)-macro","html_id":"with_serial_pkey(name=&amp;quot;id&amp;quot;,type=:bigserial)-macro","name":"with_serial_pkey","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"id\"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":":bigserial","external_name":"type","restriction":""}],"args_string":"(name = <span class=\"s\">&quot;id&quot;</span>, type = <span class=\"n\">:bigserial</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_serial_pkey.cr#L7","def":{"name":"with_serial_pkey","args":[{"name":"name","doc":null,"default_value":"\"id\"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":":bigserial","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% puts(\"[DEPRECATION WARNING] Please use `primary_key` instead. In future version of Clear, `with_serial_pkey` will be removed (declared in `#{@type}`).\".id) %}\n\n    primary_key(\n{{ name }}\n, \n{{ type }}\n)\n  \n"}}],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasTimestamps","path":"Clear/Model/HasTimestamps.html","kind":"module","full_name":"Clear::Model::HasTimestamps","name":"HasTimestamps","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/has_timestamps.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_timestamps.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"timestamps-macro","html_id":"timestamps-macro","name":"timestamps","doc":"Generate the columns `updated_at` and `created_at`\nThe two column values are automatically set during insertion\n  or update of the model.","summary":"<p>Generate the columns <code>updated_at</code> and <code>created_at</code> The two column values are automatically set during insertion   or update of the model.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_timestamps.cr#L5","def":{"name":"timestamps","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    column( updated_at : Time )\n    column( created_at : Time )\n\n    before(:validate) do |model|\n      model = model.as(self)\n\n      unless model.persisted?\n        now = Time.now\n        model.created_at = now unless model.created_at_column.defined?\n        model.updated_at = now unless model.updated_at_column.defined?\n      \nend\n    \nend\n\n    after(:validate) do |model|\n      model = model.as(self)\n\n      \n# In the case the updated_at has been changed, we do not override.\n\n      \n# It happens on first insert, in the before validation setup.\n\n      model.updated_at = Time.now if model.changed? && !model.updated_at_column.changed?\n    \nend\n\n  \n"}}],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","path":"Clear/Model/HasValidation.html","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Validation/Helper","kind":"module","full_name":"Clear::Validation::Helper","name":"Helper"}],"locations":[{"filename":"clear/model/modules/has_validation.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Validation/Helper","kind":"module","full_name":"Clear::Validation::Helper","name":"Helper"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_error(column,reason)-instance-method","html_id":"add_error(column,reason)-instance-method","name":"add_error","doc":"Add validation error related to a specific column","summary":"<p>Add validation error related to a specific column</p>","abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"reason","doc":null,"default_value":"","external_name":"reason","restriction":""}],"args_string":"(column, reason)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L15","def":{"name":"add_error","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"reason","doc":null,"default_value":"","external_name":"reason","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors << Error.new(reason: reason, column: column.to_s)"}},{"id":"add_error(reason)-instance-method","html_id":"add_error(reason)-instance-method","name":"add_error","doc":"Add validation error not related to a specific column","summary":"<p>Add validation error not related to a specific column</p>","abstract":false,"args":[{"name":"reason","doc":null,"default_value":"","external_name":"reason","restriction":""}],"args_string":"(reason)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L10","def":{"name":"add_error","args":[{"name":"reason","doc":null,"default_value":"","external_name":"reason","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors << Error.new(reason: reason, column: nil)"}},{"id":"clear_errors-instance-method","html_id":"clear_errors-instance-method","name":"clear_errors","doc":"Clear the errors log (if any) of the model and return itself","summary":"<p>Clear the errors log (if any) of the model and return itself</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L26","def":{"name":"clear_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors.clear\nself\n"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":"Return `true` if saving has been declined because of validation issues.\nThe error list can be found by calling `Clear::Model#errors`","summary":"<p>Return <code>true</code> if saving has been declined because of validation issues.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L21","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors.any?"}},{"id":"errors:Array(Error)-instance-method","html_id":"errors:Array(Error)-instance-method","name":"errors","doc":"List of errors raised during validation, in case the model hasn't been saved properly.","summary":"<p>List of errors raised during validation, in case the model hasn't been saved properly.</p>","abstract":false,"args":[],"args_string":" : Array(Error)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L9","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Error)","visibility":"Public","body":"@errors"}},{"id":"print_errors-instance-method","html_id":"print_errors-instance-method","name":"print_errors","doc":"Print the errors in string. Useful for debugging or simple error handling.","summary":"<p>Print the errors in string.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L32","def":{"name":"print_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors.group_by(&.column).to_a.sort do |__arg1, __arg2|\n  f1 = __arg1[0]\n  f2 = __arg2[0]\n  (f1 || \"\") <=> (f2 || \"\")\nend.map do |column, errors|\n  [column, errors.map(&.reason).join(\", \")].compact.join(\": \")\nend.join(\"\\n\")"}},{"id":"valid!-instance-method","html_id":"valid!-instance-method","name":"valid!","doc":"Check whether the model is valid. If not, raise `InvalidModelError`.\nReturn the model itself","summary":"<p>Check whether the model is valid.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L46","def":{"name":"valid!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if valid?\nelse\n  raise(InvalidModelError.new(\"Model is invalid: #{print_errors}\"))\nend\nself\n"}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":"Return `true` if the model","summary":"<p>Return <code>true</code> if the model</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L52","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clear_errors\nwith_triggers(:validate) do\n  validate\n  validate_fields_presence\nend\n!error?\n"}},{"id":"validate-instance-method","html_id":"validate-instance-method","name":"validate","doc":"This method is called whenever `valid?` or `save` is called.\nBy default, `validate` is empty and must be overriden by your own validation code.","summary":"<p>This method is called whenever <code><a href=\"../../Clear/Model/HasValidation.html#valid%3F-instance-method\">#valid?</a></code> or <code>save</code> is called.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L40","def":{"name":"validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation/Error","path":"Clear/Model/HasValidation/Error.html","kind":"struct","full_name":"Clear::Model::HasValidation::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/modules/has_validation.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(reason:String,column:String?)-class-method","html_id":"new(reason:String,column:String?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"reason","doc":null,"default_value":"","external_name":"reason","restriction":"String"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String | ::Nil"}],"args_string":"(reason : String, column : String?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L4","def":{"name":"new","args":[{"name":"reason","doc":null,"default_value":"","external_name":"reason","restriction":"String"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(reason, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L4","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Error.new(@reason.clone, @column.clone)"}},{"id":"column:String?-instance-method","html_id":"column:String?-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@column"}},{"id":"copy_with(reason_reason=@reason,column_column=@column)-instance-method","html_id":"copy_with(reason_reason=@reason,column_column=@column)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_reason","doc":null,"default_value":"@reason","external_name":"reason","restriction":""},{"name":"_column","doc":null,"default_value":"@column","external_name":"column","restriction":""}],"args_string":"(reason _reason = @reason, column _column = @column)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/has_validation.cr#L4","def":{"name":"copy_with","args":[{"name":"_reason","doc":null,"default_value":"@reason","external_name":"reason","restriction":""},{"name":"_column","doc":null,"default_value":"@column","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Error.new(_reason, _column)"}},{"id":"reason:String-instance-method","html_id":"reason:String-instance-method","name":"reason","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"reason","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@reason"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Model/InvalidError","path":"Clear/Model/InvalidError.html","kind":"class","full_name":"Clear::Model::InvalidError","name":"InvalidError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Model/Error","kind":"class","full_name":"Clear::Model::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Error","kind":"class","full_name":"Clear::Model::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/errors.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(model:Clear::Model)-class-method","html_id":"new(model:Clear::Model)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Clear::Model"}],"args_string":"(model : Clear::Model)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr#L7","def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Clear::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"model:Clear::Model-instance-method","html_id":"model:Clear::Model-instance-method","name":"model","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Model","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr#L7","def":{"name":"model","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model","visibility":"Public","body":"@model"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/QueryCache","path":"Clear/Model/QueryCache.html","kind":"class","full_name":"Clear::Model::QueryCache","name":"QueryCache","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/query_cache.cr","line_number":9,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":"The Clear::Model::QueryCache\nis a __fire-and-forget__ cache used when caching associations and preventing N+1 queries anti-pattern.\n\nThis is not a global cache: One cache instance exists per collection, and the cache\ndisappear at the same time the Collection is unreferenced.\n\nEach cache can references multiples relations at the same time.\nThis cache use an underlying hash to access to the references keys.","summary":"<p>The Clear::Model::QueryCache is a <strong>fire-and-forget</strong> cache used when caching associations and preventing N+1 queries anti-pattern.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"active(relation_name)-instance-method","html_id":"active(relation_name)-instance-method","name":"active","doc":"Tell this cache than we active the cache over a specific relation name.\nReturns `self`","summary":"<p>Tell this cache than we active the cache over a specific relation name.</p>","abstract":false,"args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""}],"args_string":"(relation_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L29","def":{"name":"active","args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cache_activation.add(relation_name)\nself\n"}},{"id":"active?(relation_name)-instance-method","html_id":"active?(relation_name)-instance-method","name":"active?","doc":"Check whether the cache is active on a certain association.\nReturns `true` if `relation_name` is flagged as encached, or `false` otherwise.","summary":"<p>Check whether the cache is active on a certain association.</p>","abstract":false,"args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""}],"args_string":"(relation_name)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L37","def":{"name":"active?","args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cache_activation.includes?(relation_name)"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Empty the cache and flag all relations has unactive","summary":"<p>Empty the cache and flag all relations has unactive</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L71","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cache.clear\n@cache_activation.clear\n"}},{"id":"fetch-instance-method","html_id":"fetch-instance-method","name":"fetch","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L23","def":{"name":"fetch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query"}},{"id":"hit(relation_name,relation_value,klass:T.class):Array(T)forallT-instance-method","html_id":"hit(relation_name,relation_value,klass:T.class):Array(T)forallT-instance-method","name":"hit","doc":"Try to hit the cache. If an array is found, it will be returned.\nOtherwise, empty array is returned.\n\nThis methods do not check if a relation flagged as is actively cached or not. Therefore, hitting a non-cached\nrelation will return always an empty-array.","summary":"<p>Try to hit the cache.</p>","abstract":false,"args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""},{"name":"relation_value","doc":null,"default_value":"","external_name":"relation_value","restriction":""},{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":"T.class"}],"args_string":"(relation_name, relation_value, klass : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : Array(T) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L46","def":{"name":"hit","args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""},{"name":"relation_value","doc":null,"default_value":"","external_name":"relation_value","restriction":""},{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"(@cache.fetch(CacheKey.new(relation_name, relation_value, T.name)) do\n  [] of T\nend).unsafe_as(Array(T))"}},{"id":"set(relation_name,relation_value,arr:Array(T))forallT-instance-method","html_id":"set(relation_name,relation_value,arr:Array(T))forallT-instance-method","name":"set","doc":"Set the cached array for a specific key `{relation_name,relation_value}`","summary":"<p>Set the cached array for a specific key <code>{relation_name,relation_value}</code></p>","abstract":false,"args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""},{"name":"relation_value","doc":null,"default_value":"","external_name":"relation_value","restriction":""},{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(T)"}],"args_string":"(relation_name, relation_value, arr : Array(T)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L53","def":{"name":"set","args":[{"name":"relation_name","doc":null,"default_value":"","external_name":"relation_name","restriction":""},{"name":"relation_value","doc":null,"default_value":"","external_name":"relation_value","restriction":""},{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cache[CacheKey.new(relation_name, relation_value, T.name)] = arr.unsafe_as(Pointer(Void))"}},{"id":"with_cache(&block)-instance-method","html_id":"with_cache(&amp;block)-instance-method","name":"with_cache","doc":"Perform some operations with the cache then eventually clear the cache.","summary":"<p>Perform some operations with the cache then eventually clear the cache.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/query_cache.cr#L64","def":{"name":"with_cache","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  yield\nensure\n  clear\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/ReadOnlyError","path":"Clear/Model/ReadOnlyError.html","kind":"class","full_name":"Clear::Model::ReadOnlyError","name":"ReadOnlyError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Model/Error","kind":"class","full_name":"Clear::Model::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/Error","kind":"class","full_name":"Clear::Model::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/errors.cr","line_number":12,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(model:Clear::Model)-class-method","html_id":"new(model:Clear::Model)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Clear::Model"}],"args_string":"(model : Clear::Model)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr#L15","def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Clear::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"model:Clear::Model-instance-method","html_id":"model:Clear::Model-instance-method","name":"model","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Model","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/errors.cr#L15","def":{"name":"model","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model","visibility":"Public","body":"@model"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Model/Relations","path":"Clear/Model/Relations.html","kind":"module","full_name":"Clear::Model::Relations","name":"Relations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/modules/relations/belongs_to_macro.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/modules/relations/belongs_to_macro.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Reflection","path":"Clear/Reflection.html","kind":"module","full_name":"Clear::Reflection","name":"Reflection","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/reflection/column.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Column","path":"Clear/Reflection/Column.html","kind":"class","full_name":"Clear::Reflection::Column","name":"Column","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/Model/FullTextSearchable","kind":"module","full_name":"Clear::Model::FullTextSearchable","name":"FullTextSearchable"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Initializer","kind":"module","full_name":"Clear::Model::Initializer","name":"Initializer"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasFactory","kind":"module","full_name":"Clear::Model::HasFactory","name":"HasFactory"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasJson","kind":"module","full_name":"Clear::Model::HasJson","name":"HasJson"},{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation"},{"html_id":"github.com/anykeyh/clear/Clear/Validation/Helper","kind":"module","full_name":"Clear::Validation::Helper","name":"Helper"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSaving","kind":"module","full_name":"Clear::Model::HasSaving","name":"HasSaving"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSerialPkey","kind":"module","full_name":"Clear::Model::HasSerialPkey","name":"HasSerialPkey"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasTimestamps","kind":"module","full_name":"Clear::Model::HasTimestamps","name":"HasTimestamps"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks","kind":"module","full_name":"Clear::Model::HasHooks","name":"HasHooks"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Connection","kind":"module","full_name":"Clear::Model::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/reflection/column.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"COLUMNS","name":"COLUMNS","value":"{table_catalog => {type: String, primary: false, converter: \"String\", column_name: \"table_catalog\", presence: true}, table_schema => {type: String, primary: false, converter: \"String\", column_name: \"table_schema\", presence: true}, table_name => {type: ::Union(String, ::Nil), primary: false, converter: \"String\", column_name: \"table_name\", presence: true}, column_name => {type: String, primary: true, converter: \"String\", column_name: \"column_name\", presence: true}} of Nil => Nil","doc":null,"summary":null},{"id":"POLYMORPHISM_SETTINGS","name":"POLYMORPHISM_SETTINGS","value":"{} of Nil => Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"extended_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks/ClassMethods","kind":"module","full_name":"Clear::Model::HasHooks::ClassMethods","name":"ClassMethods"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Reflection","kind":"module","full_name":"Clear::Reflection","name":"Reflection"},"doc":"Reflection of the columns using information_schema in postgreSQL.\nTODO: Usage of view instead of model","summary":"<p>Reflection of the columns using information_schema in postgreSQL.</p>","class_methods":[{"id":"build(**x:**T)forallT-class-method","html_id":"build(**x:**T)forallT-class-method","name":"build","doc":"Build a new empty model and fill the columns using the NamedTuple in argument.\n\nReturns the new model","summary":"<p>Build a new empty model and fill the columns using the NamedTuple in argument.</p>","abstract":false,"args":[],"args_string":"(**x : **T) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"build","args":[],"double_splat":{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if T.size > 0 %}\n          self.new(x)\n        {% else %}\n          self.new\n        {% end %}"}},{"id":"columns-class-method","html_id":"columns-class-method","name":"columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@columns"}},{"id":"connection:String-class-method","html_id":"connection:String-class-method","name":"connection","doc":"Define on which connection the model is living. Useful in case of models living in different databases.\n\nIs set to \"default\" by default.\n\nSee `Clear::SQL#init(URI, *opts)` for more information about multi-connections.\n\nExample:\n```\n Clear::SQL.init(\"postgres://postgres@localhost/database_1\", connection_pool_size: 5)\n Clear::SQL.init(\"secondary\", \"postgres://postgres@localhost/database_2\", connection_pool_size: 5)\n\nclass ModelA\n  include Clear::Model\n\n  # Performs all the queries on `database_1`\n  # self.connection = \"default\"\n  column id : Int32, primary: true, presence: false\n  column title : String\nend\n\nclass ModelB\n  include Clear::Model\n\n  # Performs all the queries on `database_2`\n  self.connection = \"secondary\"\n\n  column id : Int32, primary: true, presence: false\nend\n\n```","summary":"<p>Define on which connection the model is living.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@connection"}},{"id":"connection=(connection:String)-class-method","html_id":"connection=(connection:String)-class-method","name":"connection=","doc":"Define on which connection the model is living. Useful in case of models living in different databases.\n\nIs set to \"default\" by default.\n\nSee `Clear::SQL#init(URI, *opts)` for more information about multi-connections.\n\nExample:\n```\n Clear::SQL.init(\"postgres://postgres@localhost/database_1\", connection_pool_size: 5)\n Clear::SQL.init(\"secondary\", \"postgres://postgres@localhost/database_2\", connection_pool_size: 5)\n\nclass ModelA\n  include Clear::Model\n\n  # Performs all the queries on `database_1`\n  # self.connection = \"default\"\n  column id : Int32, primary: true, presence: false\n  column title : String\nend\n\nclass ModelB\n  include Clear::Model\n\n  # Performs all the queries on `database_2`\n  self.connection = \"secondary\"\n\n  column id : Int32, primary: true, presence: false\nend\n\n```","summary":"<p>Define on which connection the model is living.</p>","abstract":false,"args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"String"}],"args_string":"(connection : String)","source_link":null,"def":{"name":"connection=","args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@connection = connection"}},{"id":"create(x:Array(NamedTuple)):Array(self)-class-method","html_id":"create(x:Array(NamedTuple)):Array(self)-class-method","name":"create","doc":"Multi-models creation. See `Collection#create(**args)`\n\nReturns the list of newly created model.\n\nEach model will call an `INSERT` query.\nYou may want to use `Collection#import` to insert multiple model more efficiently in one query.","summary":"<p>Multi-models creation.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"args_string":"(x : Array(NamedTuple)) : Array(<span class=\"k\">self</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"create","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"x.map do |elm|\n  create(**elm)\nend"}},{"id":"create!(x:Array(NamedTuple)):Array(self)-class-method","html_id":"create!(x:Array(NamedTuple)):Array(self)-class-method","name":"create!","doc":"Multi-models creation. See `Collection#create!(**args)`\n\nReturns the list of newly created model.\nRaises exception if any of the model has validation error.","summary":"<p>Multi-models creation.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"args_string":"(x : Array(NamedTuple)) : Array(<span class=\"k\">self</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"create!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"x.map do |elm|\n  create!(**elm)\nend"}},{"id":"find(x)-class-method","html_id":"find(x)-class-method","name":"find","doc":"Returns a model using primary key equality\nReturns `nil` if not found.","summary":"<p>Returns a model using primary key equality Returns <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"find","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.where do\n  (raw(pkey)) == x\nend.first"}},{"id":"find!(x)-class-method","html_id":"find!(x)-class-method","name":"find!","doc":"Returns a model using primary key equality.\nRaises error if the model is not found.","summary":"<p>Returns a model using primary key equality.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"find!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(find(x)) || (raise(Clear::SQL::RecordNotFoundError.new))"}},{"id":"import(array:Enumerable(self),on_conflict:Clear::SQL::InsertQuery->?=nil)-class-method","html_id":"import(array:Enumerable(self),on_conflict:Clear::SQL::InsertQuery-&gt;?=nil)-class-method","name":"import","doc":"Import a bulk of models in one SQL insert query.\nEach model must be non-persisted.\n\n`on_conflict` callback can be optionnaly turned on\nto manage constraints of the database.\n\nNote: Old models are not modified. This method return a copy of the\nmodels as saved in the database.\n\n## Example:\n```crystal\n\n users = [ User.new(id: 1), User.new(id: 2), User.new(id: 3)]\n users = User.import(users)\n```","summary":"<p>Import a bulk of models in one SQL insert query.</p>","abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Enumerable(self)"},{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"args_string":"(array : Enumerable(<span class=\"k\">self</span>), on_conflict : Clear::SQL::InsertQuery -> ? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"import","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Enumerable(self)"},{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"array.each do |item|\n  if item.persisted?\n    raise(\"One of your model is persisted while calling import\")\n  end\nend\nhashes = array.map do |item|\n  item.trigger_before_events(:save)\n  if item.valid?\n  else\n    raise(\"import: Validation failed for `#{item}`\")\n  end\n  item.trigger_before_events(:create)\n  item.to_h\nend\nquery = (Clear::SQL.insert_into(self.table, hashes)).returning(\"*\")\nif on_conflict\n  on_conflict.call(query)\nend\no = [] of self\nquery.fetch(@@connection) do |hash|\n  o << ((Clear::Model::Factory.build(self.name, hash, persisted: true, fetch_columns: false, cache: nil)).as(self))\nend\no.each(&.trigger_after_events(:create))\no.each(&.trigger_after_events(:save))\no\n"}},{"id":"polymorphic?:Bool-class-method","html_id":"polymorphic?:Bool-class-method","name":"polymorphic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"polymorphic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@polymorphic"}},{"id":"query-class-method","html_id":"query-class-method","name":"query","doc":"Return a new empty query `SELECT * FROM [my_model_table]`. Can be refined after that.","summary":"<p>Return a new empty query <code>SELECT * FROM [my_model_table]</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Collection.new.use_connection(connection)).from(self.esc_schema_table)"}},{"id":"read_only=(read_only:Bool)-class-method","html_id":"read_only=(read_only:Bool)-class-method","name":"read_only=","doc":null,"summary":null,"abstract":false,"args":[{"name":"read_only","doc":null,"default_value":"","external_name":"read_only","restriction":"Bool"}],"args_string":"(read_only : Bool)","source_link":null,"def":{"name":"read_only=","args":[{"name":"read_only","doc":null,"default_value":"","external_name":"read_only","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@read_only = read_only"}},{"id":"read_only?:Bool-class-method","html_id":"read_only?:Bool-class-method","name":"read_only?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"read_only?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@read_only"}},{"id":"schema:Clear::SQL::Symbolic?-class-method","html_id":"schema:Clear::SQL::Symbolic?-class-method","name":"schema","doc":"Define the current schema used in PostgreSQL. The value is `nil` by default, which lead to non-specified\n  schema during the querying, and usage of \"public\" by PostgreSQL.\n\nThis property can be redefined on initialization. Example:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.schema = \"my_schema\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"my_schema\".\"my_models\"\n```","summary":"<p>Define the current schema used in PostgreSQL.</p>","abstract":false,"args":[],"args_string":" : Clear::SQL::Symbolic?","source_link":null,"def":{"name":"schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Symbolic | ::Nil","visibility":"Public","body":"@@schema"}},{"id":"schema=(schema:Clear::SQL::Symbolic?)-class-method","html_id":"schema=(schema:Clear::SQL::Symbolic?)-class-method","name":"schema=","doc":"Define the current schema used in PostgreSQL. The value is `nil` by default, which lead to non-specified\n  schema during the querying, and usage of \"public\" by PostgreSQL.\n\nThis property can be redefined on initialization. Example:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.schema = \"my_schema\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"my_schema\".\"my_models\"\n```","summary":"<p>Define the current schema used in PostgreSQL.</p>","abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":"Clear::SQL::Symbolic | ::Nil"}],"args_string":"(schema : Clear::SQL::Symbolic?)","source_link":null,"def":{"name":"schema=","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":"Clear::SQL::Symbolic | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@schema = schema"}},{"id":"table:Clear::SQL::Symbolic-class-method","html_id":"table:Clear::SQL::Symbolic-class-method","name":"table","doc":"Return the table name setup for this model.\nBy convention, the class name is by default equals to the pluralized underscored string form of the model name.\nExample:\n\n```\n  MyModel => \"my_models\"\n  Person => \"people\"\n  Project::Info => \"project_infos\"\n```\n\nThe property can be updated at initialization to a custom table name:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.table = \"another_table_name\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"another_table_name\"\n```","summary":"<p>Return the table name setup for this model.</p>","abstract":false,"args":[],"args_string":" : Clear::SQL::Symbolic","source_link":null,"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Symbolic","visibility":"Public","body":"@@table"}},{"id":"table=(table:Clear::SQL::Symbolic)-class-method","html_id":"table=(table:Clear::SQL::Symbolic)-class-method","name":"table=","doc":"Return the table name setup for this model.\nBy convention, the class name is by default equals to the pluralized underscored string form of the model name.\nExample:\n\n```\n  MyModel => \"my_models\"\n  Person => \"people\"\n  Project::Info => \"project_infos\"\n```\n\nThe property can be updated at initialization to a custom table name:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.table = \"another_table_name\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"another_table_name\"\n```","summary":"<p>Return the table name setup for this model.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Clear::SQL::Symbolic"}],"args_string":"(table : Clear::SQL::Symbolic)","source_link":null,"def":{"name":"table=","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Clear::SQL::Symbolic"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@table = table"}}],"constructors":[{"id":"create(x:NamedTuple):self-class-method","html_id":"create(x:NamedTuple):self-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"create","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**x)\nmdl.save\nmdl\n"}},{"id":"create(**args):self-class-method","html_id":"create(**args):self-class-method","name":"create","doc":"Build and new model and save it. Returns the model.\n\nThe model may not be saved due to validation failure;\ncheck the returned model `errors?` and `persisted?` flags.","summary":"<p>Build and new model and save it.</p>","abstract":false,"args":[],"args_string":"(**args) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"create","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**args)\nmdl.save\nmdl\n"}},{"id":"create!(**args):self-class-method","html_id":"create!(**args):self-class-method","name":"create!","doc":"Build and new model and save it. Returns the model.\n\nReturns the newly inserted model\nRaises an exception if validation failed during the saving process.","summary":"<p>Build and new model and save it.</p>","abstract":false,"args":[],"args_string":"(**args) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"create!","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**args)\nmdl.save!\nmdl\n"}},{"id":"create!(x:NamedTuple):self-class-method","html_id":"create!(x:NamedTuple):self-class-method","name":"create!","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"create!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**x)\nmdl.save!\nmdl\n"}},{"id":"new(t:NamedTuple,persisted=false)-class-method","html_id":"new(t:NamedTuple,persisted=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"args_string":"(t : NamedTuple, persisted = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"new","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(t, persisted)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(json:JSON::Any,cache:Clear::Model::QueryCache?=nil,persisted=false)-class-method","html_id":"new(json:JSON::Any,cache:Clear::Model::QueryCache?=nil,persisted=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Any"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"args_string":"(json : JSON::Any, cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"new","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Any"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(json, cache, persisted)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(h:Hash(String,UNDERSCORE),cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false)-class-method","html_id":"new(h:Hash(String,UNDERSCORE),cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(h : Hash(String, UNDERSCORE), cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted = <span class=\"n\">false</span>, fetch_columns = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"new","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(h, cache, persisted, fetch_columns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"_cached_table:Clear::Reflection::Table?-instance-method","html_id":"_cached_table:Clear::Reflection::Table?-instance-method","name":"_cached_table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Reflection::Table?","source_link":null,"def":{"name":"_cached_table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Reflection::Table | ::Nil","visibility":"Public","body":"@_cached_table"}},{"id":"attributes:Hash(String,Clear::SQL::Any)-instance-method","html_id":"attributes:Hash(String,Clear::SQL::Any)-instance-method","name":"attributes","doc":"Attributes, used when fetch_columns is true","summary":"<p>Attributes, used when fetch_columns is true</p>","abstract":false,"args":[],"args_string":" : Hash(String, Clear::SQL::Any)","source_link":null,"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"@attributes"}},{"id":"cache:Clear::Model::QueryCache?-instance-method","html_id":"cache:Clear::Model::QueryCache?-instance-method","name":"cache","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Model::QueryCache?","source_link":null,"def":{"name":"cache","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::QueryCache | ::Nil","visibility":"Public","body":"@cache"}},{"id":"changed?-instance-method","html_id":"changed?-instance-method","name":"changed?","doc":"Return `true` if the model is dirty (e.g. one or more fields\n  have been changed.). Return `false` otherwise.","summary":"<p>Return <code>true</code> if the model is dirty (e.g.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"changed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @table_catalog_column.changed?\n  return true\nend\nif @table_schema_column.changed?\n  return true\nend\nif @table_name_column.changed?\n  return true\nend\nif @column_name_column.changed?\n  return true\nend\nreturn false\n"}},{"id":"clear_change_flags-instance-method","html_id":"clear_change_flags-instance-method","name":"clear_change_flags","doc":"Reset the `changed?` flag on all columns\n\nThe model behave like its not dirty anymore\nand call to save would apply no changes.\n\nReturns `self`","summary":"<p>Reset the <code><a href=\"../../Clear/Reflection/Column.html#changed%3F-instance-method\">#changed?</a></code> flag on all columns</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"clear_change_flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_catalog_column.clear_change_flag\n@table_schema_column.clear_change_flag\n@table_name_column.clear_change_flag\n@column_name_column.clear_change_flag\nself\n"}},{"id":"column_name:String-instance-method","html_id":"column_name:String-instance-method","name":"column_name","doc":"Returns the value of `column_name` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Column.html#column_name%3AString-instance-method\">#column_name</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"column_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@column_name_column.value"}},{"id":"column_name=(x:String)-instance-method","html_id":"column_name=(x:String)-instance-method","name":"column_name=","doc":"Setter for `column_name` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Column.html#column_name%3AString-instance-method\">#column_name</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"column_name=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column_name_column.value = x"}},{"id":"column_name_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"column_name_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"column_name_column","doc":"Returns the column object used to manage `column_name` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Column.html#column_name%3AString-instance-method\">#column_name</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"column_name_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@column_name_column"}},{"id":"reset(**t:**T)forallT-instance-method","html_id":"reset(**t:**T)forallT-instance-method","name":"reset","doc":"reset flavors","summary":"<p>reset flavors</p>","abstract":false,"args":[],"args_string":"(**t : **T) forall T","source_link":null,"def":{"name":"reset","args":[],"double_splat":{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super()\n{% for name, typ in T %}\n        {% if !(@type.has_method?(\"#{name}=\")) %}\n          {% raise(\"No method #{@type}##{name}= while trying to set value of #{name}\") %}\n        {% end %}\n\n        {% if settings = COLUMNS[\"#{name}\".id] %}\n          @{{ name }}_column.reset_convert(t[:{{ name }}])\n        {% else %}\n          self.{{ name }} = t[:{{ name }}]\n        {% end %}\n      {% end %}\nself\n"}},{"id":"reset(from_json:JSON::Any)-instance-method","html_id":"reset(from_json:JSON::Any)-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"args_string":"(from_json : JSON::Any)","source_link":null,"def":{"name":"reset","args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset(from_json.as_h)"}},{"id":"reset(h:Hash(String,UNDERSCORE))-instance-method","html_id":"reset(h:Hash(String,UNDERSCORE))-instance-method","name":"reset","doc":"Set the model fields from hash","summary":"<p>Set the model fields from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"args_string":"(h : Hash(String, UNDERSCORE))","source_link":null,"def":{"name":"reset","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch({{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.reset_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"reset(h:Hash(Symbol,UNDERSCORE))-instance-method","html_id":"reset(h:Hash(Symbol,UNDERSCORE))-instance-method","name":"reset","doc":"Set the columns from hash","summary":"<p>Set the columns from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"args_string":"(h : Hash(Symbol, UNDERSCORE))","source_link":null,"def":{"name":"reset","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch(:{{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.reset_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"reset(t:NamedTuple)-instance-method","html_id":"reset(t:NamedTuple)-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"args_string":"(t : NamedTuple)","source_link":null,"def":{"name":"reset","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset(**t)"}},{"id":"set(t:NamedTuple)-instance-method","html_id":"set(t:NamedTuple)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"args_string":"(t : NamedTuple)","source_link":null,"def":{"name":"set","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(**t)"}},{"id":"set(**t:**T)forallT-instance-method","html_id":"set(**t:**T)forallT-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**t : **T) forall T","source_link":null,"def":{"name":"set","args":[],"double_splat":{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super()\n{% for name, typ in T %}\n        {% if !(@type.has_method?(\"#{name}=\")) %}\n          {% raise(\"No method #{@type}##{name}= while trying to set value of #{name}\") %}\n        {% end %}\n\n        {% if settings = COLUMNS[\"#{name}\".id] %}\n          @{{ name }}_column.set_convert(t[:{{ name }}])\n        {% else %}\n          self.{{ name }} = t[:{{ name }}]\n        {% end %}\n      {% end %}\nself\n"}},{"id":"set(from_json:JSON::Any)-instance-method","html_id":"set(from_json:JSON::Any)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"args_string":"(from_json : JSON::Any)","source_link":null,"def":{"name":"set","args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(from_json.as_h)"}},{"id":"set(h:Hash(String,UNDERSCORE))-instance-method","html_id":"set(h:Hash(String,UNDERSCORE))-instance-method","name":"set","doc":"Set the model fields from hash","summary":"<p>Set the model fields from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"args_string":"(h : Hash(String, UNDERSCORE))","source_link":null,"def":{"name":"set","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch({{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.set_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"set(h:Hash(Symbol,UNDERSCORE))-instance-method","html_id":"set(h:Hash(Symbol,UNDERSCORE))-instance-method","name":"set","doc":"Set the columns from hash","summary":"<p>Set the columns from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"args_string":"(h : Hash(Symbol, UNDERSCORE))","source_link":null,"def":{"name":"set","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch(:{{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.set_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"table:Clear::Reflection::Table?-instance-method","html_id":"table:Clear::Reflection::Table?-instance-method","name":"table","doc":"The method table is a `belongs_to` relation\n  to Clear::Reflection::Table","summary":"<p>The method table is a <code>belongs_to</code> relation   to Clear::Reflection::Table</p>","abstract":false,"args":[],"args_string":" : Clear::Reflection::Table?","source_link":null,"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Reflection::Table | Nil","visibility":"Public","body":"if cached = @cached_table\n  cached\nelse\n  cache = @cache\n  if cache && (cache.active?(\"table\"))\n    @cached_table = (cache.hit(\"table\", self.table_name_column.to_sql_value, Clear::Reflection::Table)).first?\n  else\n    @cached_table = Clear::Reflection::Table.query.where do\n      (raw(Clear::Reflection::Table.pkey)) == self.table_name\n    end.first\n  end\nend"}},{"id":"table!:Clear::Reflection::Table-instance-method","html_id":"table!:Clear::Reflection::Table-instance-method","name":"table!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Reflection::Table","source_link":null,"def":{"name":"table!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Reflection::Table","visibility":"Public","body":"table.not_nil!"}},{"id":"table=(x:Clear::Reflection::Table?)-instance-method","html_id":"table=(x:Clear::Reflection::Table?)-instance-method","name":"table=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Clear::Reflection::Table | Nil"}],"args_string":"(x : Clear::Reflection::Table?)","source_link":null,"def":{"name":"table=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Clear::Reflection::Table | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if x && x.persisted?\n  if x.pkey_column.defined?\n  else\n    raise(\"#{x.pkey_column.name} must be defined when assigning a belongs_to relation.\")\n  end\n  @table_name_column.value = x.pkey\nend\n@cached_table = x\n"}},{"id":"table_catalog:String-instance-method","html_id":"table_catalog:String-instance-method","name":"table_catalog","doc":"Returns the value of `table_catalog` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Column.html#table_catalog%3AString-instance-method\">#table_catalog</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table_catalog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_catalog_column.value"}},{"id":"table_catalog=(x:String)-instance-method","html_id":"table_catalog=(x:String)-instance-method","name":"table_catalog=","doc":"Setter for `table_catalog` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Column.html#table_catalog%3AString-instance-method\">#table_catalog</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"table_catalog=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_catalog_column.value = x"}},{"id":"table_catalog_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_catalog_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"table_catalog_column","doc":"Returns the column object used to manage `table_catalog` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Column.html#table_catalog%3AString-instance-method\">#table_catalog</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_catalog_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_catalog_column"}},{"id":"table_name:::Union(String,Nil)-instance-method","html_id":"table_name:::Union(String,Nil)-instance-method","name":"table_name","doc":"Returns the value of `table_name` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Column.html#table_name%3A%3A%3AUnion%28String%2CNil%29-instance-method\">#table_name</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : ::Union(String, Nil)","source_link":null,"def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@table_name_column.value"}},{"id":"table_name=(x:::Union(String,Nil))-instance-method","html_id":"table_name=(x:::Union(String,Nil))-instance-method","name":"table_name=","doc":"Setter for `table_name` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Column.html#table_name%3A%3A%3AUnion%28String%2CNil%29-instance-method\">#table_name</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::Union(String, ::Nil)"}],"args_string":"(x : ::Union(String, Nil))","source_link":null,"def":{"name":"table_name=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_name_column.value = x"}},{"id":"table_name_column:Clear::Model::Column(::Union(String,Nil),Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_name_column:Clear::Model::Column(::Union(String,Nil),Clear::Model::Converter::StringConverter)-instance-method","name":"table_name_column","doc":"Returns the column object used to manage `table_name` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Column.html#table_name%3A%3A%3AUnion%28String%2CNil%29-instance-method\">#table_name</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(::Union(String, Nil), Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_name_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(::Union(String, ::Nil), Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_name_column"}},{"id":"table_schema:String-instance-method","html_id":"table_schema:String-instance-method","name":"table_schema","doc":"Returns the value of `table_schema` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Column.html#table_schema%3AString-instance-method\">#table_schema</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_schema_column.value"}},{"id":"table_schema=(x:String)-instance-method","html_id":"table_schema=(x:String)-instance-method","name":"table_schema=","doc":"Setter for `table_schema` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Column.html#table_schema%3AString-instance-method\">#table_schema</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"table_schema=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_schema_column.value = x"}},{"id":"table_schema_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_schema_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"table_schema_column","doc":"Returns the column object used to manage `table_schema` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Column.html#table_schema%3AString-instance-method\">#table_schema</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_schema_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_schema_column"}},{"id":"to_h(full=false):Hash(String,Clear::SQL::Any)-instance-method","html_id":"to_h(full=false):Hash(String,Clear::SQL::Any)-instance-method","name":"to_h","doc":"Return a hash version of the columns of this model.","summary":"<p>Return a hash version of the columns of this model.</p>","abstract":false,"args":[{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"args_string":"(full = <span class=\"n\">false</span>) : Hash(String, Clear::SQL::Any)","source_link":null,"def":{"name":"to_h","args":[{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"out = super(full)\nif full || @table_catalog_column.defined?\n  out[\"table_catalog\"] = @table_catalog_column.to_sql_value(nil)\nend\nif full || @table_schema_column.defined?\n  out[\"table_schema\"] = @table_schema_column.to_sql_value(nil)\nend\nif full || @table_name_column.defined?\n  out[\"table_name\"] = @table_name_column.to_sql_value(nil)\nend\nif full || @column_name_column.defined?\n  out[\"column_name\"] = @column_name_column.to_sql_value(nil)\nend\nout\n"}},{"id":"update_h:Hash(String,Clear::SQL::Any)-instance-method","html_id":"update_h:Hash(String,Clear::SQL::Any)-instance-method","name":"update_h","doc":"Generate the hash for update request (like during save)","summary":"<p>Generate the hash for update request (like during save)</p>","abstract":false,"args":[],"args_string":" : Hash(String, Clear::SQL::Any)","source_link":null,"def":{"name":"update_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"o = super()\nif @table_catalog_column.defined? && @table_catalog_column.changed?\n  o[\"table_catalog\"] = @table_catalog_column.to_sql_value\nend\nif @table_schema_column.defined? && @table_schema_column.changed?\n  o[\"table_schema\"] = @table_schema_column.to_sql_value\nend\nif @table_name_column.defined? && @table_name_column.changed?\n  o[\"table_name\"] = @table_name_column.to_sql_value\nend\nif @column_name_column.defined? && @column_name_column.changed?\n  o[\"column_name\"] = @column_name_column.to_sql_value\nend\no\n"}},{"id":"validate_fields_presence-instance-method","html_id":"validate_fields_presence-instance-method","name":"validate_fields_presence","doc":"For each column, ensure than when needed the column has present\ninformation into it.\n\nThis method is called on validation.","summary":"<p>For each column, ensure than when needed the column has present information into it.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"validate_fields_presence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if persisted?\nelse\n  if @table_catalog_column.failed_to_be_present?\n    add_error(\"table_catalog\", \"must be present\")\n  end\nend\nif persisted?\nelse\n  if @table_schema_column.failed_to_be_present?\n    add_error(\"table_schema\", \"must be present\")\n  end\nend\nif persisted?\nelse\n  if @table_name_column.failed_to_be_present?\n    add_error(\"table_name\", \"must be present\")\n  end\nend\nif persisted?\nelse\n  if @column_name_column.failed_to_be_present?\n    add_error(\"column_name\", \"must be present\")\n  end\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Column/Collection","path":"Clear/Reflection/Column/Collection.html","kind":"class","full_name":"Clear::Reflection::Column::Collection","name":"Collection","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Model/CollectionBase","kind":"class","full_name":"Clear::Model::CollectionBase","name":"CollectionBase"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/CollectionBase","kind":"class","full_name":"Clear::Model::CollectionBase","name":"CollectionBase"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","kind":"module","full_name":"Clear::SQL::Query::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/reflection/column.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/column.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Column","kind":"class","full_name":"Clear::Reflection::Column","name":"Column"},"doc":":doc:\nClear::Model::Collection\n\nThis is the object managing a `SELECT` request.\nA new collection is created by calling `Clear::Model.query`\n\nCollection are mutable and refining the SQL will mutate the collection.\nYou may want to copy the collection by calling `dup`\n\nSee `Clear::Model::CollectionBase`","summary":"<p>:doc: Clear::Model::Collection</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"with_table(fetch_columns=false,&block:Clear::Reflection::Table::Collection->):self-instance-method","html_id":"with_table(fetch_columns=false,&amp;block:Clear::Reflection::Table::Collection-&gt;):self-instance-method","name":"with_table","doc":null,"summary":null,"abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>, &block : Clear::Reflection::Table::Collection -> ) : <span class=\"k\">self</span>","source_link":null,"def":{"name":"with_table","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Clear::Reflection::Table::Collection -> )"},"return_type":"self","visibility":"Public","body":"before_query do\n  sub_query = self.dup.clear_select.select(\"#{Clear::Reflection::Column.table}.table_name\")\n  cached_qry = Clear::Reflection::Table.query.where do\n    (raw(Clear::Reflection::Table.pkey)).in?(sub_query)\n  end\n  block.call(cached_qry)\n  @cache.active(\"table\")\n  cached_qry.each(fetch_columns: fetch_columns) do |mdl|\n    @cache.set(\"table\", mdl.pkey, [mdl])\n  end\nend\nself\n"}},{"id":"with_table(fetch_columns=false):self-instance-method","html_id":"with_table(fetch_columns=false):self-instance-method","name":"with_table","doc":null,"summary":null,"abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>) : <span class=\"k\">self</span>","source_link":null,"def":{"name":"with_table","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"with_table(fetch_columns) do\nend\nself\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Table","path":"Clear/Reflection/Table.html","kind":"class","full_name":"Clear::Reflection::Table","name":"Table","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},{"html_id":"github.com/anykeyh/clear/Clear/Model/FullTextSearchable","kind":"module","full_name":"Clear::Model::FullTextSearchable","name":"FullTextSearchable"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Initializer","kind":"module","full_name":"Clear::Model::Initializer","name":"Initializer"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasFactory","kind":"module","full_name":"Clear::Model::HasFactory","name":"HasFactory"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasJson","kind":"module","full_name":"Clear::Model::HasJson","name":"HasJson"},{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation"},{"html_id":"github.com/anykeyh/clear/Clear/Validation/Helper","kind":"module","full_name":"Clear::Validation::Helper","name":"Helper"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSaving","kind":"module","full_name":"Clear::Model::HasSaving","name":"HasSaving"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasSerialPkey","kind":"module","full_name":"Clear::Model::HasSerialPkey","name":"HasSerialPkey"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasTimestamps","kind":"module","full_name":"Clear::Model::HasTimestamps","name":"HasTimestamps"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks","kind":"module","full_name":"Clear::Model::HasHooks","name":"HasHooks"},{"html_id":"github.com/anykeyh/clear/Clear/Model/Connection","kind":"module","full_name":"Clear::Model::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/ErrorMessages","kind":"module","full_name":"Clear::ErrorMessages","name":"ErrorMessages"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/reflection/table.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"COLUMNS","name":"COLUMNS","value":"{table_catalog => {type: String, primary: false, converter: \"String\", column_name: \"table_catalog\", presence: true}, table_schema => {type: String, primary: false, converter: \"String\", column_name: \"table_schema\", presence: true}, table_name => {type: String, primary: true, converter: \"String\", column_name: \"table_name\", presence: true}, table_type => {type: String, primary: false, converter: \"String\", column_name: \"table_type\", presence: true}} of Nil => Nil","doc":null,"summary":null},{"id":"POLYMORPHISM_SETTINGS","name":"POLYMORPHISM_SETTINGS","value":"{} of Nil => Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"}],"extended_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model/HasHooks/ClassMethods","kind":"module","full_name":"Clear::Model::HasHooks::ClassMethods","name":"ClassMethods"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Reflection","kind":"module","full_name":"Clear::Reflection","name":"Reflection"},"doc":"Reflection of the tables using information_schema in postgreSQL.\nTODO: Usage of view instead of model","summary":"<p>Reflection of the tables using information_schema in postgreSQL.</p>","class_methods":[{"id":"build(**x:**T)forallT-class-method","html_id":"build(**x:**T)forallT-class-method","name":"build","doc":"Build a new empty model and fill the columns using the NamedTuple in argument.\n\nReturns the new model","summary":"<p>Build a new empty model and fill the columns using the NamedTuple in argument.</p>","abstract":false,"args":[],"args_string":"(**x : **T) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"build","args":[],"double_splat":{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if T.size > 0 %}\n          self.new(x)\n        {% else %}\n          self.new\n        {% end %}"}},{"id":"columns-class-method","html_id":"columns-class-method","name":"columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@columns"}},{"id":"connection:String-class-method","html_id":"connection:String-class-method","name":"connection","doc":"Define on which connection the model is living. Useful in case of models living in different databases.\n\nIs set to \"default\" by default.\n\nSee `Clear::SQL#init(URI, *opts)` for more information about multi-connections.\n\nExample:\n```\n Clear::SQL.init(\"postgres://postgres@localhost/database_1\", connection_pool_size: 5)\n Clear::SQL.init(\"secondary\", \"postgres://postgres@localhost/database_2\", connection_pool_size: 5)\n\nclass ModelA\n  include Clear::Model\n\n  # Performs all the queries on `database_1`\n  # self.connection = \"default\"\n  column id : Int32, primary: true, presence: false\n  column title : String\nend\n\nclass ModelB\n  include Clear::Model\n\n  # Performs all the queries on `database_2`\n  self.connection = \"secondary\"\n\n  column id : Int32, primary: true, presence: false\nend\n\n```","summary":"<p>Define on which connection the model is living.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@connection"}},{"id":"connection=(connection:String)-class-method","html_id":"connection=(connection:String)-class-method","name":"connection=","doc":"Define on which connection the model is living. Useful in case of models living in different databases.\n\nIs set to \"default\" by default.\n\nSee `Clear::SQL#init(URI, *opts)` for more information about multi-connections.\n\nExample:\n```\n Clear::SQL.init(\"postgres://postgres@localhost/database_1\", connection_pool_size: 5)\n Clear::SQL.init(\"secondary\", \"postgres://postgres@localhost/database_2\", connection_pool_size: 5)\n\nclass ModelA\n  include Clear::Model\n\n  # Performs all the queries on `database_1`\n  # self.connection = \"default\"\n  column id : Int32, primary: true, presence: false\n  column title : String\nend\n\nclass ModelB\n  include Clear::Model\n\n  # Performs all the queries on `database_2`\n  self.connection = \"secondary\"\n\n  column id : Int32, primary: true, presence: false\nend\n\n```","summary":"<p>Define on which connection the model is living.</p>","abstract":false,"args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"String"}],"args_string":"(connection : String)","source_link":null,"def":{"name":"connection=","args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@connection = connection"}},{"id":"create(x:Array(NamedTuple)):Array(self)-class-method","html_id":"create(x:Array(NamedTuple)):Array(self)-class-method","name":"create","doc":"Multi-models creation. See `Collection#create(**args)`\n\nReturns the list of newly created model.\n\nEach model will call an `INSERT` query.\nYou may want to use `Collection#import` to insert multiple model more efficiently in one query.","summary":"<p>Multi-models creation.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"args_string":"(x : Array(NamedTuple)) : Array(<span class=\"k\">self</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"create","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"x.map do |elm|\n  create(**elm)\nend"}},{"id":"create!(x:Array(NamedTuple)):Array(self)-class-method","html_id":"create!(x:Array(NamedTuple)):Array(self)-class-method","name":"create!","doc":"Multi-models creation. See `Collection#create!(**args)`\n\nReturns the list of newly created model.\nRaises exception if any of the model has validation error.","summary":"<p>Multi-models creation.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"args_string":"(x : Array(NamedTuple)) : Array(<span class=\"k\">self</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"create!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(NamedTuple)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"x.map do |elm|\n  create!(**elm)\nend"}},{"id":"find(x)-class-method","html_id":"find(x)-class-method","name":"find","doc":"Returns a model using primary key equality\nReturns `nil` if not found.","summary":"<p>Returns a model using primary key equality Returns <code>nil</code> if not found.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"find","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.where do\n  (raw(pkey)) == x\nend.first"}},{"id":"find!(x)-class-method","html_id":"find!(x)-class-method","name":"find!","doc":"Returns a model using primary key equality.\nRaises error if the model is not found.","summary":"<p>Returns a model using primary key equality.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"find!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(find(x)) || (raise(Clear::SQL::RecordNotFoundError.new))"}},{"id":"import(array:Enumerable(self),on_conflict:Clear::SQL::InsertQuery->?=nil)-class-method","html_id":"import(array:Enumerable(self),on_conflict:Clear::SQL::InsertQuery-&gt;?=nil)-class-method","name":"import","doc":"Import a bulk of models in one SQL insert query.\nEach model must be non-persisted.\n\n`on_conflict` callback can be optionnaly turned on\nto manage constraints of the database.\n\nNote: Old models are not modified. This method return a copy of the\nmodels as saved in the database.\n\n## Example:\n```crystal\n\n users = [ User.new(id: 1), User.new(id: 2), User.new(id: 3)]\n users = User.import(users)\n```","summary":"<p>Import a bulk of models in one SQL insert query.</p>","abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Enumerable(self)"},{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"args_string":"(array : Enumerable(<span class=\"k\">self</span>), on_conflict : Clear::SQL::InsertQuery -> ? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"import","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Enumerable(self)"},{"name":"on_conflict","doc":null,"default_value":"nil","external_name":"on_conflict","restriction":"(Clear::SQL::InsertQuery -> ) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"array.each do |item|\n  if item.persisted?\n    raise(\"One of your model is persisted while calling import\")\n  end\nend\nhashes = array.map do |item|\n  item.trigger_before_events(:save)\n  if item.valid?\n  else\n    raise(\"import: Validation failed for `#{item}`\")\n  end\n  item.trigger_before_events(:create)\n  item.to_h\nend\nquery = (Clear::SQL.insert_into(self.table, hashes)).returning(\"*\")\nif on_conflict\n  on_conflict.call(query)\nend\no = [] of self\nquery.fetch(@@connection) do |hash|\n  o << ((Clear::Model::Factory.build(self.name, hash, persisted: true, fetch_columns: false, cache: nil)).as(self))\nend\no.each(&.trigger_after_events(:create))\no.each(&.trigger_after_events(:save))\no\n"}},{"id":"polymorphic?:Bool-class-method","html_id":"polymorphic?:Bool-class-method","name":"polymorphic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"polymorphic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@polymorphic"}},{"id":"public-class-method","html_id":"public-class-method","name":"public","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L16","def":{"name":"public","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.public"}},{"id":"query-class-method","html_id":"query-class-method","name":"query","doc":"Return a new empty query `SELECT * FROM [my_model_table]`. Can be refined after that.","summary":"<p>Return a new empty query <code>SELECT * FROM [my_model_table]</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Collection.new.use_connection(connection)).from(self.esc_schema_table)"}},{"id":"read_only=(read_only:Bool)-class-method","html_id":"read_only=(read_only:Bool)-class-method","name":"read_only=","doc":null,"summary":null,"abstract":false,"args":[{"name":"read_only","doc":null,"default_value":"","external_name":"read_only","restriction":"Bool"}],"args_string":"(read_only : Bool)","source_link":null,"def":{"name":"read_only=","args":[{"name":"read_only","doc":null,"default_value":"","external_name":"read_only","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@read_only = read_only"}},{"id":"read_only?:Bool-class-method","html_id":"read_only?:Bool-class-method","name":"read_only?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"read_only?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@read_only"}},{"id":"schema:Clear::SQL::Symbolic?-class-method","html_id":"schema:Clear::SQL::Symbolic?-class-method","name":"schema","doc":"Define the current schema used in PostgreSQL. The value is `nil` by default, which lead to non-specified\n  schema during the querying, and usage of \"public\" by PostgreSQL.\n\nThis property can be redefined on initialization. Example:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.schema = \"my_schema\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"my_schema\".\"my_models\"\n```","summary":"<p>Define the current schema used in PostgreSQL.</p>","abstract":false,"args":[],"args_string":" : Clear::SQL::Symbolic?","source_link":null,"def":{"name":"schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Symbolic | ::Nil","visibility":"Public","body":"@@schema"}},{"id":"schema=(schema:Clear::SQL::Symbolic?)-class-method","html_id":"schema=(schema:Clear::SQL::Symbolic?)-class-method","name":"schema=","doc":"Define the current schema used in PostgreSQL. The value is `nil` by default, which lead to non-specified\n  schema during the querying, and usage of \"public\" by PostgreSQL.\n\nThis property can be redefined on initialization. Example:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.schema = \"my_schema\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"my_schema\".\"my_models\"\n```","summary":"<p>Define the current schema used in PostgreSQL.</p>","abstract":false,"args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":"Clear::SQL::Symbolic | ::Nil"}],"args_string":"(schema : Clear::SQL::Symbolic?)","source_link":null,"def":{"name":"schema=","args":[{"name":"schema","doc":null,"default_value":"","external_name":"schema","restriction":"Clear::SQL::Symbolic | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@schema = schema"}},{"id":"table:Clear::SQL::Symbolic-class-method","html_id":"table:Clear::SQL::Symbolic-class-method","name":"table","doc":"Return the table name setup for this model.\nBy convention, the class name is by default equals to the pluralized underscored string form of the model name.\nExample:\n\n```\n  MyModel => \"my_models\"\n  Person => \"people\"\n  Project::Info => \"project_infos\"\n```\n\nThe property can be updated at initialization to a custom table name:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.table = \"another_table_name\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"another_table_name\"\n```","summary":"<p>Return the table name setup for this model.</p>","abstract":false,"args":[],"args_string":" : Clear::SQL::Symbolic","source_link":null,"def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Symbolic","visibility":"Public","body":"@@table"}},{"id":"table=(table:Clear::SQL::Symbolic)-class-method","html_id":"table=(table:Clear::SQL::Symbolic)-class-method","name":"table=","doc":"Return the table name setup for this model.\nBy convention, the class name is by default equals to the pluralized underscored string form of the model name.\nExample:\n\n```\n  MyModel => \"my_models\"\n  Person => \"people\"\n  Project::Info => \"project_infos\"\n```\n\nThe property can be updated at initialization to a custom table name:\n\n```\n  class MyModel\n    include Clear::Model\n\n    self.table = \"another_table_name\"\n  end\n  MyModel.query.to_sql # SELECT * FROM \"another_table_name\"\n```","summary":"<p>Return the table name setup for this model.</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Clear::SQL::Symbolic"}],"args_string":"(table : Clear::SQL::Symbolic)","source_link":null,"def":{"name":"table=","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Clear::SQL::Symbolic"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@table = table"}},{"id":"tables_only-class-method","html_id":"tables_only-class-method","name":"tables_only","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L18","def":{"name":"tables_only","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.tables_only"}},{"id":"views_only-class-method","html_id":"views_only-class-method","name":"views_only","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L19","def":{"name":"views_only","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.views_only"}}],"constructors":[{"id":"create(**args):self-class-method","html_id":"create(**args):self-class-method","name":"create","doc":"Build and new model and save it. Returns the model.\n\nThe model may not be saved due to validation failure;\ncheck the returned model `errors?` and `persisted?` flags.","summary":"<p>Build and new model and save it.</p>","abstract":false,"args":[],"args_string":"(**args) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"create","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**args)\nmdl.save\nmdl\n"}},{"id":"create(x:NamedTuple):self-class-method","html_id":"create(x:NamedTuple):self-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"create","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**x)\nmdl.save\nmdl\n"}},{"id":"create!(x:NamedTuple):self-class-method","html_id":"create!(x:NamedTuple):self-class-method","name":"create!","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"create!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**x)\nmdl.save!\nmdl\n"}},{"id":"create!(**args):self-class-method","html_id":"create!(**args):self-class-method","name":"create!","doc":"Build and new model and save it. Returns the model.\n\nReturns the newly inserted model\nRaises an exception if validation failed during the saving process.","summary":"<p>Build and new model and save it.</p>","abstract":false,"args":[],"args_string":"(**args) : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"create!","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"mdl = build(**args)\nmdl.save!\nmdl\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(t:NamedTuple,persisted=false)-class-method","html_id":"new(t:NamedTuple,persisted=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"args_string":"(t : NamedTuple, persisted = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"new","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(t, persisted)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(json:JSON::Any,cache:Clear::Model::QueryCache?=nil,persisted=false)-class-method","html_id":"new(json:JSON::Any,cache:Clear::Model::QueryCache?=nil,persisted=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Any"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"args_string":"(json : JSON::Any, cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"new","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Any"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(json, cache, persisted)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(h:Hash(String,UNDERSCORE),cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false)-class-method","html_id":"new(h:Hash(String,UNDERSCORE),cache:Clear::Model::QueryCache?=nil,persisted=false,fetch_columns=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(h : Hash(String, UNDERSCORE), cache : Clear::Model::QueryCache? = <span class=\"n\">nil</span>, persisted = <span class=\"n\">false</span>, fetch_columns = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L4","def":{"name":"new","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"},{"name":"cache","doc":null,"default_value":"nil","external_name":"cache","restriction":"Clear::Model::QueryCache | ::Nil"},{"name":"persisted","doc":null,"default_value":"false","external_name":"persisted","restriction":""},{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(h, cache, persisted, fetch_columns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attributes:Hash(String,Clear::SQL::Any)-instance-method","html_id":"attributes:Hash(String,Clear::SQL::Any)-instance-method","name":"attributes","doc":"Attributes, used when fetch_columns is true","summary":"<p>Attributes, used when fetch_columns is true</p>","abstract":false,"args":[],"args_string":" : Hash(String, Clear::SQL::Any)","source_link":null,"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"@attributes"}},{"id":"cache:Clear::Model::QueryCache?-instance-method","html_id":"cache:Clear::Model::QueryCache?-instance-method","name":"cache","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Model::QueryCache?","source_link":null,"def":{"name":"cache","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::QueryCache | ::Nil","visibility":"Public","body":"@cache"}},{"id":"changed?-instance-method","html_id":"changed?-instance-method","name":"changed?","doc":"Return `true` if the model is dirty (e.g. one or more fields\n  have been changed.). Return `false` otherwise.","summary":"<p>Return <code>true</code> if the model is dirty (e.g.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"changed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @table_catalog_column.changed?\n  return true\nend\nif @table_schema_column.changed?\n  return true\nend\nif @table_name_column.changed?\n  return true\nend\nif @table_type_column.changed?\n  return true\nend\nreturn false\n"}},{"id":"clear_change_flags-instance-method","html_id":"clear_change_flags-instance-method","name":"clear_change_flags","doc":"Reset the `changed?` flag on all columns\n\nThe model behave like its not dirty anymore\nand call to save would apply no changes.\n\nReturns `self`","summary":"<p>Reset the <code><a href=\"../../Clear/Reflection/Table.html#changed%3F-instance-method\">#changed?</a></code> flag on all columns</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"clear_change_flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_catalog_column.clear_change_flag\n@table_schema_column.clear_change_flag\n@table_name_column.clear_change_flag\n@table_type_column.clear_change_flag\nself\n"}},{"id":"columns:Clear::Reflection::Column::Collection-instance-method","html_id":"columns:Clear::Reflection::Column::Collection-instance-method","name":"columns","doc":"The method columns is a `has_many` relation\n  to Clear::Reflection::Column","summary":"<p>The method columns is a <code>has_many</code> relation   to Clear::Reflection::Column</p>","abstract":false,"args":[],"args_string":" : Clear::Reflection::Column::Collection","source_link":null,"def":{"name":"columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Reflection::Column::Collection","visibility":"Public","body":"__temp_52 = table_name\n__temp_53 = \"table_name\"\ncache = @cache\nquery = if cache && (cache.active?(\"columns\"))\n  arr = cache.hit(\"columns\", table_name_column.to_sql_value, Clear::Reflection::Column)\n  (Clear::Reflection::Column.query.tags({\"#{__temp_53}\" => \"#{__temp_52}\"})).where do\n    (raw(__temp_53)) == __temp_52\n  end.with_cached_result(arr)\nelse\n  (Clear::Reflection::Column.query.tags({\"#{__temp_53}\" => \"#{__temp_52}\"})).where do\n    (raw(__temp_53)) == __temp_52\n  end\nend\nquery.add_operation = ->(x : Clear::Reflection::Column) do\n  x.reset(query.tags)\n  x.save!\n  x\nend\nquery\n"}},{"id":"indexes:Hash(String,Array(String))-instance-method","html_id":"indexes:Hash(String,Array(String))-instance-method","name":"indexes","doc":"List all the indexes related to the current table.\nreturn an hash where the key is the name of the column\nand the value is an array containing all the indexes related to this specific\nfield.","summary":"<p>List all the indexes related to the current table.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Array(String))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L27","def":{"name":"indexes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Array(String))","visibility":"Public","body":"o = {} of String => Array(String)\n((((SQL.select({index_name: \"i.relname\", column_name: \"a.attname\"})).from({t: \"pg_class\", i: \"pg_class\", ix: \"pg_index\", a: \"pg_attribute\"})).where do\n  (((((t.oid == ix.indrelid) & (i.oid == ix.indexrelid)) & (a.attrelid == t.oid)) & (a.attnum == (raw(\"ANY(ix.indkey)\")))) & (t.relkind == \"r\")) & (t.relname == self.table_name)\nend.order_by(\"t.relname\")).order_by(\"i.relname\")).fetch do |h|\n  col = h[\"column_name\"].to_s\n  v = h[\"index_name\"].to_s\n  arr = o[col]? ? o[col] : (  o[col] = [] of String)\n  arr << v\nend\no\n"}},{"id":"reset(**t:**T)forallT-instance-method","html_id":"reset(**t:**T)forallT-instance-method","name":"reset","doc":"reset flavors","summary":"<p>reset flavors</p>","abstract":false,"args":[],"args_string":"(**t : **T) forall T","source_link":null,"def":{"name":"reset","args":[],"double_splat":{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super()\n{% for name, typ in T %}\n        {% if !(@type.has_method?(\"#{name}=\")) %}\n          {% raise(\"No method #{@type}##{name}= while trying to set value of #{name}\") %}\n        {% end %}\n\n        {% if settings = COLUMNS[\"#{name}\".id] %}\n          @{{ name }}_column.reset_convert(t[:{{ name }}])\n        {% else %}\n          self.{{ name }} = t[:{{ name }}]\n        {% end %}\n      {% end %}\nself\n"}},{"id":"reset(from_json:JSON::Any)-instance-method","html_id":"reset(from_json:JSON::Any)-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"args_string":"(from_json : JSON::Any)","source_link":null,"def":{"name":"reset","args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset(from_json.as_h)"}},{"id":"reset(h:Hash(String,UNDERSCORE))-instance-method","html_id":"reset(h:Hash(String,UNDERSCORE))-instance-method","name":"reset","doc":"Set the model fields from hash","summary":"<p>Set the model fields from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"args_string":"(h : Hash(String, UNDERSCORE))","source_link":null,"def":{"name":"reset","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch({{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.reset_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"reset(h:Hash(Symbol,UNDERSCORE))-instance-method","html_id":"reset(h:Hash(Symbol,UNDERSCORE))-instance-method","name":"reset","doc":"Set the columns from hash","summary":"<p>Set the columns from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"args_string":"(h : Hash(Symbol, UNDERSCORE))","source_link":null,"def":{"name":"reset","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch(:{{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.reset_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"reset(t:NamedTuple)-instance-method","html_id":"reset(t:NamedTuple)-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"args_string":"(t : NamedTuple)","source_link":null,"def":{"name":"reset","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reset(**t)"}},{"id":"set(t:NamedTuple)-instance-method","html_id":"set(t:NamedTuple)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"args_string":"(t : NamedTuple)","source_link":null,"def":{"name":"set","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(**t)"}},{"id":"set(**t:**T)forallT-instance-method","html_id":"set(**t:**T)forallT-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**t : **T) forall T","source_link":null,"def":{"name":"set","args":[],"double_splat":{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super()\n{% for name, typ in T %}\n        {% if !(@type.has_method?(\"#{name}=\")) %}\n          {% raise(\"No method #{@type}##{name}= while trying to set value of #{name}\") %}\n        {% end %}\n\n        {% if settings = COLUMNS[\"#{name}\".id] %}\n          @{{ name }}_column.set_convert(t[:{{ name }}])\n        {% else %}\n          self.{{ name }} = t[:{{ name }}]\n        {% end %}\n      {% end %}\nself\n"}},{"id":"set(from_json:JSON::Any)-instance-method","html_id":"set(from_json:JSON::Any)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"args_string":"(from_json : JSON::Any)","source_link":null,"def":{"name":"set","args":[{"name":"from_json","doc":null,"default_value":"","external_name":"from_json","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(from_json.as_h)"}},{"id":"set(h:Hash(String,UNDERSCORE))-instance-method","html_id":"set(h:Hash(String,UNDERSCORE))-instance-method","name":"set","doc":"Set the model fields from hash","summary":"<p>Set the model fields from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"args_string":"(h : Hash(String, UNDERSCORE))","source_link":null,"def":{"name":"set","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch({{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.set_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"set(h:Hash(Symbol,UNDERSCORE))-instance-method","html_id":"set(h:Hash(Symbol,UNDERSCORE))-instance-method","name":"set","doc":"Set the columns from hash","summary":"<p>Set the columns from hash</p>","abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"args_string":"(h : Hash(Symbol, UNDERSCORE))","source_link":null,"def":{"name":"set","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Hash(Symbol, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(h)\n{% for name, settings in COLUMNS %}\n        v = h.fetch(:{{ settings[:column_name] }}){ Column::UNKNOWN }\n        @{{ name }}_column.set_convert(v) unless v.is_a?(Column::UnknownClass)\n      {% end %}\nself\n"}},{"id":"table_catalog:String-instance-method","html_id":"table_catalog:String-instance-method","name":"table_catalog","doc":"Returns the value of `table_catalog` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Table.html#table_catalog%3AString-instance-method\">#table_catalog</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table_catalog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_catalog_column.value"}},{"id":"table_catalog=(x:String)-instance-method","html_id":"table_catalog=(x:String)-instance-method","name":"table_catalog=","doc":"Setter for `table_catalog` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Table.html#table_catalog%3AString-instance-method\">#table_catalog</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"table_catalog=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_catalog_column.value = x"}},{"id":"table_catalog_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_catalog_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"table_catalog_column","doc":"Returns the column object used to manage `table_catalog` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Table.html#table_catalog%3AString-instance-method\">#table_catalog</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_catalog_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_catalog_column"}},{"id":"table_name:String-instance-method","html_id":"table_name:String-instance-method","name":"table_name","doc":"Returns the value of `table_name` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Table.html#table_name%3AString-instance-method\">#table_name</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_name_column.value"}},{"id":"table_name=(x:String)-instance-method","html_id":"table_name=(x:String)-instance-method","name":"table_name=","doc":"Setter for `table_name` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Table.html#table_name%3AString-instance-method\">#table_name</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"table_name=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_name_column.value = x"}},{"id":"table_name_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_name_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"table_name_column","doc":"Returns the column object used to manage `table_name` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Table.html#table_name%3AString-instance-method\">#table_name</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_name_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_name_column"}},{"id":"table_schema:String-instance-method","html_id":"table_schema:String-instance-method","name":"table_schema","doc":"Returns the value of `table_schema` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Table.html#table_schema%3AString-instance-method\">#table_schema</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_schema_column.value"}},{"id":"table_schema=(x:String)-instance-method","html_id":"table_schema=(x:String)-instance-method","name":"table_schema=","doc":"Setter for `table_schema` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Table.html#table_schema%3AString-instance-method\">#table_schema</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"table_schema=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_schema_column.value = x"}},{"id":"table_schema_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_schema_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"table_schema_column","doc":"Returns the column object used to manage `table_schema` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Table.html#table_schema%3AString-instance-method\">#table_schema</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_schema_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_schema_column"}},{"id":"table_type:String-instance-method","html_id":"table_type:String-instance-method","name":"table_type","doc":"Returns the value of `table_type` column or throw an exception if the column is not defined.","summary":"<p>Returns the value of <code><a href=\"../../Clear/Reflection/Table.html#table_type%3AString-instance-method\">#table_type</a></code> column or throw an exception if the column is not defined.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"table_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@table_type_column.value"}},{"id":"table_type=(x:String)-instance-method","html_id":"table_type=(x:String)-instance-method","name":"table_type=","doc":"Setter for `table_type` column.","summary":"<p>Setter for <code><a href=\"../../Clear/Reflection/Table.html#table_type%3AString-instance-method\">#table_type</a></code> column.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"args_string":"(x : String)","source_link":null,"def":{"name":"table_type=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table_type_column.value = x"}},{"id":"table_type_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","html_id":"table_type_column:Clear::Model::Column(String,Clear::Model::Converter::StringConverter)-instance-method","name":"table_type_column","doc":"Returns the column object used to manage `table_type` field\n\nSee `Clear::Model::Column`","summary":"<p>Returns the column object used to manage <code><a href=\"../../Clear/Reflection/Table.html#table_type%3AString-instance-method\">#table_type</a></code> field</p>","abstract":false,"args":[],"args_string":" : Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","source_link":null,"def":{"name":"table_type_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Model::Column(String, Clear::Model::Converter::StringConverter)","visibility":"Public","body":"@table_type_column"}},{"id":"to_h(full=false):Hash(String,Clear::SQL::Any)-instance-method","html_id":"to_h(full=false):Hash(String,Clear::SQL::Any)-instance-method","name":"to_h","doc":"Return a hash version of the columns of this model.","summary":"<p>Return a hash version of the columns of this model.</p>","abstract":false,"args":[{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"args_string":"(full = <span class=\"n\">false</span>) : Hash(String, Clear::SQL::Any)","source_link":null,"def":{"name":"to_h","args":[{"name":"full","doc":null,"default_value":"false","external_name":"full","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"out = super(full)\nif full || @table_catalog_column.defined?\n  out[\"table_catalog\"] = @table_catalog_column.to_sql_value(nil)\nend\nif full || @table_schema_column.defined?\n  out[\"table_schema\"] = @table_schema_column.to_sql_value(nil)\nend\nif full || @table_name_column.defined?\n  out[\"table_name\"] = @table_name_column.to_sql_value(nil)\nend\nif full || @table_type_column.defined?\n  out[\"table_type\"] = @table_type_column.to_sql_value(nil)\nend\nout\n"}},{"id":"update_h:Hash(String,Clear::SQL::Any)-instance-method","html_id":"update_h:Hash(String,Clear::SQL::Any)-instance-method","name":"update_h","doc":"Generate the hash for update request (like during save)","summary":"<p>Generate the hash for update request (like during save)</p>","abstract":false,"args":[],"args_string":" : Hash(String, Clear::SQL::Any)","source_link":null,"def":{"name":"update_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"o = super()\nif @table_catalog_column.defined? && @table_catalog_column.changed?\n  o[\"table_catalog\"] = @table_catalog_column.to_sql_value\nend\nif @table_schema_column.defined? && @table_schema_column.changed?\n  o[\"table_schema\"] = @table_schema_column.to_sql_value\nend\nif @table_name_column.defined? && @table_name_column.changed?\n  o[\"table_name\"] = @table_name_column.to_sql_value\nend\nif @table_type_column.defined? && @table_type_column.changed?\n  o[\"table_type\"] = @table_type_column.to_sql_value\nend\no\n"}},{"id":"validate_fields_presence-instance-method","html_id":"validate_fields_presence-instance-method","name":"validate_fields_presence","doc":"For each column, ensure than when needed the column has present\ninformation into it.\n\nThis method is called on validation.","summary":"<p>For each column, ensure than when needed the column has present information into it.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"validate_fields_presence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if persisted?\nelse\n  if @table_catalog_column.failed_to_be_present?\n    add_error(\"table_catalog\", \"must be present\")\n  end\nend\nif persisted?\nelse\n  if @table_schema_column.failed_to_be_present?\n    add_error(\"table_schema\", \"must be present\")\n  end\nend\nif persisted?\nelse\n  if @table_name_column.failed_to_be_present?\n    add_error(\"table_name\", \"must be present\")\n  end\nend\nif persisted?\nelse\n  if @table_type_column.failed_to_be_present?\n    add_error(\"table_type\", \"must be present\")\n  end\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Table/Collection","path":"Clear/Reflection/Table/Collection.html","kind":"class","full_name":"Clear::Reflection::Table::Collection","name":"Collection","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/Model/CollectionBase","kind":"class","full_name":"Clear::Model::CollectionBase","name":"CollectionBase"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/CollectionBase","kind":"class","full_name":"Clear::Model::CollectionBase","name":"CollectionBase"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","kind":"module","full_name":"Clear::SQL::Query::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/model/reflection/table.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr"},{"filename":"clear/model/reflection/table.cr","line_number":16,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr"},{"filename":"clear/model/reflection/table.cr","line_number":18,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr"},{"filename":"clear/model/reflection/table.cr","line_number":19,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Reflection/Table","kind":"class","full_name":"Clear::Reflection::Table","name":"Table"},"doc":"Addition of the method for eager loading and N+1 avoidance.","summary":"<p>Addition of the method for eager loading and N+1 avoidance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"public-instance-method","html_id":"public-instance-method","name":"public","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L16","def":{"name":"public","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"where do\n  table_schema == \"public\"\nend\nreturn self\n"}},{"id":"tables_only-instance-method","html_id":"tables_only-instance-method","name":"tables_only","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L18","def":{"name":"tables_only","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"where do\n  table_type == \"BASE TABLE\"\nend\nreturn self\n"}},{"id":"views_only-instance-method","html_id":"views_only-instance-method","name":"views_only","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/reflection/table.cr#L19","def":{"name":"views_only","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"where do\n  table_type == \"VIEW\"\nend\nreturn self\n"}},{"id":"with_columns(fetch_columns=false,&block:Clear::Reflection::Column::Collection->):self-instance-method","html_id":"with_columns(fetch_columns=false,&amp;block:Clear::Reflection::Column::Collection-&gt;):self-instance-method","name":"with_columns","doc":"Eager load the has many relation columns.\nUse it to avoid N+1 queries.","summary":"<p>Eager load the has many relation columns.</p>","abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>, &block : Clear::Reflection::Column::Collection -> ) : <span class=\"k\">self</span>","source_link":null,"def":{"name":"with_columns","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Clear::Reflection::Column::Collection -> )"},"return_type":"self","visibility":"Public","body":"before_query do\n  __temp_52 = table_name\n  __temp_53 = \"table_name\"\n  sub_query = self.dup.clear_select.select(\"#{Clear::Reflection::Table.table}.#{__temp_52}\")\n  qry = Clear::Reflection::Column.query.where do\n    (raw(__temp_53)).in?(sub_query)\n  end\n  block.call(qry)\n  @cache.active(\"columns\")\n  h = {} of Clear::SQL::Any => Array(Clear::Reflection::Column)\n  qry.each(fetch_columns: true) do |mdl|\n    if h[mdl.attributes[__temp_53]]?\n    else\n      h[mdl.attributes[__temp_53]] = [] of Clear::Reflection::Column\n    end\n    h[mdl.attributes[__temp_53]] << mdl\n  end\n  h.each do |key, value|\n    @cache.set(\"columns\", key, value)\n  end\nend\nself\n"}},{"id":"with_columns(fetch_columns=false)-instance-method","html_id":"with_columns(fetch_columns=false)-instance-method","name":"with_columns","doc":null,"summary":null,"abstract":false,"args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"args_string":"(fetch_columns = <span class=\"n\">false</span>)","source_link":null,"def":{"name":"with_columns","args":[{"name":"fetch_columns","doc":null,"default_value":"false","external_name":"fetch_columns","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"with_columns(fetch_columns) do |q|\nend"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL","path":"Clear/SQL.html","kind":"module","full_name":"Clear::SQL","name":"SQL","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Logger","kind":"module","full_name":"Clear::SQL::Logger","name":"Logger"}],"locations":[{"filename":"clear/sql/connection_pool.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/connection_pool.cr"},{"filename":"clear/sql/query/connection.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/connection.cr"},{"filename":"clear/sql/query/from.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/from.cr"},{"filename":"clear/sql/errors.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"},{"filename":"clear/sql/sql.cr","line_number":47,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr"},{"filename":"clear/sql/fragment/fragment.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/fragment.cr"},{"filename":"clear/sql/fragment/column.cr","line_number":9,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr"},{"filename":"clear/sql/fragment/from.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr"},{"filename":"clear/sql/fragment/join.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Logger","kind":"module","full_name":"Clear::SQL::Logger","name":"Logger"}],"extended_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"\n## Clear::SQL\n\nClear is made like an onion:\n\n```text\n+------------------------------------+\n|           THE ORM STACK            +\n+------------------------------------+\n|  Model | DB Views | Migrations     | < High Level Tools\n+---------------+--------------------+\n|  Columns | Validation | Converters | < Mapping system\n+---------------+--------------------+\n|  Clear::SQL   | Clear::Expression  | < Low Level SQL Builder\n+------------------------------------+\n|  Crystal DB   | Crystal PG         | < Low Level connection\n+------------------------------------+\n```\n\nOn the bottom stack, Clear offer SQL query building.\nTheses features are then used by top level parts of the engine.\n\nThe SQL module provide a simple API to generate `delete`, `insert`, `select`\nand `update` methods.\n\nEach requests can be duplicated then modified and executed.\n\nNote: Each request object is mutable. Therefore, to update and store a request,\nyou must use manually the `dup` method.\n","summary":"<p>## Clear::SQL</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_connection(name:String,url:String,connection_pool_size=5)-instance-method","html_id":"add_connection(name:String,url:String,connection_pool_size=5)-instance-method","name":"add_connection","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"args_string":"(name : String, url : String, connection_pool_size = <span class=\"n\">5</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L94","def":{"name":"add_connection","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::ConnectionPool.init(url, name, connection_pool_size)"}},{"id":"delete(connection:Symbolic,table=nil)-instance-method","html_id":"delete(connection:Symbolic,table=nil)-instance-method","name":"delete","doc":"Start a DELETE table query on specific connection","summary":"<p>Start a DELETE table query on specific connection</p>","abstract":false,"args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"Symbolic"},{"name":"table","doc":null,"default_value":"nil","external_name":"table","restriction":""}],"args_string":"(connection : Symbolic, table = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L198","def":{"name":"delete","args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"Symbolic"},{"name":"table","doc":null,"default_value":"nil","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Clear::SQL::DeleteQuery.new(connection)).from(table)"}},{"id":"delete(table=nil)-instance-method","html_id":"delete(table=nil)-instance-method","name":"delete","doc":"Start a DELETE table query","summary":"<p>Start a DELETE table query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"nil","external_name":"table","restriction":""}],"args_string":"(table = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L193","def":{"name":"delete","args":[{"name":"table","doc":null,"default_value":"nil","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Clear::SQL::DeleteQuery.new(\"default\")).from(table)"}},{"id":"escape(x:String|Symbol)-instance-method","html_id":"escape(x:String|Symbol)-instance-method","name":"escape","doc":"Escape the expression, double quoting it.\n\nIt allows use of reserved keywords as table or column name","summary":"<p>Escape the expression, double quoting it.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String | Symbol"}],"args_string":"(x : String | Symbol)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L71","def":{"name":"escape","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(\"\\\"\" + (x.to_s.gsub(\"\\\"\", \"\\\"\\\"\"))) + \"\\\"\""}},{"id":"execute(connection_name:String,sql)-instance-method","html_id":"execute(connection_name:String,sql)-instance-method","name":"execute","doc":"Execute a SQL statement on a specific connection.\n\nUsage:\nClear::SQL.execute(\"seconddatabase\", \"SELECT 1 FROM users\")","summary":"<p>Execute a SQL statement on a specific connection.</p>","abstract":false,"args":[{"name":"connection_name","doc":null,"default_value":"","external_name":"connection_name","restriction":"String"},{"name":"sql","doc":null,"default_value":"","external_name":"sql","restriction":""}],"args_string":"(connection_name : String, sql)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L181","def":{"name":"execute","args":[{"name":"connection_name","doc":null,"default_value":"","external_name":"connection_name","restriction":"String"},{"name":"sql","doc":null,"default_value":"","external_name":"sql","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log_query(sql) do\n  Clear::SQL::ConnectionPool.with_connection(connection_name, &.exec(sql))\nend"}},{"id":"execute(sql)-instance-method","html_id":"execute(sql)-instance-method","name":"execute","doc":"Execute a SQL statement.\n\nUsage:\nClear::SQL.execute(\"SELECT 1 FROM users\")\n","summary":"<p>Execute a SQL statement.</p>","abstract":false,"args":[{"name":"sql","doc":null,"default_value":"","external_name":"sql","restriction":""}],"args_string":"(sql)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L173","def":{"name":"execute","args":[{"name":"sql","doc":null,"default_value":"","external_name":"sql","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log_query(sql) do\n  Clear::SQL::ConnectionPool.with_connection(\"default\", &.exec(sql))\nend"}},{"id":"init(name:String,url:String,connection_pool_size=5)-instance-method","html_id":"init(name:String,url:String,connection_pool_size=5)-instance-method","name":"init","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"args_string":"(name : String, url : String, connection_pool_size = <span class=\"n\">5</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L83","def":{"name":"init","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::ConnectionPool.init(url, name, connection_pool_size)"}},{"id":"init(url:String,connection_pool_size=5)-instance-method","html_id":"init(url:String,connection_pool_size=5)-instance-method","name":"init","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"args_string":"(url : String, connection_pool_size = <span class=\"n\">5</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L79","def":{"name":"init","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::ConnectionPool.init(url, \"default\", connection_pool_size)"}},{"id":"init(connections:Hash(Symbolic,String),connection_pool_size=5)-instance-method","html_id":"init(connections:Hash(Symbolic,String),connection_pool_size=5)-instance-method","name":"init","doc":null,"summary":null,"abstract":false,"args":[{"name":"connections","doc":null,"default_value":"","external_name":"connections","restriction":"Hash(Symbolic, String)"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"args_string":"(connections : Hash(Symbolic, String), connection_pool_size = <span class=\"n\">5</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L88","def":{"name":"init","args":[{"name":"connections","doc":null,"default_value":"","external_name":"connections","restriction":"Hash(Symbolic, String)"},{"name":"connection_pool_size","doc":null,"default_value":"5","external_name":"connection_pool_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"connections.each do |name, url|\n  Clear::SQL::ConnectionPool.init(url, name, connection_pool_size)\nend"}},{"id":"insert-instance-method","html_id":"insert-instance-method","name":"insert","doc":"Create a new INSERT query","summary":"<p>Create a new INSERT query</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L217","def":{"name":"insert","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::InsertQuery.new"}},{"id":"insert(table,*args)-instance-method","html_id":"insert(table,*args)-instance-method","name":"insert","doc":"Alias of `insert_into`, for hurry developers","summary":"<p>Alias of <code><a href=\"../Clear/SQL.html#insert_into%28table%2C%2Aargs%29-instance-method\">#insert_into</a></code>, for hurry developers</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(table, *args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L222","def":{"name":"insert","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"insert_into(table, *args)"}},{"id":"insert(table,args:NamedTuple)-instance-method","html_id":"insert(table,args:NamedTuple)-instance-method","name":"insert","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"NamedTuple"}],"args_string":"(table, args : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L226","def":{"name":"insert","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"insert_into(table, args)"}},{"id":"insert_into(table,*args)-instance-method","html_id":"insert_into(table,*args)-instance-method","name":"insert_into","doc":"Start an INSERT INTO table query\n\n```\nClear::SQL.insert_into(\"table\", id: 1, name: \"hello\")\n```","summary":"<p>Start an INSERT INTO table query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(table, *args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L212","def":{"name":"insert_into","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Clear::SQL::InsertQuery.new(table)).values(*args)"}},{"id":"insert_into(table)-instance-method","html_id":"insert_into(table)-instance-method","name":"insert_into","doc":"Start an INSERT INTO table query","summary":"<p>Start an INSERT INTO table query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"args_string":"(table)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L203","def":{"name":"insert_into","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::InsertQuery.new(table)"}},{"id":"rollback-instance-method","html_id":"rollback-instance-method","name":"rollback","doc":"Raise a rollback, in case of transaction","summary":"<p>Raise a rollback, in case of transaction</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L164","def":{"name":"rollback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(RollbackError.new)"}},{"id":"sanitize(x:String,delimiter=&quot;&#39;&#39;&quot;)-instance-method","html_id":"sanitize(x:String,delimiter=&amp;quot;&amp;#39;&amp;#39;&amp;quot;)-instance-method","name":"sanitize","doc":"Sanitize","summary":"<p>Sanitize</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"},{"name":"delimiter","doc":null,"default_value":"\"''\"","external_name":"delimiter","restriction":""}],"args_string":"(x : String, delimiter = <span class=\"s\">&quot;&#39;&#39;&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L64","def":{"name":"sanitize","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"String"},{"name":"delimiter","doc":null,"default_value":"\"''\"","external_name":"delimiter","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Expression[x]"}},{"id":"select(*args)-instance-method","html_id":"select(*args)-instance-method","name":"select","doc":"Start a SELECT FROM table query","summary":"<p>Start a SELECT FROM table query</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L236","def":{"name":"select","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if args.size > 0\n  Clear::SQL::SelectQuery.new.select(*args)\nelse\n  Clear::SQL::SelectQuery.new\nend"}},{"id":"transaction(connection=&quot;default&quot;,&block)-instance-method","html_id":"transaction(connection=&amp;quot;default&amp;quot;,&amp;block)-instance-method","name":"transaction","doc":"Create an unstackable transaction\n\nExample:\n```\nClear::SQL.transaction do\n  # do something\n  Clear::SQL.transaction do # Technically, this block do nothing, since we already are in transaction\n    rollback                # < Rollback the up-most `transaction` block.\n  end\nend\n```\nsee #with_savepoint to use a stackable version using savepoints.\n","summary":"<p>Create an unstackable transaction</p>","abstract":false,"args":[{"name":"connection","doc":null,"default_value":"\"default\"","external_name":"connection","restriction":""}],"args_string":"(connection = <span class=\"s\">&quot;default&quot;</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L113","def":{"name":"transaction","args":[{"name":"connection","doc":null,"default_value":"\"default\"","external_name":"connection","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::ConnectionPool.with_connection(connection) do |cnx|\n  has_rollback = false\n  if cnx._clear_in_transaction?\n    return yield cnx\n  else\n    cnx._clear_in_transaction=(true)\n    execute(\"BEGIN\")\n    begin\n      return yield cnx\n    rescue e\n      has_rollback = true\n      is_rollback_error = e.is_a?(RollbackError) || e.is_a?(CancelTransactionError)\n      begin\n        execute(\"ROLLBACK --\" + (is_rollback_error ? \"normal\" : \"program error\"))\n      rescue\n        nil\n      end\n      if is_rollback_error\n      else\n        raise(e)\n      end\n    ensure\n      cnx._clear_in_transaction=(false)\n      if has_rollback\n      else\n        execute(\"COMMIT\")\n      end\n    end\n  end\nend"}},{"id":"unsafe(x)-instance-method","html_id":"unsafe(x)-instance-method","name":"unsafe","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L75","def":{"name":"unsafe","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::Expression::UnsafeSql.new(x)"}},{"id":"update(table)-instance-method","html_id":"update(table)-instance-method","name":"update","doc":"Start a UPDATE table query","summary":"<p>Start a UPDATE table query</p>","abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"args_string":"(table)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L231","def":{"name":"update","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL::UpdateQuery.new(table)"}},{"id":"with_savepoint(connection_name=&quot;default&quot;,&block)-instance-method","html_id":"with_savepoint(connection_name=&amp;quot;default&amp;quot;,&amp;block)-instance-method","name":"with_savepoint","doc":"Create a transaction, but this one is stackable\nusing savepoints.\n\nExample:\n```\nClear::SQL.with_savepoint do\n  # do something\n  Clear::SQL.with_savepoint do\n    rollback # < Rollback only the last `with_savepoint` block\n  end\nend\n```","summary":"<p>Create a transaction, but this one is stackable using savepoints.</p>","abstract":false,"args":[{"name":"connection_name","doc":null,"default_value":"\"default\"","external_name":"connection_name","restriction":""}],"args_string":"(connection_name = <span class=\"s\">&quot;default&quot;</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr#L150","def":{"name":"with_savepoint","args":[{"name":"connection_name","doc":null,"default_value":"\"default\"","external_name":"connection_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"transaction do |cnx|\n  sp_name = \"sp_#{@@savepoint_uid = @@savepoint_uid + 1}\"\n  begin\n    execute(connection_name, \"SAVEPOINT #{sp_name}\")\n    yield\n    if cnx._clear_in_transaction?\n      execute(connection_name, \"RELEASE SAVEPOINT #{sp_name}\")\n    end\n  rescue e : RollbackError\n    if cnx._clear_in_transaction?\n      execute(connection_name, \"ROLLBACK TO SAVEPOINT #{sp_name}\")\n    end\n  end\nend"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Any","path":"Clear/SQL/Any.html","kind":"alias","full_name":"Clear::SQL::Any","name":"Any","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/sql.cr","line_number":48,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Array(JSON::Any) | Array(PG::BoolArray) | Array(PG::CharArray) | Array(PG::Float32Array) | Array(PG::Float64Array) | Array(PG::Int16Array) | Array(PG::Int32Array) | Array(PG::Int64Array) | Array(PG::StringArray) | Bool | Char | Clear::Expression::UnsafeSql | Float32 | Float64 | Hash(String, JSON::Any) | Int16 | Int32 | Int64 | Int8 | JSON::Any | PG::Geo::Box | PG::Geo::Circle | PG::Geo::Line | PG::Geo::LineSegment | PG::Geo::Path | PG::Geo::Point | PG::Geo::Polygon | PG::Numeric | Slice(UInt8) | String | Time | UInt16 | UInt32 | UInt64 | UInt8 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/CancelTransactionError","path":"Clear/SQL/CancelTransactionError.html","kind":"class","full_name":"Clear::SQL::CancelTransactionError","name":"CancelTransactionError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":16,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":"Like rollback, but used into savepoint, it will revert completely the transaction","summary":"<p>Like rollback, but used into savepoint, it will revert completely the transaction</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Column","path":"Clear/SQL/Column.html","kind":"struct","full_name":"Clear::SQL::Column","name":"Column","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/fragment/column.cr","line_number":10,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value,var=nil)-class-method","html_id":"new(value,var=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"var","doc":null,"default_value":"nil","external_name":"var","restriction":""}],"args_string":"(value, var = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr#L14","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"var","doc":null,"default_value":"nil","external_name":"var","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, var)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr#L17","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = value\ncase v\nwhen String\n  [v, @var].compact.join(\" AS \")\nwhen Symbol\n  [SQL.escape(v.to_s), @var].compact.join(\" AS \")\nwhen SQL::SelectBuilder\n  [\"( #{v.to_sql} )\", @var].compact.join(\" AS \")\nelse\n  raise(QueryBuildingError.new(\"Only String and SelectQuery are allowed as column declaration\"))\nend\n"}},{"id":"value:Selectable-instance-method","html_id":"value:Selectable-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Selectable","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr#L13","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Selectable","visibility":"Public","body":"@value"}},{"id":"value=(value:Selectable)-instance-method","html_id":"value=(value:Selectable)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Selectable"}],"args_string":"(value : Selectable)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr#L17","def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Selectable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = value"}},{"id":"var:Symbolic?-instance-method","html_id":"var:Symbolic?-instance-method","name":"var","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbolic?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr#L14","def":{"name":"var","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbolic | ::Nil","visibility":"Public","body":"@var"}},{"id":"var=(var:Symbolic?)-instance-method","html_id":"var=(var:Symbolic?)-instance-method","name":"var=","doc":null,"summary":null,"abstract":false,"args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":"Symbolic | ::Nil"}],"args_string":"(var : Symbolic?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/column.cr#L18","def":{"name":"var=","args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":"Symbolic | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@var = var"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/ConnectionPool","path":"Clear/SQL/ConnectionPool.html","kind":"class","full_name":"Clear::SQL::ConnectionPool","name":"ConnectionPool","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/connection_pool.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/connection_pool.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[{"id":"init(uri,name,pool_size)-class-method","html_id":"init(uri,name,pool_size)-class-method","name":"init","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"pool_size","doc":null,"default_value":"","external_name":"pool_size","restriction":""}],"args_string":"(uri, name, pool_size)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/connection_pool.cr#L6","def":{"name":"init","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"pool_size","doc":null,"default_value":"","external_name":"pool_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if pool_size > 0\nelse\n  raise(\"Connection pool size must be position\")\nend\nchannel = @@connections[name] = Channel(DB::Database).new(capacity: pool_size)\npool_size.times do\n  channel.send(DB.open(uri))\nend\n"}},{"id":"with_connection(target:String,&block)-class-method","html_id":"with_connection(target:String,&amp;block)-class-method","name":"with_connection","doc":"Retrieve a connection from the connection pool, or wait for it.\nIf the current Fiber already has a connection, the connection is returned;\n  this strategy provides easy usage of multiple statement connection (like BEGIN/ROLLBACK features).","summary":"<p>Retrieve a connection from the connection pool, or wait for it.</p>","abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"args_string":"(target : String, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/connection_pool.cr#L15","def":{"name":"with_connection","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"fiber_target = {target, Fiber.current}\nchannel = @@connections.fetch(target) do\n  raise(Clear::ErrorMessages.uninitialized_db_connection(target))\nend\ndb, call_count = @@fiber_connections.fetch(fiber_target) do\n  {channel.receive, 0}\nend\nbegin\n  @@fiber_connections[fiber_target] = {db, call_count + 1}\n  yield db\nensure\n  db, call_count = @@fiber_connections[fiber_target]\n  if call_count == 1\n    @@fiber_connections.delete(fiber_target)\n    channel.send(db)\n  else\n    @@fiber_connections[fiber_target] = {db, call_count - 1}\n  end\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/DeleteQuery","path":"Clear/SQL/DeleteQuery.html","kind":"class","full_name":"Clear::SQL::DeleteQuery","name":"DeleteQuery","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/delete_query.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/delete_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from=nil,wheres=[]ofClear::Expression::Node)-class-method","html_id":"new(from=nil,wheres=[]ofClear::Expression::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"nil","external_name":"from","restriction":""},{"name":"wheres","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"wheres","restriction":""}],"args_string":"(from = <span class=\"n\">nil</span>, wheres = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Clear</span><span class=\"t\">::</span><span class=\"t\">Expression</span><span class=\"t\">::</span><span class=\"t\">Node</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/delete_query.cr#L11","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"nil","external_name":"from","restriction":""},{"name":"wheres","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"wheres","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, wheres)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"from(x)-instance-method","html_id":"from(x)-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/delete_query.cr#L15","def":{"name":"from","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from = x\nchange!\n"}},{"id":"from:Symbolic?-instance-method","html_id":"from:Symbolic?-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbolic?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/delete_query.cr#L6","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbolic | ::Nil","visibility":"Public","body":"@from"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/delete_query.cr#L20","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if from = @from\nelse\n  raise(Clear::ErrorMessages.query_building_error(\"Delete Query must have a `from` clause.\"))\nend\nfrom = from.is_a?(Symbol) ? SQL.escape(from.to_s) : from\n[\"DELETE FROM\", from, print_wheres].compact.join(\" \")\n"}},{"id":"wheres:Array(Clear::Expression::Node)-instance-method","html_id":"wheres:Array(Clear::Expression::Node)-instance-method","name":"wheres","doc":"Return the list of where clause; each where clause are transformed into\nClear::Expression::Node","summary":"<p>Return the list of where clause; each where clause are transformed into Clear::Expression::Node</p>","abstract":false,"args":[],"args_string":" : Array(Clear::Expression::Node)","source_link":null,"def":{"name":"wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Clear::Expression::Node)","visibility":"Public","body":"@wheres"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","path":"Clear/SQL/Error.html","kind":"class","full_name":"Clear::SQL::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/CancelTransactionError","kind":"class","full_name":"Clear::SQL::CancelTransactionError","name":"CancelTransactionError"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/ExecutionError","kind":"class","full_name":"Clear::SQL::ExecutionError","name":"ExecutionError"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/OperationNotPermittedError","kind":"class","full_name":"Clear::SQL::OperationNotPermittedError","name":"OperationNotPermittedError"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/QueryBuildingError","kind":"class","full_name":"Clear::SQL::QueryBuildingError","name":"QueryBuildingError"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/RecordNotFoundError","kind":"class","full_name":"Clear::SQL::RecordNotFoundError","name":"RecordNotFoundError"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/RollbackError","kind":"class","full_name":"Clear::SQL::RollbackError","name":"RollbackError"}],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/ExecutionError","path":"Clear/SQL/ExecutionError.html","kind":"class","full_name":"Clear::SQL::ExecutionError","name":"ExecutionError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","path":"Clear/SQL/Fragment.html","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment","abstract":true,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/fragment/fragment.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/fragment.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Column","kind":"struct","full_name":"Clear::SQL::Column","name":"Column"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/From","kind":"struct","full_name":"Clear::SQL::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Join","kind":"struct","full_name":"Clear::SQL::Join","name":"Join"}],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/fragment.cr#L2","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/fragment.cr#L3","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/From","path":"Clear/SQL/From.html","kind":"struct","full_name":"Clear::SQL::From","name":"From","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/fragment/from.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value,var=nil)-class-method","html_id":"new(value,var=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"var","doc":null,"default_value":"nil","external_name":"var","restriction":""}],"args_string":"(value, var = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr#L8","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"var","doc":null,"default_value":"nil","external_name":"var","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, var)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr#L11","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = value\ncase v\nwhen Symbol\n  [Clear::SQL.escape(v), @var].compact.join(\" AS \")\nwhen String\n  [v, @var].compact.join(\" AS \")\nwhen SQL::SelectBuilder\n  if @var.nil?\n    raise(Clear::ErrorMessages.query_building_error(\"Subquery `from` clause must have variable name\"))\n  end\n  [\"( #{v.to_sql} )\", @var].compact.join(\" \")\nelse\n  raise(Clear::ErrorMessages.query_building_error(\"Only String and SelectQuery objects are allowed as `from` declaration\"))\nend\n"}},{"id":"value:Selectable-instance-method","html_id":"value:Selectable-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Selectable","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr#L7","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Selectable","visibility":"Public","body":"@value"}},{"id":"value=(value:Selectable)-instance-method","html_id":"value=(value:Selectable)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Selectable"}],"args_string":"(value : Selectable)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr#L11","def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Selectable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = value"}},{"id":"var:Symbolic?-instance-method","html_id":"var:Symbolic?-instance-method","name":"var","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbolic?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr#L8","def":{"name":"var","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbolic | ::Nil","visibility":"Public","body":"@var"}},{"id":"var=(var:Symbolic?)-instance-method","html_id":"var=(var:Symbolic?)-instance-method","name":"var=","doc":null,"summary":null,"abstract":false,"args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":"Symbolic | ::Nil"}],"args_string":"(var : Symbolic?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/from.cr#L12","def":{"name":"var=","args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":"Symbolic | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@var = var"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery","path":"Clear/SQL/InsertQuery.html","kind":"class","full_name":"Clear::SQL::InsertQuery","name":"InsertQuery","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OnConflict","kind":"module","full_name":"Clear::SQL::Query::OnConflict","name":"OnConflict"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/insert_query.cr","line_number":21,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OnConflict","kind":"module","full_name":"Clear::SQL::Query::OnConflict","name":"OnConflict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":"\nAn insert query\n\ncf. postgres documentation\n```\n[ WITH [ RECURSIVE ] with_query [, ...] ]\nINSERT INTO table_name [ AS alias ] [ ( column_name [, ...] ) ]\n   { DEFAULT VALUES | VALUES ( { expression | DEFAULT } [, ...] ) [, ...] | query }\n   [ ON CONFLICT [ conflict_target ] conflict_action ]\n   [ RETURNING * | output_expression [ [ AS ] output_name ] [, ...] ]\n```\n\n\n\n","summary":"<p>An insert query</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol|String,values)-class-method","html_id":"new(table:Symbol|String,values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol | String"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(table : Symbol | String, values)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L36","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol | String"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(table:Symbol|String)-class-method","html_id":"new(table:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol | String"}],"args_string":"(table : Symbol | String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L33","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clear_values-instance-method","html_id":"clear_values-instance-method","name":"clear_values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L88","def":{"name":"clear_values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values = [] of Array(Inserable)\nchange!\n"}},{"id":"columns(*args)-instance-method","html_id":"columns(*args)-instance-method","name":"columns","doc":"Used with values","summary":"<p>Used with values</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L140","def":{"name":"columns","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keys = args\nchange!\n"}},{"id":"execute(connection_name:String=&quot;default&quot;):Hash(String,Clear::SQL::Any)-instance-method","html_id":"execute(connection_name:String=&amp;quot;default&amp;quot;):Hash(String,Clear::SQL::Any)-instance-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection_name","doc":null,"default_value":"\"default\"","external_name":"connection_name","restriction":"String"}],"args_string":"(connection_name : String = <span class=\"s\">&quot;default&quot;</span>) : Hash(String, Clear::SQL::Any)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L74","def":{"name":"execute","args":[{"name":"connection_name","doc":null,"default_value":"\"default\"","external_name":"connection_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ::Clear::SQL::Any)","visibility":"Public","body":"o = {} of String => ::Clear::SQL::Any\nif @returning.nil?\n  s = to_sql\n  Clear::SQL.execute(connection_name, s)\nelse\n  fetch(connection_name) do |x|\n    o = x\n  end\nend\no\n"}},{"id":"fetch(connection_name:String=&quot;default&quot;,&block:Hash(String,Clear::SQL::Any)->Void)-instance-method","html_id":"fetch(connection_name:String=&amp;quot;default&amp;quot;,&amp;block:Hash(String,Clear::SQL::Any)-&gt;Void)-instance-method","name":"fetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection_name","doc":null,"default_value":"\"default\"","external_name":"connection_name","restriction":"String"}],"args_string":"(connection_name : String = <span class=\"s\">&quot;default&quot;</span>, &block : Hash(String, Clear::SQL::Any) -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L43","def":{"name":"fetch","args":[{"name":"connection_name","doc":null,"default_value":"\"default\"","external_name":"connection_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Hash(String, ::Clear::SQL::Any) -> Void)"},"return_type":"","visibility":"Public","body":"Clear::SQL.log_query(to_sql) do\n  h = {} of String => ::Clear::SQL::Any\n  Clear::SQL::ConnectionPool.with_connection(connection_name) do |cnx|\n    cnx.query(to_sql) do |rs|\n      fetch_result_set(h, rs) do |x|\n        yield x\n      end\n    end\n  end\nend"}},{"id":"into(table:Symbol|String)-instance-method","html_id":"into(table:Symbol|String)-instance-method","name":"into","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol | String"}],"args_string":"(table : Symbol | String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L40","def":{"name":"into","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table = table"}},{"id":"keys:Array(Symbolic)-instance-method","html_id":"keys:Array(Symbolic)-instance-method","name":"keys","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Symbolic)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L30","def":{"name":"keys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Symbolic)","visibility":"Public","body":"@keys"}},{"id":"returning:String?-instance-method","html_id":"returning:String?-instance-method","name":"returning","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L33","def":{"name":"returning","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@returning"}},{"id":"returning(str:String)-instance-method","html_id":"returning(str:String)-instance-method","name":"returning","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L163","def":{"name":"returning","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@returning = str\nchange!\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Number of rows of this insertion request","summary":"<p>Number of rows of this insertion request</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L170","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"v = @values\nv.is_a?(Array) ? v.size : -1\n"}},{"id":"table-instance-method","html_id":"table-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L38","def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table.not_nil!"}},{"id":"table?:String|Symbol|Nil-instance-method","html_id":"table?:String|Symbol|Nil-instance-method","name":"table?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Symbol | Nil","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L34","def":{"name":"table?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L188","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if table = @table\nelse\n  raise(QueryBuildingError.new(\"You must provide a `into` clause\"))\nend\ntable = Clear::SQL.escape(table.to_s)\no = [print_ctes, \"INSERT INTO\", table, print_keys]\nv = @values\ncase v\nwhen SelectBuilder\n  o << ((\"(\" + v.to_sql) + \")\")\nelse\n  if v.empty? || ((v.size == 1) && v[0].empty?)\n    o << \"DEFAULT VALUES\"\n  else\n    o << \"VALUES\"\n    o << print_values\n  end\nend\nprint_on_conflict(o)\nif @returning\n  o << \"RETURNING\"\n  o << @returning\nend\no.compact.join(\" \")\n"}},{"id":"values(*args)-instance-method","html_id":"values(*args)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L146","def":{"name":"values","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values << args\nchange!\n"}},{"id":"values:SelectBuilder|Array(Array(Inserable))-instance-method","html_id":"values:SelectBuilder|Array(Array(Inserable))-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SelectBuilder | Array(Array(Inserable))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L31","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SelectBuilder | Array(Array(Inserable))","visibility":"Public","body":"@values"}},{"id":"values(select_query:SelectBuilder)-instance-method","html_id":"values(select_query:SelectBuilder)-instance-method","name":"values","doc":"Insert into ... (...) SELECT","summary":"<p>Insert into ...</p>","abstract":false,"args":[{"name":"select_query","doc":null,"default_value":"","external_name":"select_query","restriction":"SelectBuilder"}],"args_string":"(select_query : SelectBuilder)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L153","def":{"name":"values","args":[{"name":"select_query","doc":null,"default_value":"","external_name":"select_query","restriction":"SelectBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @values.is_a?(Array) && (@values.as(Array)).any?\n  raise(QueryBuildingError.new(\"Cannot insert both from SELECT and from data\"))\nend\n@values = select_query\nchange!\n"}},{"id":"values(rows:Array(Hash(Symbolic,Inserable)))-instance-method","html_id":"values(rows:Array(Hash(Symbolic,Inserable)))-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Array(Hash(Symbolic, Inserable))"}],"args_string":"(rows : Array(Hash(Symbolic, Inserable)))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L131","def":{"name":"values","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Array(Hash(Symbolic, Inserable))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rows.each do |nt|\n  values(nt)\nend\nchange!\n"}},{"id":"values(rows:Array(NamedTuple))-instance-method","html_id":"values(rows:Array(NamedTuple))-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Array(NamedTuple)"}],"args_string":"(rows : Array(NamedTuple))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L123","def":{"name":"values","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Array(NamedTuple)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rows.each do |nt|\n  values(nt)\nend\nchange!\n"}},{"id":"values(row:Hash(Symbolic,Inserable))-instance-method","html_id":"values(row:Hash(Symbolic,Inserable))-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Hash(Symbolic, Inserable)"}],"args_string":"(row : Hash(Symbolic, Inserable))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L110","def":{"name":"values","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Hash(Symbolic, Inserable)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keys = row.keys.to_a.map do |__arg2|\n  __arg2.as(Symbolic)\nend\ncase v = @values\nwhen SelectBuilder\n  raise(\"Cannot insert both from SELECT query and from data\")\nwhen Array(Array(Inserable))\n  v << row.values.to_a.map do |__arg3|\n    __arg3.as(Inserable)\n  end\nend\nchange!\n"}},{"id":"values(row:NamedTuple)-instance-method","html_id":"values(row:NamedTuple)-instance-method","name":"values","doc":"Fast insert system\n\ninsert({field: \"value\"}).into(:table)\n","summary":"<p>Fast insert system</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"NamedTuple"}],"args_string":"(row : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr#L97","def":{"name":"values","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keys = row.keys.to_a.map do |__arg0|\n  __arg0.as(Symbolic)\nend\ncase v = @values\nwhen SelectBuilder\n  raise(\"Cannot insert both from SELECT query and from data\")\nwhen Array(Array(Inserable))\n  v << row.values.to_a.map do |__arg1|\n    __arg1.as(Inserable)\n  end\nend\nchange!\n"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery/Inserable","path":"Clear/SQL/InsertQuery/Inserable.html","kind":"alias","full_name":"Clear::SQL::InsertQuery::Inserable","name":"Inserable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/insert_query.cr","line_number":27,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/insert_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Array(JSON::Any) | Array(PG::BoolArray) | Array(PG::CharArray) | Array(PG::Float32Array) | Array(PG::Float64Array) | Array(PG::Int16Array) | Array(PG::Int32Array) | Array(PG::Int64Array) | Array(PG::StringArray) | BigFloat | BigInt | Bool | Char | Clear::Expression::UnsafeSql | Float32 | Float64 | Hash(String, JSON::Any) | Int16 | Int32 | Int64 | Int8 | JSON::Any | PG::Geo::Box | PG::Geo::Circle | PG::Geo::Line | PG::Geo::LineSegment | PG::Geo::Path | PG::Geo::Point | PG::Geo::Polygon | PG::Numeric | Slice(UInt8) | String | Time | UInt16 | UInt32 | UInt64 | UInt8 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery","kind":"class","full_name":"Clear::SQL::InsertQuery","name":"InsertQuery"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Interval","path":"Clear/SQL/Interval.html","kind":"struct","full_name":"Clear::SQL::Interval","name":"Interval","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/interval/interval.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":"Represents the \"interval\" object of PostgreSQL","summary":"<p>Represents the \"interval\" object of PostgreSQL</p>","class_methods":[{"id":"decode(x:Slice(UInt8))-class-method","html_id":"decode(x:Slice(UInt8))-class-method","name":"decode","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Slice(UInt8)"}],"args_string":"(x : Slice(UInt8))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L45","def":{"name":"decode","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Slice(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new(x, writeable: false)\nClear::SQL::Interval.new(io)\n"}}],"constructors":[{"id":"new(io:IO)-class-method","html_id":"new(io:IO)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L39","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(years=0,months=0,weeks=0,days=0,hours=0,minutes=0,seconds=0,milliseconds=0,microseconds=0)-class-method","html_id":"new(years=0,months=0,weeks=0,days=0,hours=0,minutes=0,seconds=0,milliseconds=0,microseconds=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"years","doc":null,"default_value":"0","external_name":"years","restriction":""},{"name":"months","doc":null,"default_value":"0","external_name":"months","restriction":""},{"name":"weeks","doc":null,"default_value":"0","external_name":"weeks","restriction":""},{"name":"days","doc":null,"default_value":"0","external_name":"days","restriction":""},{"name":"hours","doc":null,"default_value":"0","external_name":"hours","restriction":""},{"name":"minutes","doc":null,"default_value":"0","external_name":"minutes","restriction":""},{"name":"seconds","doc":null,"default_value":"0","external_name":"seconds","restriction":""},{"name":"milliseconds","doc":null,"default_value":"0","external_name":"milliseconds","restriction":""},{"name":"microseconds","doc":null,"default_value":"0","external_name":"microseconds","restriction":""}],"args_string":"(years = <span class=\"n\">0</span>, months = <span class=\"n\">0</span>, weeks = <span class=\"n\">0</span>, days = <span class=\"n\">0</span>, hours = <span class=\"n\">0</span>, minutes = <span class=\"n\">0</span>, seconds = <span class=\"n\">0</span>, milliseconds = <span class=\"n\">0</span>, microseconds = <span class=\"n\">0</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L7","def":{"name":"new","args":[{"name":"years","doc":null,"default_value":"0","external_name":"years","restriction":""},{"name":"months","doc":null,"default_value":"0","external_name":"months","restriction":""},{"name":"weeks","doc":null,"default_value":"0","external_name":"weeks","restriction":""},{"name":"days","doc":null,"default_value":"0","external_name":"days","restriction":""},{"name":"hours","doc":null,"default_value":"0","external_name":"hours","restriction":""},{"name":"minutes","doc":null,"default_value":"0","external_name":"minutes","restriction":""},{"name":"seconds","doc":null,"default_value":"0","external_name":"seconds","restriction":""},{"name":"milliseconds","doc":null,"default_value":"0","external_name":"milliseconds","restriction":""},{"name":"microseconds","doc":null,"default_value":"0","external_name":"microseconds","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"days:Int32-instance-method","html_id":"days:Int32-instance-method","name":"days","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L6","def":{"name":"days","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@days"}},{"id":"days=(days:Int32)-instance-method","html_id":"days=(days:Int32)-instance-method","name":"days=","doc":null,"summary":null,"abstract":false,"args":[{"name":"days","doc":null,"default_value":"","external_name":"days","restriction":"Int32"}],"args_string":"(days : Int32)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L10","def":{"name":"days=","args":[{"name":"days","doc":null,"default_value":"","external_name":"days","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@days = days"}},{"id":"microseconds:Int64-instance-method","html_id":"microseconds:Int64-instance-method","name":"microseconds","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L5","def":{"name":"microseconds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@microseconds"}},{"id":"microseconds=(microseconds:Int64)-instance-method","html_id":"microseconds=(microseconds:Int64)-instance-method","name":"microseconds=","doc":null,"summary":null,"abstract":false,"args":[{"name":"microseconds","doc":null,"default_value":"","external_name":"microseconds","restriction":"Int64"}],"args_string":"(microseconds : Int64)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L9","def":{"name":"microseconds=","args":[{"name":"microseconds","doc":null,"default_value":"","external_name":"microseconds","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@microseconds = microseconds"}},{"id":"months:Int32-instance-method","html_id":"months:Int32-instance-method","name":"months","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L7","def":{"name":"months","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@months"}},{"id":"months=(months:Int32)-instance-method","html_id":"months=(months:Int32)-instance-method","name":"months=","doc":null,"summary":null,"abstract":false,"args":[{"name":"months","doc":null,"default_value":"","external_name":"months","restriction":"Int32"}],"args_string":"(months : Int32)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L11","def":{"name":"months=","args":[{"name":"months","doc":null,"default_value":"","external_name":"months","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@months = months"}},{"id":"to_db-instance-method","html_id":"to_db-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L29","def":{"name":"to_db","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o = [] of String\nif @months != 0\n(  (o << @months.to_s) << \"months\")end\nif @days != 0\n(  (o << @days.to_s) << \"days\")end\nif @microseconds != 0\n(  (o << @microseconds.to_s) << \"microseconds\")end\no.join(\" \")\n"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Interval/Converter","path":"Clear/SQL/Interval/Converter.html","kind":"module","full_name":"Clear::SQL::Interval::Converter","name":"Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/interval/interval.cr","line_number":50,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Interval","kind":"struct","full_name":"Clear::SQL::Interval","name":"Interval"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Clear::SQL::Interval?-class-method","html_id":"to_column(x):Clear::SQL::Interval?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Clear::SQL::Interval?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L51","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::SQL::Interval | ::Nil","visibility":"Public","body":"case x\nwhen Slice\n  Clear::SQL::Interval.decode(x.as(Slice(UInt8)))\nwhen Clear::SQL::Interval\n  x\nwhen Nil\n  nil\nelse\n  raise(Clear::ErrorMessages.converter_error(x.class, \"Interval\"))\nend"}},{"id":"to_db(x:Clear::SQL::Interval?)-class-method","html_id":"to_db(x:Clear::SQL::Interval?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Clear::SQL::Interval | ::Nil"}],"args_string":"(x : Clear::SQL::Interval?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/interval/interval.cr#L64","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Clear::SQL::Interval | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (x)\n  x.to_db\nelse\n  nil\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Join","path":"Clear/SQL/Join.html","kind":"struct","full_name":"Clear::SQL::Join","name":"Join","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Fragment","kind":"struct","full_name":"Clear::SQL::Fragment","name":"Fragment"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/fragment/join.cr","line_number":4,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TYPE","name":"TYPE","value":"{left: \"LEFT JOIN\", inner: \"INNER JOIN\", right: \"RIGHT JOIN\", full_outer: \"FULL OUTER JOIN\", cross: \"CROSS JOIN\"}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from,condition=nil,lateral=false,type:Symbolic=:inner)-class-method","html_id":"new(from,condition=nil,lateral=false,type:Symbolic=:inner)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"condition","doc":null,"default_value":"nil","external_name":"condition","restriction":""},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""},{"name":"type","doc":null,"default_value":":inner","external_name":"type","restriction":"Symbolic"}],"args_string":"(from, condition = <span class=\"n\">nil</span>, lateral = <span class=\"n\">false</span>, type : Symbolic = <span class=\"n\">:inner</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L16","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"condition","doc":null,"default_value":"nil","external_name":"condition","restriction":""},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""},{"name":"type","doc":null,"default_value":":inner","external_name":"type","restriction":"Symbolic"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, condition, lateral, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"condition:Clear::Expression::Node?-instance-method","html_id":"condition:Clear::Expression::Node?-instance-method","name":"condition","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Clear::Expression::Node?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L15","def":{"name":"condition","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::Expression::Node | ::Nil","visibility":"Public","body":"@condition"}},{"id":"condition=(condition:Clear::Expression::Node?)-instance-method","html_id":"condition=(condition:Clear::Expression::Node?)-instance-method","name":"condition=","doc":null,"summary":null,"abstract":false,"args":[{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":"Clear::Expression::Node | ::Nil"}],"args_string":"(condition : Clear::Expression::Node?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L19","def":{"name":"condition=","args":[{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":"Clear::Expression::Node | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@condition = condition"}},{"id":"from:Selectable-instance-method","html_id":"from:Selectable-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Selectable","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L14","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Selectable","visibility":"Public","body":"@from"}},{"id":"from=(from:Selectable)-instance-method","html_id":"from=(from:Selectable)-instance-method","name":"from=","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Selectable"}],"args_string":"(from : Selectable)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L18","def":{"name":"from=","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Selectable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from = from"}},{"id":"lateral:Bool-instance-method","html_id":"lateral:Bool-instance-method","name":"lateral","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L16","def":{"name":"lateral","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@lateral"}},{"id":"lateral=(lateral:Bool)-instance-method","html_id":"lateral=(lateral:Bool)-instance-method","name":"lateral=","doc":null,"summary":null,"abstract":false,"args":[{"name":"lateral","doc":null,"default_value":"","external_name":"lateral","restriction":"Bool"}],"args_string":"(lateral : Bool)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L20","def":{"name":"lateral=","args":[{"name":"lateral","doc":null,"default_value":"","external_name":"lateral","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lateral = lateral"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L24","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"c = condition\nif c\n  [type, lateral ? \"LATERAL\" : nil, SQL.sel_str(from), \"ON\", c.resolve].compact.join(\" \")\nelse\n  {type, lateral ? \"LATERAL\" : nil, SQL.sel_str(from)}.join(\" \")\nend\n"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L13","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}},{"id":"type=(type:String)-instance-method","html_id":"type=(type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(type : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/fragment/join.cr#L17","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = type"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","path":"Clear/SQL/JSONB.html","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/jsonb/jsonb.cr","line_number":34,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"}],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB/Equality","kind":"class","full_name":"Clear::Expression::Node::JSONB::Equality","name":"Equality"},{"html_id":"github.com/anykeyh/clear/Clear/Expression/Node/JSONB/Field","kind":"class","full_name":"Clear::Expression::Node::JSONB::Field","name":"Field"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"jsonb_all_exists?(field,keys:Array(String))-instance-method","html_id":"jsonb_all_exists?(field,keys:Array(String))-instance-method","name":"jsonb_all_exists?","doc":"jsonb `?&` operator\nDo all of these array strings exist as top-level keys?","summary":"<p>jsonb <code>?&</code> operator Do all of these array strings exist as top-level keys?</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"}],"args_string":"(field, keys : Array(String))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L59","def":{"name":"jsonb_all_exists?","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{field, (\"array[\" + (keys.map do |x|\n  Clear::SQL.sanitize(x)\nend.join(\",\"))) + \"]\"}.join(\" ?& \")"}},{"id":"jsonb_any_exists?(field,keys:Array(String))-instance-method","html_id":"jsonb_any_exists?(field,keys:Array(String))-instance-method","name":"jsonb_any_exists?","doc":"jsonb `?|` operator\nDo any of these array strings exist as top-level keys?\n","summary":"<p>jsonb <code>?|</code> operator Do any of these array strings exist as top-level keys? </p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"}],"args_string":"(field, keys : Array(String))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L48","def":{"name":"jsonb_any_exists?","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{field, (\"array[\" + (keys.map do |x|\n  Clear::SQL.sanitize(x)\nend.join(\",\"))) + \"]\"}.join(\" ?| \")"}},{"id":"jsonb_eq(field,key,value)-instance-method","html_id":"jsonb_eq(field,key,value)-instance-method","name":"jsonb_eq","doc":"Test equality using the `@>` operator\n\n```crystal\njsonb_eq(\"data.sub.key\", \"value\")\n```\n\n=> `data @> '{\"sub\": {\"key\": \"value\"}}' `","summary":"<p>Test equality using the <code>@></code> operator</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(field, key, value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L115","def":{"name":"jsonb_eq","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arr = jsonb_k2a(key)\nif arr.empty?\n  {field, Clear::Expression[value]}.join(\" = \")\nelse\n  {field, Clear::Expression[(jsonb_arr2h(arr, value)).to_json]}.join(\" @> \")\nend\n"}},{"id":"jsonb_exists?(field,value)-instance-method","html_id":"jsonb_exists?(field,value)-instance-method","name":"jsonb_exists?","doc":"Does the string exist as a top-level key within the JSON value?","summary":"<p>Does the string exist as a top-level key within the JSON value?</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(field, value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L53","def":{"name":"jsonb_exists?","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{field, Clear::SQL.sanitize(value)}.join(\" ? \")"}},{"id":"jsonb_k2h(key:String,value:JSONBKey):JSONBHash-instance-method","html_id":"jsonb_k2h(key:String,value:JSONBKey):JSONBHash-instance-method","name":"jsonb_k2h","doc":"Transform a key to a hash","summary":"<p>Transform a key to a hash</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSONBKey"}],"args_string":"(key : String, value : JSONBKey) : JSONBHash","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L41","def":{"name":"jsonb_k2h","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSONBKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSONBHash","visibility":"Public","body":"jsonb_arr2h(jsonb_k2a(key), value)"}},{"id":"jsonb_resolve(field,arr:Array(String),cast=nil):String-instance-method","html_id":"jsonb_resolve(field,arr:Array(String),cast=nil):String-instance-method","name":"jsonb_resolve","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(String)"},{"name":"cast","doc":null,"default_value":"nil","external_name":"cast","restriction":""}],"args_string":"(field, arr : Array(String), cast = <span class=\"n\">nil</span>) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L125","def":{"name":"jsonb_resolve","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"Array(String)"},{"name":"cast","doc":null,"default_value":"nil","external_name":"cast","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if arr.empty?\n  return field\nend\no = ([field] + Clear::Expression[arr]).join(\"->\")\nif cast\n  o = o + \"::#{cast}\"\nend\no\n"}},{"id":"jsonb_resolve(field,key:String,cast=nil)-instance-method","html_id":"jsonb_resolve(field,key:String,cast=nil)-instance-method","name":"jsonb_resolve","doc":"Return text selector for the field/key :\n\n```crystal\njsonb_text(\"data\", \"sub.key\").like(\"user%\")\n# => \"data->'sub'->>'key' LIKE 'user%'\"\n```\n","summary":"<p>Return text selector for the field/key :</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"cast","doc":null,"default_value":"nil","external_name":"cast","restriction":""}],"args_string":"(field, key : String, cast = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr#L139","def":{"name":"jsonb_resolve","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"cast","doc":null,"default_value":"nil","external_name":"cast","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arr = jsonb_k2a(key)\njsonb_resolve(field, arr, cast)\n"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB/JSONBHash","path":"Clear/SQL/JSONB/JSONBHash.html","kind":"alias","full_name":"Clear::SQL::JSONB::JSONBHash","name":"JSONBHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/jsonb/jsonb.cr","line_number":38,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"Hash(String, Clear::SQL::JSONB::JSONBKey)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB/JSONBKey","path":"Clear/SQL/JSONB/JSONBKey.html","kind":"alias","full_name":"Clear::SQL::JSONB::JSONBKey","name":"JSONBKey","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/jsonb/jsonb.cr","line_number":37,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/jsonb/jsonb.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Bool | Clear::Expression::Literal | Float32 | Float64 | Hash(String, Clear::SQL::JSONB::JSONBKey) | Int16 | Int32 | Int64 | Int8 | String | Symbol | Time | UInt16 | UInt32 | UInt64 | UInt8 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/JSONB","kind":"module","full_name":"Clear::SQL::JSONB","name":"JSONB"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Logger","path":"Clear/SQL/Logger.html","kind":"module","full_name":"Clear::SQL::Logger","name":"Logger","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/logger.cr","line_number":5,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/logger.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SQL_KEYWORDS","name":"SQL_KEYWORDS","value":"Set(String).new([\"ADD\", \"ALL\", \"ALTER\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"ASYMMETRIC\", \"BEGIN\", \"BOTH\", \"BY\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONSTRAINT\", \"COUNT\", \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_ROLE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"CURSOR\", \"DECLARE\", \"DEFAULT\", \"DELETE\", \"DEFERRABLE\", \"DESC\", \"DISTINCT\", \"DROP\", \"DO\", \"ELSE\", \"END\", \"EXCEPT\", \"EXISTS\", \"FALSE\", \"FETCH\", \"FULL\", \"FOR\", \"FOREIGN\", \"FROM\", \"GRANT\", \"GROUP\", \"HAVING\", \"IF\", \"IN\", \"INDEX\", \"INNER\", \"INSERT\", \"INITIALLY\", \"INTERSECT\", \"INTO\", \"JOIN\", \"LAGGING\", \"LEADING\", \"LIMIT\", \"LEFT\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"NATURAL\", \"NEW\", \"NOT\", \"NULL\", \"OFF\", \"OFFSET\", \"OLD\", \"ON\", \"ONLY\", \"OR\", \"ORDER\", \"OUTER\", \"PLACING\", \"PRIMARY\", \"REFERENCES\", \"RELEASE\", \"RETURNING\", \"RIGHT\", \"ROLLBACK\", \"SAVEPOINT\", \"SELECT\", \"SESSION_USER\", \"SET\", \"SOME\", \"SYMMETRIC\", \"TABLE\", \"THEN\", \"TO\", \"TRAILING\", \"TRIGGER\", \"TRUE\", \"UNION\", \"UNIQUE\", \"UPDATE\", \"USER\", \"USING\", \"VALUES\", \"WHEN\", \"WHERE\", \"WINDOW\"] of ::String)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[{"id":"colorize_query(qry:String)-class-method","html_id":"colorize_query(qry:String)-class-method","name":"colorize_query","doc":null,"summary":null,"abstract":false,"args":[{"name":"qry","doc":null,"default_value":"","external_name":"qry","restriction":"String"}],"args_string":"(qry : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/logger.cr#L20","def":{"name":"colorize_query","args":[{"name":"qry","doc":null,"default_value":"","external_name":"qry","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o = (qry.to_s.split(/([a-zA-Z0-9_]+)/)).map do |word|\n  if SQL_KEYWORDS.includes?(word.upcase)\n    word.colorize.bold.blue.to_s\n  else\n    if word =~ (/\\d+/)\n      word.colorize.red\n    else\n      word.colorize.white\n    end\n  end\nend.join(\"\")\no.gsub(/(--.*)$/) do |x|\n  x.colorize.dark_gray\nend\n"}},{"id":"display_mn_sec(x):String-class-method","html_id":"display_mn_sec(x):String-class-method","name":"display_mn_sec","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/logger.cr#L33","def":{"name":"display_mn_sec","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"mn = x.to_i / 60\nsc = x.to_i % 60\n({mn > 9 ? mn : \"0#{mn}\", sc > 9 ? sc : \"0#{sc}\"}.join(\"mn\")) + \"s\"\n"}},{"id":"display_time(x):String-class-method","html_id":"display_time(x):String-class-method","name":"display_time","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/logger.cr#L40","def":{"name":"display_time","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if (x > 60)\n  display_mn_sec(x)\nelse\n  if (  x > 1)\n    (\"%.2f\" % x) + \"s\"\n  else\n    if (    x > 0.001)\n      (1000 * x).to_i.to_s + \"ms\"\n    else\n      (1000000 * x).to_i.to_s + \"µs\"\n    end\n  end\nend"}}],"constructors":[],"instance_methods":[{"id":"log_query(sql,&block)-instance-method","html_id":"log_query(sql,&amp;block)-instance-method","name":"log_query","doc":null,"summary":null,"abstract":false,"args":[{"name":"sql","doc":null,"default_value":"","external_name":"sql","restriction":""}],"args_string":"(sql, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/logger.cr#L52","def":{"name":"log_query","args":[{"name":"sql","doc":null,"default_value":"","external_name":"sql","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  start_time = Time.monotonic\n  o = yield\n  elapsed_time = Time.monotonic - start_time\n  Clear.logger.debug((  (\"[\" + (Clear::SQL::Logger.display_time(elapsed_time.to_f)).colorize.bold.white.to_s) + \"] #{SQL::Logger.colorize_query(sql)}\"))\n  o\nrescue e\n  raise(Clear::SQL::Error.new(message: [e.message, \"Error caught, last query was:\", Clear::SQL::Logger.colorize_query(sql)].compact.join(\"\\n\"), cause: e))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/OperationNotPermittedError","path":"Clear/SQL/OperationNotPermittedError.html","kind":"class","full_name":"Clear::SQL::OperationNotPermittedError","name":"OperationNotPermittedError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":8,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","path":"Clear/SQL/Query.html","kind":"module","full_name":"Clear::SQL::Query","name":"Query","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/aggregate.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","path":"Clear/SQL/Query/Aggregate.html","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/aggregate.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"agg(field,x:X.class)forallX-instance-method","html_id":"agg(field,x:X.class)forallX-instance-method","name":"agg","doc":"Call an custom aggregation function, like MEDIAN or other:\n\n```\n  query.agg(\"MEDIAN(age)\", Int64)\n```\n\nNote than COUNT, MIN, MAX, SUM and AVG are already conveniently mapped.\n\nThis return only one row, and should not be used with `group_by` (prefer pluck or fetch)","summary":"<p>Call an custom aggregation function, like MEDIAN or other:</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"args_string":"(field, x : <span class=\"t\">X</span>.<span class=\"k\">class</span>) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr#L41","def":{"name":"agg","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.clear_select.select(field)).scalar(X)"}},{"id":"avg(field,x:X.class)forallX-instance-method","html_id":"avg(field,x:X.class)forallX-instance-method","name":"avg","doc":"SQL aggregation function \"AVG\":\n\n```\n  query.avg(\"field\", Int64)\n```","summary":"<p>SQL aggregation function \"AVG\":</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"args_string":"(field, x : <span class=\"t\">X</span>.<span class=\"k\">class</span>) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr#L51","def":{"name":"avg","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"agg(\"AVG(#{field})\", X)"}},{"id":"count(type:X.class=Int64)forallX-instance-method","html_id":"count(type:X.class=Int64)forallX-instance-method","name":"count","doc":"Use SQL `COUNT` over your query, and return this number as a Int64\n\nas count return always a scalar, the usage of `COUNT(*) OVER GROUP BY` can be done by\nusing `pluck` or `select`\n\n","summary":"<p>Use SQL <code>COUNT</code> over your query, and return this number as a Int64</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"Int64","external_name":"type","restriction":"X.class"}],"args_string":"(type : <span class=\"t\">X</span>.<span class=\"k\">class</span> = <span class=\"t\">Int64</span>) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr#L9","def":{"name":"count","args":[{"name":"type","doc":null,"default_value":"Int64","external_name":"type","restriction":"X.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"columns = @columns.dup\nif ((@offset || @limit) || @group_bys)\n  subquery = self.is_distinct? ? self : self.dup.clear_order_bys.clear_select.select(\"1\")\n  o = X.new(((Clear::SQL.select(\"COUNT(*)\")).from({query_count: subquery})).scalar(Int64))\nelse\n  new_query = self.dup.clear_select.select(\"COUNT(*)\")\n  o = X.new(new_query.scalar(Int64))\nend\n@columns = columns\no\n"}},{"id":"max(field,x:X.class)forallX-instance-method","html_id":"max(field,x:X.class)forallX-instance-method","name":"max","doc":"SQL aggregation function \"MAX\":\n\n```\n  query.max(\"field\", Int64)\n```","summary":"<p>SQL aggregation function \"MAX\":</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"args_string":"(field, x : <span class=\"t\">X</span>.<span class=\"k\">class</span>) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr#L51","def":{"name":"max","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"agg(\"MAX(#{field})\", X)"}},{"id":"min(field,x:X.class)forallX-instance-method","html_id":"min(field,x:X.class)forallX-instance-method","name":"min","doc":"SQL aggregation function \"MIN\":\n\n```\n  query.min(\"field\", Int64)\n```","summary":"<p>SQL aggregation function \"MIN\":</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"args_string":"(field, x : <span class=\"t\">X</span>.<span class=\"k\">class</span>) forall X","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr#L51","def":{"name":"min","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"X.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"agg(\"MIN(#{field})\", X)"}},{"id":"sum(field):Float64-instance-method","html_id":"sum(field):Float64-instance-method","name":"sum","doc":"SUM through a field and return a Float64\nNote: This function is not safe injection-wise, so beware !.","summary":"<p>SUM through a field and return a Float64 Note: This function is not safe injection-wise, so beware !.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"args_string":"(field) : Float64","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/aggregate.cr#L47","def":{"name":"sum","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"(agg(\"SUM(#{field})\", Union(Int64 | PG::Numeric | Nil))).try(&.to_f) || 0.0"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","path":"Clear/SQL/Query/BeforeQuery.html","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/before_query.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/before_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","path":"Clear/SQL/Query/Change.html","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/change.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/change.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/DeleteQuery","kind":"class","full_name":"Clear::SQL::DeleteQuery","name":"DeleteQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery","kind":"class","full_name":"Clear::SQL::InsertQuery","name":"InsertQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"change!:self-instance-method","html_id":"change!:self-instance-method","name":"change!","doc":"This method is called everytime the request has been changed\nBy default, this do nothing and return `self`. However, it can be\nreimplemented to change some behavior when the query is changed\n\n(eg. it is by `Clear::Model::Collection`, to discard cache over collection)","summary":"<p>This method is called everytime the request has been changed By default, this do nothing and return <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/change.cr#L7","def":{"name":"change!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","path":"Clear/SQL/Query/Connection.html","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/connection.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/connection.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/DeleteQuery","kind":"class","full_name":"Clear::SQL::DeleteQuery","name":"DeleteQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery","kind":"class","full_name":"Clear::SQL::InsertQuery","name":"InsertQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"connection_name:String-instance-method","html_id":"connection_name:String-instance-method","name":"connection_name","doc":"Connection used by the query.\nChange it using `use_connection` method","summary":"<p>Connection used by the query.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/connection.cr#L7","def":{"name":"connection_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@connection_name"}},{"id":"use_connection(connection_name:String)-instance-method","html_id":"use_connection(connection_name:String)-instance-method","name":"use_connection","doc":"Change the connection used by the query on execution","summary":"<p>Change the connection used by the query on execution</p>","abstract":false,"args":[{"name":"connection_name","doc":null,"default_value":"","external_name":"connection_name","restriction":"String"}],"args_string":"(connection_name : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/connection.cr#L8","def":{"name":"use_connection","args":[{"name":"connection_name","doc":null,"default_value":"","external_name":"connection_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@connection_name = connection_name\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","path":"Clear/SQL/Query/CTE.html","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/cte.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/cte.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery","kind":"class","full_name":"Clear::SQL::InsertQuery","name":"InsertQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":"Allow usage of Common Table Expressions (CTE) in the query building","summary":"<p>Allow usage of Common Table Expressions (CTE) in the query building</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cte:Hash(String,CTEAuthorized)-instance-method","html_id":"cte:Hash(String,CTEAuthorized)-instance-method","name":"cte","doc":"List the current CTE of the query. The key is the name of the CTE,\nwhile the value is the fragment (string or Sub-select)","summary":"<p>List the current CTE of the query.</p>","abstract":false,"args":[],"args_string":" : Hash(String, CTEAuthorized)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/cte.cr#L10","def":{"name":"cte","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, CTEAuthorized)","visibility":"Public","body":"@cte"}},{"id":"with_cte(name,request:CTEAuthorized)-instance-method","html_id":"with_cte(name,request:CTEAuthorized)-instance-method","name":"with_cte","doc":"Add a CTE to the query.\n\n```crystal\nClear::SQL.select.with_cte(\"full_year\",\n  \"SELECT DATE(date)\"\n  \"FROM generate_series(NOW() - INTERVAL '1 year', NOW(), '1 day'::interval) date\")\n  .select(\"*\").from(\"full_year\")\n# WITH full_year AS ( SELECT DATE(date) ... ) SELECT * FROM full_year;\n```","summary":"<p>Add a CTE to the query.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"CTEAuthorized"}],"args_string":"(name, request : CTEAuthorized)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/cte.cr#L19","def":{"name":"with_cte","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"CTEAuthorized"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cte[name] = request\nchange!\n"}},{"id":"with_cte(tuple:NamedTuple)-instance-method","html_id":"with_cte(tuple:NamedTuple)-instance-method","name":"with_cte","doc":"Add a CTE to the query. Use NamedTuple convention:\n\n```crystal\nClear::SQL.select.with_cte(cte: \"xxx\")\n# WITH cte AS xxx SELECT...\n```","summary":"<p>Add a CTE to the query.</p>","abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"args_string":"(tuple : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/cte.cr#L30","def":{"name":"with_cte","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tuple.each do |k, v|\n  cte[k.to_s] = v\nend\nchange!\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","path":"Clear/SQL/Query/Execute.html","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/execute.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/execute.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/DeleteQuery","kind":"class","full_name":"Clear::SQL::DeleteQuery","name":"DeleteQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"execute(connection_name:String?=nil)-instance-method","html_id":"execute(connection_name:String?=nil)-instance-method","name":"execute","doc":"\nExecute an SQL statement which does not return anything.\n\nIf an optional `connection_name` parameter is given, this will\n  override the connection used by the query.\n\n```crystal\n%(default secondary).each do |cnx|\n  Clear::SQL.select(\"pg_shards('xxx')\").execute(cnx)\nend\n```","summary":"<p>Execute an SQL statement which does not return anything.</p>","abstract":false,"args":[{"name":"connection_name","doc":null,"default_value":"nil","external_name":"connection_name","restriction":"String | ::Nil"}],"args_string":"(connection_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/execute.cr#L15","def":{"name":"execute","args":[{"name":"connection_name","doc":null,"default_value":"nil","external_name":"connection_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Clear::SQL.execute(connection_name || self.connection_name, to_sql)"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","path":"Clear/SQL/Query/Fetch.html","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/fetch.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"fetch(fetch_all=false,&block:Hash(String,Clear::SQL::Any)->Void)-instance-method","html_id":"fetch(fetch_all=false,&amp;block:Hash(String,Clear::SQL::Any)-&gt;Void)-instance-method","name":"fetch","doc":"Fetch the result set row per row\n`fetch_all` optional parameter is helpful in transactional environment, so it stores\nthe result and close the resultset before starting to call yield over the data\npreventing creation of a new connection if you need to call SQL into the\nyielded block.\n\n```crystal\n# This is wrong: The connection is still busy retrieving the users:\nClear::SQL.select.from(\"users\").fetch do |u|\n  Clear::SQL.select.from(\"posts\").where { u[\"id\"] == posts.id }\nend\n\n# Instead, use `fetch_all`\n# Clear will store the value of the result set in memory\n# before calling the block, and the connection is now ready to handle\n# another query.\nClear::SQL.select.from(\"users\").fetch(fetch_all:true) do |u|\n  Clear::SQL.select.from(\"posts\").where { u[\"id\"] == posts.id }\nend\n```","summary":"<p>Fetch the result set row per row <code>fetch_all</code> optional parameter is helpful in transactional environment, so it stores the result and close the resultset before starting to call yield over the data preventing creation of a new connection if you need to call SQL into the yielded block.</p>","abstract":false,"args":[{"name":"fetch_all","doc":null,"default_value":"false","external_name":"fetch_all","restriction":""}],"args_string":"(fetch_all = <span class=\"n\">false</span>, &block : Hash(String, Clear::SQL::Any) -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L125","def":{"name":"fetch","args":[{"name":"fetch_all","doc":null,"default_value":"false","external_name":"fetch_all","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Hash(String, ::Clear::SQL::Any) -> Void)"},"return_type":"","visibility":"Public","body":"trigger_before_query\nh = {} of String => ::Clear::SQL::Any\nsql = self.to_sql\nrs = Clear::SQL.log_query(sql) do\n  Clear::SQL::ConnectionPool.with_connection(connection_name, &.query(sql))\nend\nif fetch_all\n  o = [] of Hash(String, ::Clear::SQL::Any)\n  fetch_result_set(h, rs) do |x|\n    o << x.dup\n  end\n  o.each do |x|\n    yield x\n  end\nelse\n  fetch_result_set(h, rs) do |x|\n    yield x\n  end\nend\n"}},{"id":"fetch_first-instance-method","html_id":"fetch_first-instance-method","name":"fetch_first","doc":"Alias for `first` because first is redefined in Collection::Base\nobject to return a model instead.","summary":"<p>Alias for <code><a href=\"../../../Clear/SQL/Query/Fetch.html#first-instance-method\">#first</a></code> because first is redefined in Collection::Base object to return a model instead.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L75","def":{"name":"fetch_first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(limit(1)).fetch(fetch_all: true) do |x|\n  return x\nend\nnil\n"}},{"id":"fetch_first!-instance-method","html_id":"fetch_first!-instance-method","name":"fetch_first!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L81","def":{"name":"fetch_first!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if o = fetch_first\n  o\nelse\n  raise(Clear::SQL::RecordNotFoundError.new)\nend"}},{"id":"fetch_with_cursor(count=1000,&block:Hash(String,Clear::SQL::Any)->Void)-instance-method","html_id":"fetch_with_cursor(count=1000,&amp;block:Hash(String,Clear::SQL::Any)-&gt;Void)-instance-method","name":"fetch_with_cursor","doc":"Fetch the data using CURSOR.\nThis will prevent Clear to load all the data from the database into memory.\nThis is useful if you need to retrieve and update a large dataset.","summary":"<p>Fetch the data using CURSOR.</p>","abstract":false,"args":[{"name":"count","doc":null,"default_value":"1000","external_name":"count","restriction":""}],"args_string":"(count = <span class=\"n\">1000</span>, &block : Hash(String, Clear::SQL::Any) -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L24","def":{"name":"fetch_with_cursor","args":[{"name":"count","doc":null,"default_value":"1000","external_name":"count","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Hash(String, ::Clear::SQL::Any) -> Void)"},"return_type":"","visibility":"Public","body":"trigger_before_query\nClear::SQL.transaction do |cnx|\n  cursor_name = \"__cursor_#{Time.now.to_unix ^ (rand * 268435455).to_i}__\"\n  cursor_declaration = \"DECLARE #{cursor_name} CURSOR FOR #{to_sql}\"\n  Clear::SQL.log_query(cursor_declaration) do\n    cnx.exec(cursor_declaration)\n  end\n  h = {} of String => ::Clear::SQL::Any\n  we_loop = true\n  while we_loop\n    fetch_query = \"FETCH #{count} FROM #{cursor_name}\"\n    rs = Clear::SQL.log_query(fetch_query) do\n      cnx.query(fetch_query)\n    end\n    o = Array(Hash(String, ::Clear::SQL::Any)).new(initial_capacity: count)\n    we_loop = fetch_result_set(h, rs) do |x|\n      o << x.dup\n    end\n    o.each do |hash|\n      yield hash\n    end\n  end\nend\n"}},{"id":"first-instance-method","html_id":"first-instance-method","name":"first","doc":"Return the first line of the query as Hash(String, ::Clear::SQL::Any), or nil\nif not found","summary":"<p>Return the first line of the query as Hash(String, ::Clear::SQL::Any), or nil if not found</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L65","def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_first"}},{"id":"first!-instance-method","html_id":"first!-instance-method","name":"first!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L69","def":{"name":"first!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch_first!"}},{"id":"scalar(type:T.class)forallT-instance-method","html_id":"scalar(type:T.class)forallT-instance-method","name":"scalar","doc":"Helpers to fetch a SELECT with only one row and one column return.","summary":"<p>Helpers to fetch a SELECT with only one row and one column return.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"args_string":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L53","def":{"name":"scalar","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"trigger_before_query\nsql = to_sql\nClear::SQL.log_query(sql) do\n  (Clear::SQL::ConnectionPool.with_connection(connection_name, &.scalar(sql))).as(T)\nend\n"}},{"id":"to_a:Array(Hash(String,Clear::SQL::Any))-instance-method","html_id":"to_a:Array(Hash(String,Clear::SQL::Any))-instance-method","name":"to_a","doc":"Return an array with all the rows fetched.","summary":"<p>Return an array with all the rows fetched.</p>","abstract":false,"args":[],"args_string":" : Array(Hash(String, Clear::SQL::Any))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/fetch.cr#L90","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Hash(String, ::Clear::SQL::Any))","visibility":"Public","body":"trigger_before_query\nh = {} of String => ::Clear::SQL::Any\nsql = self.to_sql\nrs = Clear::SQL.log_query(sql) do\n  Clear::SQL::ConnectionPool.with_connection(connection_name, &.query(sql))\nend\no = [] of Hash(String, ::Clear::SQL::Any)\nfetch_result_set(h, rs) do |x|\n  o << x.dup\nend\no\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","path":"Clear/SQL/Query/From.html","kind":"module","full_name":"Clear::SQL::Query::From","name":"From","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/from.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/from.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_from-instance-method","html_id":"clear_from-instance-method","name":"clear_from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/from.cr#L18","def":{"name":"clear_from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@froms.clear\nchange!\n"}},{"id":"from(*args)-instance-method","html_id":"from(*args)-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/from.cr#L5","def":{"name":"from","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"args.each do |arg|\n  case arg\n  when NamedTuple\n    arg.each do |k, v|\n      @froms << (Clear::SQL::From.new(v, k.to_s))\n    end\n  else\n    @froms << (Clear::SQL::From.new(arg))\n  end\nend\nchange!\n"}},{"id":"froms:Array(SQL::From)-instance-method","html_id":"froms:Array(SQL::From)-instance-method","name":"froms","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(SQL::From)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/from.cr#L5","def":{"name":"froms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SQL::From)","visibility":"Public","body":"@froms"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","path":"Clear/SQL/Query/GroupBy.html","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/group_by.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/group_by.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_group_bys-instance-method","html_id":"clear_group_bys-instance-method","name":"clear_group_bys","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/group_by.cr#L4","def":{"name":"clear_group_bys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@group_bys.clear\nchange!\n"}},{"id":"group_by(column:Symbolic)-instance-method","html_id":"group_by(column:Symbolic)-instance-method","name":"group_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbolic"}],"args_string":"(column : Symbolic)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/group_by.cr#L9","def":{"name":"group_by","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbolic"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@group_bys << column\nchange!\n"}},{"id":"group_bys:Array(Symbolic)-instance-method","html_id":"group_bys:Array(Symbolic)-instance-method","name":"group_bys","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Symbolic)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/group_by.cr#L4","def":{"name":"group_bys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Symbolic)","visibility":"Public","body":"@group_bys"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","path":"Clear/SQL/Query/Having.html","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/having.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_havings-instance-method","html_id":"clear_havings-instance-method","name":"clear_havings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr#L67","def":{"name":"clear_havings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@havings.clear\nchange!\n"}},{"id":"having(&block)-instance-method","html_id":"having(&amp;block)-instance-method","name":"having","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr#L6","def":{"name":"having","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"@havings << (Clear::Expression.ensure_node!(with Clear::Expression.new yield))\nchange!\n"}},{"id":"having(str:String,parameters:Array(T)|Tuple)forallT-instance-method","html_id":"having(str:String,parameters:Array(T)|Tuple)forallT-instance-method","name":"having","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Array(T) | Tuple"}],"args_string":"(str : String, parameters : Array(T) | Tuple) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr#L35","def":{"name":"having","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Array(T) | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"idx = -1\nclause = str.gsub(\"?\") do |_|\n  begin\n    Clear::Expression[parameters[idx = idx + 1]]\n  rescue e : IndexError\n    raise(Clear::ErrorMessages.query_building_error(e.message))\n  end\nend\nself.having(clause)\n"}},{"id":"having(str:String,parameters:NamedTuple)-instance-method","html_id":"having(str:String,parameters:NamedTuple)-instance-method","name":"having","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"NamedTuple"}],"args_string":"(str : String, parameters : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr#L49","def":{"name":"having","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clause = str.gsub(/\\:[a-zA-Z0-9_]+/) do |question_mark|\n  begin\n    sym = question_mark[1..-1]\n    Clear::Expression[parameters[sym]]\n  rescue e : KeyError\n    raise(Clear::ErrorMessages.query_building_error(e.message))\n  end\nend\nself.having(clause)\n"}},{"id":"having(x:NamedTuple)-instance-method","html_id":"having(x:NamedTuple)-instance-method","name":"having","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr#L12","def":{"name":"having","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.each do |k, v|\n  k = Clear::Expression::Node::Variable.new(k.to_s)\n  @havings << (case v\n  when Array\n    Clear::Expression::Node::InArray.new(k, v.map do |it|\n      Clear::Expression[it]\n    end)\n  when SelectBuilder\n    Clear::Expression::Node::InSelect.new(k, v)\n  when Range\n    Clear::Expression::Node::InRange.new(k, Clear::Expression[v.begin]..Clear::Expression[v.end], v.exclusive?)\n  else\n    v = Clear::Expression::Node::Literal.new(v)\n    Clear::Expression::Node::DoubleOperator.new(k, v, \"=\")\n  end)\nend\nchange!\n"}},{"id":"having(str:String)-instance-method","html_id":"having(str:String)-instance-method","name":"having","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/having.cr#L62","def":{"name":"having","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@havings << (Clear::Expression::Node::Variable.new(str))\nchange!\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","path":"Clear/SQL/Query/Join.html","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/join.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cross_join(name:Symbolic,lateral=false)-instance-method","html_id":"cross_join(name:Symbolic,lateral=false)-instance-method","name":"cross_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, lateral = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L21","def":{"name":"cross_join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"join(name, :cross, lateral)"}},{"id":"full_outer_join(name:Symbolic,lateral=false,&block)-instance-method","html_id":"full_outer_join(name:Symbolic,lateral=false,&amp;block)-instance-method","name":"full_outer_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, lateral = <span class=\"n\">false</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L25","def":{"name":"full_outer_join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"join_impl(name, :full_outer, lateral, Clear::Expression.ensure_node!(with Clear::Expression.new yield))"}},{"id":"inner_join(name:Symbolic,lateral=false,&block)-instance-method","html_id":"inner_join(name:Symbolic,lateral=false,&amp;block)-instance-method","name":"inner_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, lateral = <span class=\"n\">false</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L25","def":{"name":"inner_join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"join_impl(name, :inner, lateral, Clear::Expression.ensure_node!(with Clear::Expression.new yield))"}},{"id":"join(name:Symbolic,type=:inner,lateral=false,&block)-instance-method","html_id":"join(name:Symbolic,type=:inner,lateral=false,&amp;block)-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"type","doc":null,"default_value":":inner","external_name":"type","restriction":""},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, type = <span class=\"n\">:inner</span>, lateral = <span class=\"n\">false</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L13","def":{"name":"join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"type","doc":null,"default_value":":inner","external_name":"type","restriction":""},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"join_impl(name, type, lateral, Clear::Expression.ensure_node!(with Clear::Expression.new yield))"}},{"id":"join(name:Symbolic,type=:inner,lateral=false)-instance-method","html_id":"join(name:Symbolic,type=:inner,lateral=false)-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"type","doc":null,"default_value":":inner","external_name":"type","restriction":""},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, type = <span class=\"n\">:inner</span>, lateral = <span class=\"n\">false</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L17","def":{"name":"join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"type","doc":null,"default_value":":inner","external_name":"type","restriction":""},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"join_impl(name, type, lateral, nil)"}},{"id":"left_join(name:Symbolic,lateral=false,&block)-instance-method","html_id":"left_join(name:Symbolic,lateral=false,&amp;block)-instance-method","name":"left_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, lateral = <span class=\"n\">false</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L25","def":{"name":"left_join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"join_impl(name, :left, lateral, Clear::Expression.ensure_node!(with Clear::Expression.new yield))"}},{"id":"right_join(name:Symbolic,lateral=false,&block)-instance-method","html_id":"right_join(name:Symbolic,lateral=false,&amp;block)-instance-method","name":"right_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"args_string":"(name : Symbolic, lateral = <span class=\"n\">false</span>, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/join.cr#L25","def":{"name":"right_join","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbolic"},{"name":"lateral","doc":null,"default_value":"false","external_name":"lateral","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"join_impl(name, :right, lateral, Clear::Expression.ensure_node!(with Clear::Expression.new yield))"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","path":"Clear/SQL/Query/Lock.html","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/lock.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/lock.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"with_lock(str:String=&quot;FORUPDATE&quot;)-instance-method","html_id":"with_lock(str:String=&amp;quot;FORUPDATE&amp;quot;)-instance-method","name":"with_lock","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"\"FOR UPDATE\"","external_name":"str","restriction":"String"}],"args_string":"(str : String = <span class=\"s\">&quot;FOR UPDATE&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/lock.cr#L11","def":{"name":"with_lock","args":[{"name":"str","doc":null,"default_value":"\"FOR UPDATE\"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lock = str\nchange!\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","path":"Clear/SQL/Query/OffsetLimit.html","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/offset_limit.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/offset_limit.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_limit-instance-method","html_id":"clear_limit-instance-method","name":"clear_limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/offset_limit.cr#L12","def":{"name":"clear_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit = nil\nchange!\n"}},{"id":"clear_offset-instance-method","html_id":"clear_offset-instance-method","name":"clear_offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/offset_limit.cr#L17","def":{"name":"clear_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = nil\nchange!\n"}},{"id":"limit(x:Int?)-instance-method","html_id":"limit(x:Int?)-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int | ::Nil"}],"args_string":"(x : Int?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/offset_limit.cr#L7","def":{"name":"limit","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit = Int64.new(x)\nchange!\n"}},{"id":"offset(x:Int?)-instance-method","html_id":"offset(x:Int?)-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int | ::Nil"}],"args_string":"(x : Int?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/offset_limit.cr#L22","def":{"name":"offset","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = Int64.new(x)\nchange!\n"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OnConflict","path":"Clear/SQL/Query/OnConflict.html","kind":"module","full_name":"Clear::SQL::Query::OnConflict","name":"OnConflict","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/on_conflict.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/InsertQuery","kind":"class","full_name":"Clear::SQL::InsertQuery","name":"InsertQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_conflict-instance-method","html_id":"clear_conflict-instance-method","name":"clear_conflict","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L58","def":{"name":"clear_conflict","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_conflict_condition = false"}},{"id":"conflict?-instance-method","html_id":"conflict?-instance-method","name":"conflict?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L54","def":{"name":"conflict?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!@on_conflict_condition)"}},{"id":"do_conflict_action(str)-instance-method","html_id":"do_conflict_action(str)-instance-method","name":"do_conflict_action","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L23","def":{"name":"do_conflict_action","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_conflict_action = \"#{str}\"\nchange!\n"}},{"id":"do_nothing-instance-method","html_id":"do_nothing-instance-method","name":"do_nothing","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L35","def":{"name":"do_nothing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_conflict_action = \"NOTHING\"\nchange!\n"}},{"id":"do_update(&block)-instance-method","html_id":"do_update(&amp;block)-instance-method","name":"do_update","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L28","def":{"name":"do_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"action = Clear::SQL::UpdateQuery.new(nil)\nyield action\n@on_conflict_action = action\nchange!\n"}},{"id":"on_conflict(constraint:String|Bool|OnConflictWhereClause=true)-instance-method","html_id":"on_conflict(constraint:String|Bool|OnConflictWhereClause=true)-instance-method","name":"on_conflict","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"true","external_name":"constraint","restriction":"String | Bool | OnConflictWhereClause"}],"args_string":"(constraint : String | Bool | OnConflictWhereClause = <span class=\"n\">true</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L40","def":{"name":"on_conflict","args":[{"name":"constraint","doc":null,"default_value":"true","external_name":"constraint","restriction":"String | Bool | OnConflictWhereClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_conflict_condition = constraint\nchange!\n"}},{"id":"on_conflict(&block)-instance-method","html_id":"on_conflict(&amp;block)-instance-method","name":"on_conflict","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L45","def":{"name":"on_conflict","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"condition = OnConflictWhereClause.new\ncondition.where(Clear::Expression.ensure_node!(with Clear::Expression.new yield))\n@on_conflict_condition = condition\nchange!\n"}},{"id":"on_conflict_action:String|Clear::SQL::UpdateQuery-instance-method","html_id":"on_conflict_action:String|Clear::SQL::UpdateQuery-instance-method","name":"on_conflict_action","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Clear::SQL::UpdateQuery","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L7","def":{"name":"on_conflict_action","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Clear::SQL::UpdateQuery","visibility":"Public","body":"@on_conflict_action"}},{"id":"on_conflict_condition:String|OnConflictWhereClause|Bool-instance-method","html_id":"on_conflict_condition:String|OnConflictWhereClause|Bool-instance-method","name":"on_conflict_condition","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | OnConflictWhereClause | Bool","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L6","def":{"name":"on_conflict_condition","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | OnConflictWhereClause | Bool","visibility":"Public","body":"@on_conflict_condition"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OnConflict/OnConflictWhereClause","path":"Clear/SQL/Query/OnConflict/OnConflictWhereClause.html","kind":"class","full_name":"Clear::SQL::Query::OnConflict::OnConflictWhereClause","name":"OnConflictWhereClause","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/query/on_conflict.cr","line_number":8,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OnConflict","kind":"module","full_name":"Clear::SQL::Query::OnConflict","name":"OnConflict"},"doc":"Fragment used when ON CONFLICT WHERE ...","summary":"<p>Fragment used when ON CONFLICT WHERE ...</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"change!-instance-method","html_id":"change!-instance-method","name":"change!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L19","def":{"name":"change!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/on_conflict.cr#L15","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_wheres"}},{"id":"wheres:Array(Clear::Expression::Node)-instance-method","html_id":"wheres:Array(Clear::Expression::Node)-instance-method","name":"wheres","doc":"Return the list of where clause; each where clause are transformed into\nClear::Expression::Node","summary":"<p>Return the list of where clause; each where clause are transformed into Clear::Expression::Node</p>","abstract":false,"args":[],"args_string":" : Array(Clear::Expression::Node)","source_link":null,"def":{"name":"wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Clear::Expression::Node)","visibility":"Public","body":"@wheres"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","path":"Clear/SQL/Query/OrderBy.html","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/order_by.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_order_bys-instance-method","html_id":"clear_order_bys-instance-method","name":"clear_order_bys","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L19","def":{"name":"clear_order_bys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@order_bys.clear\nchange!\n"}},{"id":"order_by(x:Array(Record))-instance-method","html_id":"order_by(x:Array(Record))-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(Record)"}],"args_string":"(x : Array(Record))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L24","def":{"name":"order_by","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Array(Record)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@order_bys = x\nchange!\n"}},{"id":"order_by(tuple:NamedTuple)-instance-method","html_id":"order_by(tuple:NamedTuple)-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"args_string":"(tuple : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L33","def":{"name":"order_by","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tuple.each do |k, v|\n  @order_bys << (Record.new(k.to_s, _order_by_to_symbol(v.to_s)))\nend\nchange!\n"}},{"id":"order_by(expression:Symbol,direction=&quot;ASC&quot;)-instance-method","html_id":"order_by(expression:Symbol,direction=&amp;quot;ASC&amp;quot;)-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"Symbol"},{"name":"direction","doc":null,"default_value":"\"ASC\"","external_name":"direction","restriction":""}],"args_string":"(expression : Symbol, direction = <span class=\"s\">&quot;ASC&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L40","def":{"name":"order_by","args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"Symbol"},{"name":"direction","doc":null,"default_value":"\"ASC\"","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@order_bys << (Record.new(SQL.escape(expression.to_s), _order_by_to_symbol(direction)))\nchange!\n"}},{"id":"order_by(expression:String,direction=&quot;ASC&quot;)-instance-method","html_id":"order_by(expression:String,direction=&amp;quot;ASC&amp;quot;)-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"String"},{"name":"direction","doc":null,"default_value":"\"ASC\"","external_name":"direction","restriction":""}],"args_string":"(expression : String, direction = <span class=\"s\">&quot;ASC&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L45","def":{"name":"order_by","args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"String"},{"name":"direction","doc":null,"default_value":"\"ASC\"","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@order_bys << (Record.new(expression, _order_by_to_symbol(direction)))\nchange!\n"}},{"id":"order_by(**tuple)-instance-method","html_id":"order_by(**tuple)-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**tuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L29","def":{"name":"order_by","args":[],"double_splat":{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"order_by(tuple)"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy/Record","path":"Clear/SQL/Query/OrderBy/Record.html","kind":"struct","full_name":"Clear::SQL::Query::OrderBy::Record","name":"Record","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/query/order_by.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(op:String,dir:Symbol)-class-method","html_id":"new(op:String,dir:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"String"},{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"Symbol"}],"args_string":"(op : String, dir : Symbol)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L2","def":{"name":"new","args":[{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"String"},{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(op, dir)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L2","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Record.new(@op.clone, @dir.clone)"}},{"id":"copy_with(op_op=@op,dir_dir=@dir)-instance-method","html_id":"copy_with(op_op=@op,dir_dir=@dir)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_op","doc":null,"default_value":"@op","external_name":"op","restriction":""},{"name":"_dir","doc":null,"default_value":"@dir","external_name":"dir","restriction":""}],"args_string":"(op _op = @op, dir _dir = @dir)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/order_by.cr#L2","def":{"name":"copy_with","args":[{"name":"_op","doc":null,"default_value":"@op","external_name":"op","restriction":""},{"name":"_dir","doc":null,"default_value":"@dir","external_name":"dir","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Record.new(_op, _dir)"}},{"id":"dir:Symbol-instance-method","html_id":"dir:Symbol-instance-method","name":"dir","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","source_link":null,"def":{"name":"dir","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"@dir"}},{"id":"op:String-instance-method","html_id":"op:String-instance-method","name":"op","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@op"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","path":"Clear/SQL/Query/Pluck.html","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/pluck.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/pluck.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"pluck(fields:Tuple(*T))forallT-instance-method","html_id":"pluck(fields:Tuple(*T))forallT-instance-method","name":"pluck","doc":"See `pluck(*fields)`","summary":"<p>See <code><a href=\"../../../Clear/SQL/Query/Pluck.html#pluck%28fields%3ATuple%28%2AT%29%29forallT-instance-method\">#pluck(*fields)</a></code></p>","abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Tuple(*T)"}],"args_string":"(fields : Tuple(<span class=\"o\">*</span><span class=\"t\">T</span>)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/pluck.cr#L88","def":{"name":"pluck","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"Tuple(*T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  sql = (self.clear_select.select(fields.join(\", \"))).to_sql\n  rs = Clear::SQL.log_query(sql) do\n    Clear::SQL::ConnectionPool.with_connection(connection_name, &.query(sql))\n  end\n  {% if true %}\n      o = [] of Tuple({% for t in T %}Clear::SQL::Any,{% end %})\n\n    while rs.move_next\n        o << {\n          {% for t in T %}\n            rs.read,\n          {% end %}\n        }\n    end\n    o\n    {% end %}\nensure\n  rs.try(&.close)\nend"}},{"id":"pluck(**fields:**T)forallT-instance-method","html_id":"pluck(**fields:**T)forallT-instance-method","name":"pluck","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**fields : **T) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/pluck.cr#L71","def":{"name":"pluck","args":[],"double_splat":{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":"**T"},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  sql = (self.clear_select.select(fields.keys.join(\", \"))).to_sql\n  rs = Clear::SQL.log_query(sql) do\n    Clear::SQL::ConnectionPool.with_connection(connection_name, &.query(sql))\n  end\n  {% if true %}\n      o = [] of Tuple({% for k, v in T %}{{ v.instance }},{% end %})\n\n      while rs.move_next\n        o << { {% for k, v in T %} rs.read({{ v.instance }}), {% end %}}\n      end\n      o\n    {% end %}\nensure\n  rs.try(&.close)\nend"}},{"id":"pluck(*fields)-instance-method","html_id":"pluck(*fields)-instance-method","name":"pluck","doc":"Select specifics columns and return an array of Tuple(*Clear::SQL::Any) containing the columns in the order of the selected\narguments:\n\n```crystal\n  User.query.pluck(\"first_name\", \"last_name\").each do |(first_name, last_name)|\n    #...\n  end\n```","summary":"<p>Select specifics columns and return an array of Tuple(*Clear::SQL::Any) containing the columns in the order of the selected arguments:</p>","abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""}],"args_string":"(*fields)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/pluck.cr#L61","def":{"name":"pluck","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pluck(fields)"}},{"id":"pluck_col(field:String,type:T.class)forallT-instance-method","html_id":"pluck_col(field:String,type:T.class)forallT-instance-method","name":"pluck_col","doc":"See `pluck_col(field)`","summary":"<p>See <code><a href=\"../../../Clear/SQL/Query/Pluck.html#pluck_col%28field%3AString%29-instance-method\">#pluck_col(field)</a></code></p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"args_string":"(field : String, type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/pluck.cr#L39","def":{"name":"pluck_col","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  sql = (self.clear_select.select(field)).to_sql\n  rs = Clear::SQL.log_query(sql) do\n    Clear::SQL::ConnectionPool.with_connection(connection_name, &.query(sql))\n  end\n  o = [] of T\n  while rs.move_next\n    o << (rs.read(T))\n  end\n  o\nensure\n  rs.try(&.close)\nend"}},{"id":"pluck_col(field:String)-instance-method","html_id":"pluck_col(field:String)-instance-method","name":"pluck_col","doc":"Select a specific column of your SQL query, execute the query\nand return an array containing this field.\n\n```crystal\n  User.query.pluck_col(\"id\") # [1,2,3,4...]\n```\n\nNote: It returns an array of `Clear::SQL::Any`. Therefore, you may want to use `pluck_col(str, Type)` to return\n      an array of `Type`:\n\n```crystal\n  User.query.pluck_col(\"id\", Int64)\n```\n\nThe field argument is a SQL fragment; it's not escaped (beware SQL injection) and allow call to functions\nand aggregate methods:\n\n ```crystal\n   # ...\n   User.query.pluck_col(\"CASE WHEN id % 2 = 0 THEN id ELSE NULL END AS id\").each do\n   # ...\n ```","summary":"<p>Select a specific column of your SQL query, execute the query and return an array containing this field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"}],"args_string":"(field : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/pluck.cr#L24","def":{"name":"pluck_col","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  sql = (self.clear_select.select(field)).to_sql\n  rs = Clear::SQL.log_query(sql) do\n    Clear::SQL::ConnectionPool.with_connection(connection_name, &.query(sql))\n  end\n  o = [] of Clear::SQL::Any\n  while rs.move_next\n    o << rs.read\n  end\n  o\nensure\n  rs.try(&.close)\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","path":"Clear/SQL/Query/Select.html","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/select.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_select-instance-method","html_id":"clear_select-instance-method","name":"clear_select","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr#L56","def":{"name":"clear_select","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@columns.clear\nchange!\n"}},{"id":"distinct(on:String?=&quot;&quot;)-instance-method","html_id":"distinct(on:String?=&amp;quot;&amp;quot;)-instance-method","name":"distinct","doc":"Add DISTINCT to the SELECT part of the query\n\n- If on is blank (empty string, default), will call a simple `SELECT DISTINCT ...`\n- If on is nil, will remove the distinct (see `undistinct`)\n- If on is a non empty string, will call `SELECT DISTINCT ON (on) ...`\n","summary":"<p>Add DISTINCT to the SELECT part of the query</p>","abstract":false,"args":[{"name":"on","doc":null,"default_value":"\"\"","external_name":"on","restriction":"String | ::Nil"}],"args_string":"(on : String? = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr#L28","def":{"name":"distinct","args":[{"name":"on","doc":null,"default_value":"\"\"","external_name":"on","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct_value = on\nchange!\n"}},{"id":"distinct_value:String?-instance-method","html_id":"distinct_value:String?-instance-method","name":"distinct_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr#L13","def":{"name":"distinct_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@distinct_value"}},{"id":"select(c:Column)-instance-method","html_id":"select(c:Column)-instance-method","name":"select","doc":"def select(name : Symbolic, var = nil)\n @columns << Column.new(name, var)\n self\nend","summary":"<p>def select(name : Symbolic, var = nil)  @columns &lt;&lt; Column.new(name, var)  self end</p>","abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Column"}],"args_string":"(c : Column)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr#L17","def":{"name":"select","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Column"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@columns << c\nchange!\n"}},{"id":"select(*args)-instance-method","html_id":"select(*args)-instance-method","name":"select","doc":"Add field(s) to selection from tuple\n```\n select({user_id: \"uid\", updated_at: \"updated_at\"})\n # => Output \"SELECT user_id as uid, updated_at as updated_at\"\n```","summary":"<p>Add field(s) to selection from tuple <code></code>`  select({user_id: \"uid\", updated_at: \"updated_at\"})  # => Output \"SELECT user_id as uid, updated_at as updated_at\" <code></code>`</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr#L43","def":{"name":"select","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"args.each do |arg|\n  case arg\n  when NamedTuple\n    arg.each do |k, v|\n      @columns << (Column.new(v, k.to_s))\n    end\n  else\n    @columns << (Column.new(arg))\n  end\nend\nchange!\n"}},{"id":"undistinct-instance-method","html_id":"undistinct-instance-method","name":"undistinct","doc":"Remove distinct","summary":"<p>Remove distinct</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/select.cr#L34","def":{"name":"undistinct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"distinct(nil)"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","path":"Clear/SQL/Query/Where.html","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/where.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/DeleteQuery","kind":"class","full_name":"Clear::SQL::DeleteQuery","name":"DeleteQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OnConflict/OnConflictWhereClause","kind":"class","full_name":"Clear::SQL::Query::OnConflict::OnConflictWhereClause","name":"OnConflictWhereClause"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":"Feature WHERE clause building.\neach call to where method stack where clause.\nTheses clauses are then combined together using the `AND` operator.\nTherefore, `query.where(\"a\").where(\"b\")` will return `a AND b`\n","summary":"<p>Feature WHERE clause building.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_wheres-instance-method","html_id":"clear_wheres-instance-method","name":"clear_wheres","doc":"Clear all the where clauses and return `self`","summary":"<p>Clear all the where clauses and return <code>self</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L137","def":{"name":"clear_wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres.clear\nchange!\n"}},{"id":"where(str:String,parameters:Array(T)|Tuple)forallT-instance-method","html_id":"where(str:String,parameters:Array(T)|Tuple)forallT-instance-method","name":"where","doc":"Build SQL `where` condition using a template string and\ninterpolating `?` characters with parameters given in a tuple or array.\n```crystal\nwhere(\"x = ? OR y = ?\", {1, \"l'eau\"}) # WHERE x = 1 OR y = 'l''eau'\n```\nRaise error if there's not enough parameters to cover all the `?` placeholders","summary":"<p>Build SQL <code><a href=\"../../../Clear/SQL/Query/Where.html#where%28%26block%29-instance-method\">#where</a></code> condition using a template string and interpolating <code>?</code> characters with parameters given in a tuple or array.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Array(T) | Tuple"}],"args_string":"(str : String, parameters : Array(T) | Tuple) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L94","def":{"name":"where","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Array(T) | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"idx = -1\nclause = str.gsub(\"?\") do |_|\n  begin\n    Clear::Expression[parameters[idx = idx + 1]]\n  rescue e : IndexError\n    raise(Clear::ErrorMessages.query_building_error(e.message))\n  end\nend\nself.where(clause)\n"}},{"id":"where(str:String,parameters:NamedTuple)-instance-method","html_id":"where(str:String,parameters:NamedTuple)-instance-method","name":"where","doc":"Build SQL `where` interpolating `:keyword` with the NamedTuple passed in argument.\n```crystal\nwhere(\"id = :id OR date >= :start\", {id: 1, start: 1.day.ago})\n# WHERE id = 1 AND date >= '201x-xx-xx ...'\n```","summary":"<p>Build SQL <code><a href=\"../../../Clear/SQL/Query/Where.html#where%28%26block%29-instance-method\">#where</a></code> interpolating <code>:keyword</code> with the NamedTuple passed in argument.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"NamedTuple"}],"args_string":"(str : String, parameters : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L113","def":{"name":"where","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clause = str.gsub(/\\:[a-zA-Z0-9_]+/) do |question_mark|\n  begin\n    sym = question_mark[1..-1]\n    Clear::Expression[parameters[sym]]\n  rescue e : KeyError\n    raise(Clear::ErrorMessages.query_building_error(e.message))\n  end\nend\nself.where(clause)\n"}},{"id":"where(node:Clear::Expression::Node)-instance-method","html_id":"where(node:Clear::Expression::Node)-instance-method","name":"where","doc":"Build SQL `where` condition using a Clear::Expression::Node\n```crystal\nquery.where(Clear::Expression::Node::InArray.new(\"id\", ['1', '2', '3', '4']))\n# Note: in this example, InArray node use unsafe strings\n```\nIf useful for moving a where clause from a request to another one:\n```crystal\nquery1.where { a == b } # WHERE a = b\n```\n```\nquery2.where(query1.wheres[0]) # WHERE a = b\n```","summary":"<p>Build SQL <code><a href=\"../../../Clear/SQL/Query/Where.html#where%28%26block%29-instance-method\">#where</a></code> condition using a Clear::Expression::Node <code></code>`crystal query.where(Clear::Expression::Node::InArray.new(\"id\", ['1', '2', '3', '4'])) # Note: in this example, InArray node use unsafe strings <code></code>` If useful for moving a where clause from a request to another one: <code></code>`crystal query1.where { a == b } # WHERE a = b <code></code>` <code></code>` query2.where(query1.wheres[0]) # WHERE a = b <code></code>`</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Clear::Expression::Node"}],"args_string":"(node : Clear::Expression::Node)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L25","def":{"name":"where","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Clear::Expression::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres << node\nchange!\n"}},{"id":"where(&block)-instance-method","html_id":"where(&amp;block)-instance-method","name":"where","doc":"Build SQL `where` condition using the Expression engine.\n```crystal\nquery.where { id == 1 }\n```","summary":"<p>Build SQL <code><a href=\"../../../Clear/SQL/Query/Where.html#where%28%26block%29-instance-method\">#where</a></code> condition using the Expression engine.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L35","def":{"name":"where","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"where(Clear::Expression.ensure_node!(with Clear::Expression.new yield))"}},{"id":"where(conditions:NamedTuple|Hash(String,Clear::SQL::Any))-instance-method","html_id":"where(conditions:NamedTuple|Hash(String,Clear::SQL::Any))-instance-method","name":"where","doc":"Build SQL `where` condition using a NamedTuple.\n  this will use:\n- the `=` operator if compared with a literal\n```crystal\nquery.where({keyword: \"hello\"}) # WHERE keyword = 'hello'\n```\n- the `IN` operator if compared with an array:\n```crystal\nquery.where({x: [1, 2]}) # WHERE x in (1,2)\n```\n- the `>=` and `<=` | `<` if compared with a range:\n```crystal\nquery.where({x: (1..4)})  # WHERE x >= 1 AND x <= 4\nquery.where({x: (1...4)}) # WHERE x >= 1 AND x < 4\n```\n- You also can put another select query as argument:\n```crystal\nquery.where({x: another_select}) # WHERE x IN (SELECT ... )\n```","summary":"<p>Build SQL <code><a href=\"../../../Clear/SQL/Query/Where.html#where%28%26block%29-instance-method\">#where</a></code> condition using a NamedTuple.</p>","abstract":false,"args":[{"name":"conditions","doc":null,"default_value":"","external_name":"conditions","restriction":"NamedTuple | Hash(String, Clear::SQL::Any)"}],"args_string":"(conditions : NamedTuple | Hash(String, Clear::SQL::Any))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L62","def":{"name":"where","args":[{"name":"conditions","doc":null,"default_value":"","external_name":"conditions","restriction":"NamedTuple | Hash(String, Clear::SQL::Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"conditions.each do |k, v|\n  k = Clear::Expression::Node::Variable.new(k.to_s)\n  @wheres << (case v\n  when Array\n    Clear::Expression::Node::InArray.new(k, v.map do |it|\n      Clear::Expression[it]\n    end)\n  when SelectBuilder\n    Clear::Expression::Node::InSelect.new(k, v)\n  when Range\n    Clear::Expression::Node::InRange.new(k, Clear::Expression[v.begin]..Clear::Expression[v.end], v.exclusive?)\n  else\n    Clear::Expression::Node::DoubleOperator.new(k, Clear::Expression::Node::Literal.new(v), (    v.nil? ? \"IS\" : \"=\"))\n  end)\nend\nchange!\n"}},{"id":"where(str:String)-instance-method","html_id":"where(str:String)-instance-method","name":"where","doc":"Build custom SQL `where`\n  beware of SQL injections!\n```crystal\nwhere(\"ADD_SOME_DANGEROUS_SQL_HERE\") # WHERE ADD_SOME_DANGEROUS_SQL_HERE\n```","summary":"<p>Build custom SQL <code><a href=\"../../../Clear/SQL/Query/Where.html#where%28%26block%29-instance-method\">#where</a></code>   beware of SQL injections! <code></code>`crystal where(\"ADD_SOME_DANGEROUS_SQL_HERE\") # WHERE ADD_SOME_DANGEROUS_SQL_HERE <code></code>`</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L131","def":{"name":"where","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres << (Clear::Expression::Node::Raw.new(str))\nchange!\n"}},{"id":"where(**tuple)-instance-method","html_id":"where(**tuple)-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**tuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/where.cr#L40","def":{"name":"where","args":[],"double_splat":{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"where(conditions: tuple)"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","path":"Clear/SQL/Query/Window.html","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/window.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clear_windows-instance-method","html_id":"clear_windows-instance-method","name":"clear_windows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr#L21","def":{"name":"clear_windows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@windows.clear\nchange!\n"}},{"id":"print_windows-instance-method","html_id":"print_windows-instance-method","name":"print_windows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr#L27","def":{"name":"print_windows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@windows.map do |name, value|\n  {name.to_s, \" AS \", value}.join\nend.join"}},{"id":"window(name,value)-instance-method","html_id":"window(name,value)-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(name, value)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr#L15","def":{"name":"window","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@windows << {name.to_s, value.to_s}\nchange!\n"}},{"id":"window(windows:NamedTuple)-instance-method","html_id":"window(windows:NamedTuple)-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[{"name":"windows","doc":null,"default_value":"","external_name":"windows","restriction":"NamedTuple"}],"args_string":"(windows : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr#L7","def":{"name":"window","args":[{"name":"windows","doc":null,"default_value":"","external_name":"windows","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"windows.each do |k, v|\n  @windows << {k.to_s, v.to_s}\nend\nchange!\n"}},{"id":"windows:Array(WindowDeclaration)-instance-method","html_id":"windows:Array(WindowDeclaration)-instance-method","name":"windows","doc":"eq. WINDOW window_name AS ( window_definition )","summary":"<p>eq.</p>","abstract":false,"args":[],"args_string":" : Array(WindowDeclaration)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr#L7","def":{"name":"windows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(WindowDeclaration)","visibility":"Public","body":"@windows"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window/WindowDeclaration","path":"Clear/SQL/Query/Window/WindowDeclaration.html","kind":"alias","full_name":"Clear::SQL::Query::Window::WindowDeclaration","name":"WindowDeclaration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/window.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/window.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"Tuple(String, String)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","path":"Clear/SQL/Query/WithPagination.html","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/query/with_pagination.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_LIMIT","name":"DEFAULT_LIMIT","value":"50","doc":null,"summary":null},{"id":"DEFAULT_PAGE","name":"DEFAULT_PAGE","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query","kind":"module","full_name":"Clear::SQL::Query","name":"Query"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"current_page-instance-method","html_id":"current_page-instance-method","name":"current_page","doc":"Return the current page","summary":"<p>Return the current page</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L33","def":{"name":"current_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if offset.nil? || limit.nil?\n  1\nelse\n  ((offset.as(Int64)) / (limit.as(Int64))) + 1\nend"}},{"id":"first_page?-instance-method","html_id":"first_page?-instance-method","name":"first_page?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L64","def":{"name":"first_page?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_page <= 1"}},{"id":"last_page?-instance-method","html_id":"last_page?-instance-method","name":"last_page?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L60","def":{"name":"last_page?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"next_page.nil?"}},{"id":"next_page-instance-method","html_id":"next_page-instance-method","name":"next_page","doc":"Return `current_page + 1` or `nil` if there is no next page","summary":"<p>Return <code>current_page + 1</code> or <code>nil</code> if there is no next page</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L56","def":{"name":"next_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_page < total_pages ? (current_page + 1) : nil"}},{"id":"out_of_bounds?-instance-method","html_id":"out_of_bounds?-instance-method","name":"out_of_bounds?","doc":"Helper method that is true when someone tries to fetch a page with a\nlarger number than the last page. Can be used in combination with flashes\nand redirecting.","summary":"<p>Helper method that is true when someone tries to fetch a page with a larger number than the last page.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L71","def":{"name":"out_of_bounds?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_page > total_pages"}},{"id":"paginate(page:Int32=DEFAULT_PAGE,per_page:Int32=DEFAULT_LIMIT)-instance-method","html_id":"paginate(page:Int32=DEFAULT_PAGE,per_page:Int32=DEFAULT_LIMIT)-instance-method","name":"paginate","doc":"Enter pagination mode.\nThis is helpful to manage paginated table.\nPagination will handle the page progression automatically and update\n`offset` and `limit` parameters by his own.\n\n```crystal\npage = query.paginate(2, 50)\n```","summary":"<p>Enter pagination mode.</p>","abstract":false,"args":[{"name":"page","doc":null,"default_value":"DEFAULT_PAGE","external_name":"page","restriction":"Int32"},{"name":"per_page","doc":null,"default_value":"DEFAULT_LIMIT","external_name":"per_page","restriction":"Int32"}],"args_string":"(page : Int32 = <span class=\"t\">DEFAULT_PAGE</span>, per_page : Int32 = <span class=\"t\">DEFAULT_LIMIT</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L17","def":{"name":"paginate","args":[{"name":"page","doc":null,"default_value":"DEFAULT_PAGE","external_name":"page","restriction":"Int32"},{"name":"per_page","doc":null,"default_value":"DEFAULT_LIMIT","external_name":"per_page","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"clear_limit.clear_offset\n@total_entries = count\npage = {1, page}.max\n@limit = per_page.to_i64\n@offset = (per_page * (page - 1)).to_i64\nchange!\n"}},{"id":"per_page-instance-method","html_id":"per_page-instance-method","name":"per_page","doc":"Return the number of items maximum per page.","summary":"<p>Return the number of items maximum per page.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L28","def":{"name":"per_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"limit"}},{"id":"previous_page-instance-method","html_id":"previous_page-instance-method","name":"previous_page","doc":"Return `current_page - 1` or `nil` if there is no previous page","summary":"<p>Return <code>current_page - 1</code> or <code>nil</code> if there is no previous page</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L51","def":{"name":"previous_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_page > 1 ? (current_page - 1) : nil"}},{"id":"total_pages-instance-method","html_id":"total_pages-instance-method","name":"total_pages","doc":"Return the total number of pages.","summary":"<p>Return the total number of pages.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/query/with_pagination.cr#L42","def":{"name":"total_pages","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if limit.nil? || total_entries.nil?\n  1\nelse\n  ((total_entries.as(Int64)) / (limit.as(Int64)).to_f).ceil.to_i\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/QueryBuildingError","path":"Clear/SQL/QueryBuildingError.html","kind":"class","full_name":"Clear::SQL::QueryBuildingError","name":"QueryBuildingError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/RecordNotFoundError","path":"Clear/SQL/RecordNotFoundError.html","kind":"class","full_name":"Clear::SQL::RecordNotFoundError","name":"RecordNotFoundError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":10,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/RollbackError","path":"Clear/SQL/RollbackError.html","kind":"class","full_name":"Clear::SQL::RollbackError","name":"RollbackError","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Error","kind":"class","full_name":"Clear::SQL::Error","name":"Error"},{"html_id":"github.com/anykeyh/clear/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/errors.cr","line_number":13,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/errors.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":"Rollback the transaction or the last savepoint.","summary":"<p>Rollback the transaction or the last savepoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Selectable","path":"Clear/SQL/Selectable.html","kind":"alias","full_name":"Clear::SQL::Selectable","name":"Selectable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/sql.cr","line_number":61,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Clear::SQL::SelectBuilder | String | Symbol)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","path":"Clear/SQL/SelectBuilder.html","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","kind":"module","full_name":"Clear::SQL::Query::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select"}],"locations":[{"filename":"clear/sql/select_builder.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","kind":"module","full_name":"Clear::SQL::Query::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/CollectionBase","kind":"class","full_name":"Clear::Model::CollectionBase(T)","name":"CollectionBase"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectQuery","kind":"class","full_name":"Clear::SQL::SelectQuery","name":"SelectQuery"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(distinct_value=nil,cte={}ofString=>Clear::SQL::SelectBuilder|String,columns=[]ofSQL::Column,froms=[]ofSQL::From,joins=[]ofSQL::Join,wheres=[]ofClear::Expression::Node,havings=[]ofClear::Expression::Node,windows=[]of::Tuple(String,String),group_bys=[]ofSymbolic,order_bys=[]ofClear::SQL::Query::OrderBy::Record,limit=nil,offset=nil,lock=nil,before_query_triggers=[]of(->Void))-class-method","html_id":"new(distinct_value=nil,cte={}ofString=&gt;Clear::SQL::SelectBuilder|String,columns=[]ofSQL::Column,froms=[]ofSQL::From,joins=[]ofSQL::Join,wheres=[]ofClear::Expression::Node,havings=[]ofClear::Expression::Node,windows=[]of::Tuple(String,String),group_bys=[]ofSymbolic,order_bys=[]ofClear::SQL::Query::OrderBy::Record,limit=nil,offset=nil,lock=nil,before_query_triggers=[]of(-&gt;Void))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"distinct_value","doc":null,"default_value":"nil","external_name":"distinct_value","restriction":""},{"name":"cte","doc":null,"default_value":"{} of String => Clear::SQL::SelectBuilder | String","external_name":"cte","restriction":""},{"name":"columns","doc":null,"default_value":"[] of SQL::Column","external_name":"columns","restriction":""},{"name":"froms","doc":null,"default_value":"[] of SQL::From","external_name":"froms","restriction":""},{"name":"joins","doc":null,"default_value":"[] of SQL::Join","external_name":"joins","restriction":""},{"name":"wheres","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"wheres","restriction":""},{"name":"havings","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"havings","restriction":""},{"name":"windows","doc":null,"default_value":"[] of ::Tuple(String, String)","external_name":"windows","restriction":""},{"name":"group_bys","doc":null,"default_value":"[] of Symbolic","external_name":"group_bys","restriction":""},{"name":"order_bys","doc":null,"default_value":"[] of Clear::SQL::Query::OrderBy::Record","external_name":"order_bys","restriction":""},{"name":"limit","doc":null,"default_value":"nil","external_name":"limit","restriction":""},{"name":"offset","doc":null,"default_value":"nil","external_name":"offset","restriction":""},{"name":"lock","doc":null,"default_value":"nil","external_name":"lock","restriction":""},{"name":"before_query_triggers","doc":null,"default_value":"[] of (-> Void)","external_name":"before_query_triggers","restriction":""}],"args_string":"(distinct_value = <span class=\"n\">nil</span>, cte = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">Clear</span><span class=\"t\">::</span><span class=\"t\">SQL</span><span class=\"t\">::</span><span class=\"t\">SelectBuilder</span> <span class=\"o\">|</span> <span class=\"t\">String</span>, columns = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">SQL</span><span class=\"t\">::</span><span class=\"t\">Column</span>, froms = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">SQL</span><span class=\"t\">::</span><span class=\"t\">From</span>, joins = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">SQL</span><span class=\"t\">::</span><span class=\"t\">Join</span>, wheres = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Clear</span><span class=\"t\">::</span><span class=\"t\">Expression</span><span class=\"t\">::</span><span class=\"t\">Node</span>, havings = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Clear</span><span class=\"t\">::</span><span class=\"t\">Expression</span><span class=\"t\">::</span><span class=\"t\">Node</span>, windows = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">Tuple</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>), group_bys = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbolic</span>, order_bys = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Clear</span><span class=\"t\">::</span><span class=\"t\">SQL</span><span class=\"t\">::</span><span class=\"t\">Query</span><span class=\"t\">::</span><span class=\"t\">OrderBy</span><span class=\"t\">::</span><span class=\"t\">Record</span>, limit = <span class=\"n\">nil</span>, offset = <span class=\"n\">nil</span>, lock = <span class=\"n\">nil</span>, before_query_triggers = <span class=\"o\">[]</span> <span class=\"k\">of</span> (-> <span class=\"t\">Void</span>))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L31","def":{"name":"new","args":[{"name":"distinct_value","doc":null,"default_value":"nil","external_name":"distinct_value","restriction":""},{"name":"cte","doc":null,"default_value":"{} of String => Clear::SQL::SelectBuilder | String","external_name":"cte","restriction":""},{"name":"columns","doc":null,"default_value":"[] of SQL::Column","external_name":"columns","restriction":""},{"name":"froms","doc":null,"default_value":"[] of SQL::From","external_name":"froms","restriction":""},{"name":"joins","doc":null,"default_value":"[] of SQL::Join","external_name":"joins","restriction":""},{"name":"wheres","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"wheres","restriction":""},{"name":"havings","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"havings","restriction":""},{"name":"windows","doc":null,"default_value":"[] of ::Tuple(String, String)","external_name":"windows","restriction":""},{"name":"group_bys","doc":null,"default_value":"[] of Symbolic","external_name":"group_bys","restriction":""},{"name":"order_bys","doc":null,"default_value":"[] of Clear::SQL::Query::OrderBy::Record","external_name":"order_bys","restriction":""},{"name":"limit","doc":null,"default_value":"nil","external_name":"limit","restriction":""},{"name":"offset","doc":null,"default_value":"nil","external_name":"offset","restriction":""},{"name":"lock","doc":null,"default_value":"nil","external_name":"lock","restriction":""},{"name":"before_query_triggers","doc":null,"default_value":"[] of (-> Void)","external_name":"before_query_triggers","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(distinct_value, cte, columns, froms, joins, wheres, havings, windows, group_bys, order_bys, limit, offset, lock, before_query_triggers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"before_query(&block:->Void)-instance-method","html_id":"before_query(&amp;block:-&gt;Void)-instance-method","name":"before_query","doc":"A hook to apply some operation just before the query is executed.\n\n```crystal\n call = 0\n req = Clear::SQL.select(\"1\").before_query{ call += 1 }\n 10.times{ req.execute }\n pp call # 10\n```","summary":"<p>A hook to apply some operation just before the query is executed.</p>","abstract":false,"args":[],"args_string":"(&block :  -> Void)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L28","def":{"name":"before_query","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> Void)"},"return_type":"","visibility":"Public","body":"@before_query_triggers << block"}},{"id":"columns:Array(SQL::Column)-instance-method","html_id":"columns:Array(SQL::Column)-instance-method","name":"columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(SQL::Column)","source_link":null,"def":{"name":"columns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SQL::Column)","visibility":"Public","body":"@columns"}},{"id":"dup:self-instance-method","html_id":"dup:self-instance-method","name":"dup","doc":"Duplicate the query","summary":"<p>Duplicate the query</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L48","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.class.new(distinct_value: @distinct_value, cte: @cte.dup, columns: @columns.dup, froms: @froms.dup, joins: @joins.dup, wheres: @wheres.dup, havings: @havings.dup, windows: @windows.dup, group_bys: @group_bys.dup, order_bys: @order_bys.dup, limit: @limit, offset: @offset, lock: @lock, before_query_triggers: @before_query_triggers).use_connection(self.connection_name)"}},{"id":"havings:Array(Clear::Expression::Node)-instance-method","html_id":"havings:Array(Clear::Expression::Node)-instance-method","name":"havings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Clear::Expression::Node)","source_link":null,"def":{"name":"havings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Clear::Expression::Node)","visibility":"Public","body":"@havings"}},{"id":"is_distinct?-instance-method","html_id":"is_distinct?-instance-method","name":"is_distinct?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L5","def":{"name":"is_distinct?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!@distinct_value)"}},{"id":"joins:Array(SQL::Join)-instance-method","html_id":"joins:Array(SQL::Join)-instance-method","name":"joins","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(SQL::Join)","source_link":null,"def":{"name":"joins","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SQL::Join)","visibility":"Public","body":"@joins"}},{"id":"limit:Int64?-instance-method","html_id":"limit:Int64?-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":null,"def":{"name":"limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@limit"}},{"id":"lock:String?-instance-method","html_id":"lock:String?-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@lock"}},{"id":"offset:Int64?-instance-method","html_id":"offset:Int64?-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":null,"def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@offset"}},{"id":"order_bys:Array(Record)-instance-method","html_id":"order_bys:Array(Record)-instance-method","name":"order_bys","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Record)","source_link":null,"def":{"name":"order_bys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Record)","visibility":"Public","body":"@order_bys"}},{"id":"to_delete-instance-method","html_id":"to_delete-instance-method","name":"to_delete","doc":"Construct a delete query from this select query.\nIt uses only the `from` and the `where` clause fo the current select request.\nCan be useful in some case, but\n  use at your own risk !","summary":"<p>Construct a delete query from this select query.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L85","def":{"name":"to_delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @froms.size == 1\nelse\n  raise(QueryBuildingError.new(\"Cannot build a delete query \" + \"from a select with multiple or none `from` clauses\"))\nend\nv = @froms[0].value\nif v.is_a?(SelectBuilder)\n  raise(QueryBuildingError.new(\"Cannot delete from a select with sub-select as `from` clause\"))\nend\nDeleteQuery.new(from: v.dup, wheres: @wheres.dup)\n"}},{"id":"to_sql:String-instance-method","html_id":"to_sql:String-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L67","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"[print_ctes, print_select, print_froms, print_joins, print_wheres, print_havings, print_windows, print_group_bys, print_order_bys, print_limit_offsets, print_lock].compact.reject(&.empty?).join(\" \")"}},{"id":"to_update-instance-method","html_id":"to_update-instance-method","name":"to_update","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_builder.cr#L96","def":{"name":"to_update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @froms.size == 1\nelse\n  raise(QueryBuildingError.new(\"Cannot build a update query \" + \"from a select with multiple or none `from` clauses\"))\nend\nv = @froms[0].value\nif v.is_a?(SelectBuilder)\n  raise(QueryBuildingError.new(\"Cannot delete from a select with sub-select as `from` clause\"))\nend\nUpdateQuery.new(table: v.dup, wheres: @wheres.dup)\n"}},{"id":"total_entries:Int64?-instance-method","html_id":"total_entries:Int64?-instance-method","name":"total_entries","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":null,"def":{"name":"total_entries","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"@total_entries"}},{"id":"total_entries=(total_entries:Int64?)-instance-method","html_id":"total_entries=(total_entries:Int64?)-instance-method","name":"total_entries=","doc":null,"summary":null,"abstract":false,"args":[{"name":"total_entries","doc":null,"default_value":"","external_name":"total_entries","restriction":"Int64 | ::Nil"}],"args_string":"(total_entries : Int64?)","source_link":null,"def":{"name":"total_entries=","args":[{"name":"total_entries","doc":null,"default_value":"","external_name":"total_entries","restriction":"Int64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@total_entries = total_entries"}},{"id":"wheres:Array(Clear::Expression::Node)-instance-method","html_id":"wheres:Array(Clear::Expression::Node)-instance-method","name":"wheres","doc":"Return the list of where clause; each where clause are transformed into\nClear::Expression::Node","summary":"<p>Return the list of where clause; each where clause are transformed into Clear::Expression::Node</p>","abstract":false,"args":[],"args_string":" : Array(Clear::Expression::Node)","source_link":null,"def":{"name":"wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Clear::Expression::Node)","visibility":"Public","body":"@wheres"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectQuery","path":"Clear/SQL/SelectQuery.html","kind":"class","full_name":"Clear::SQL::SelectQuery","name":"SelectQuery","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/WithPagination","kind":"module","full_name":"Clear::SQL::Query::WithPagination","name":"WithPagination"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/BeforeQuery","kind":"module","full_name":"Clear::SQL::Query::BeforeQuery","name":"BeforeQuery"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Pluck","kind":"module","full_name":"Clear::SQL::Query::Pluck","name":"Pluck"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Fetch","kind":"module","full_name":"Clear::SQL::Query::Fetch","name":"Fetch"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Lock","kind":"module","full_name":"Clear::SQL::Query::Lock","name":"Lock"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Window","kind":"module","full_name":"Clear::SQL::Query::Window","name":"Window"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Aggregate","kind":"module","full_name":"Clear::SQL::Query::Aggregate","name":"Aggregate"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OffsetLimit","kind":"module","full_name":"Clear::SQL::Query::OffsetLimit","name":"OffsetLimit"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/GroupBy","kind":"module","full_name":"Clear::SQL::Query::GroupBy","name":"GroupBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/OrderBy","kind":"module","full_name":"Clear::SQL::Query::OrderBy","name":"OrderBy"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Having","kind":"module","full_name":"Clear::SQL::Query::Having","name":"Having"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Join","kind":"module","full_name":"Clear::SQL::Query::Join","name":"Join"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/From","kind":"module","full_name":"Clear::SQL::Query::From","name":"From"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Select","kind":"module","full_name":"Clear::SQL::Query::Select","name":"Select"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/select_query.cr","line_number":25,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/SelectBuilder","kind":"module","full_name":"Clear::SQL::SelectBuilder","name":"SelectBuilder"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":"A Select Query builder\n\nPostgres documentation:\n\n```\n[ WITH [ RECURSIVE ] with_query [, ...] ]\nSELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]\n    [ * | expression [ [ AS ] output_name ] [, ...] ]\n    [ FROM from_item [, ...] ]\n    [ WHERE condition ]\n    [ GROUP BY grouping_element [, ...] ]\n    [ HAVING condition [, ...] ]\n    [ WINDOW window_name AS ( window_definition ) [, ...] ]\n    [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]\n    [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]\n    [ LIMIT { count | ALL } ]\n    [ OFFSET start [ ROW | ROWS ] ]\n    [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } ONLY ]\n    [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]\n```","summary":"<p>A Select Query builder</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"each(&block)-instance-method","html_id":"each(&amp;block)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/select_query.cr#L29","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch do |h|\n  yield h\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Symbolic","path":"Clear/SQL/Symbolic.html","kind":"alias","full_name":"Clear::SQL::Symbolic","name":"Symbolic","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/sql.cr","line_number":60,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/sql.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","path":"Clear/SQL/UpdateQuery.html","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/sql/update_query.cr","line_number":6,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Change","kind":"module","full_name":"Clear::SQL::Query::Change","name":"Change"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Connection","kind":"module","full_name":"Clear::SQL::Query::Connection","name":"Connection"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/CTE","kind":"module","full_name":"Clear::SQL::Query::CTE","name":"CTE"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Execute","kind":"module","full_name":"Clear::SQL::Query::Execute","name":"Execute"},{"html_id":"github.com/anykeyh/clear/Clear/SQL/Query/Where","kind":"module","full_name":"Clear::SQL::Query::Where","name":"Where"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL","kind":"module","full_name":"Clear::SQL","name":"SQL"},"doc":"TODO: Documentation","summary":"<p><span class=\"flag orange\">TODO</span>  Documentation</p>","class_methods":[],"constructors":[{"id":"new(table,wheres=[]ofClear::Expression::Node)-class-method","html_id":"new(table,wheres=[]ofClear::Expression::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"wheres","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"wheres","restriction":""}],"args_string":"(table, wheres = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Clear</span><span class=\"t\">::</span><span class=\"t\">Expression</span><span class=\"t\">::</span><span class=\"t\">Node</span>)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr#L19","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":""},{"name":"wheres","doc":null,"default_value":"[] of Clear::Expression::Node","external_name":"wheres","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, wheres)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"set(row:NamedTuple)-instance-method","html_id":"set(row:NamedTuple)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"NamedTuple"}],"args_string":"(row : NamedTuple)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr#L22","def":{"name":"set","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"h = {} of String => Updatable\nrow.each do |k, v|\n  h[k.to_s] = v\nend\nset(h)\nchange!\n"}},{"id":"set(row:String)-instance-method","html_id":"set(row:String)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"String"}],"args_string":"(row : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr#L33","def":{"name":"set","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values << row\nchange!\n"}},{"id":"set(row:Hash(String,Updatable))-instance-method","html_id":"set(row:Hash(String,Updatable))-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Hash(String, Updatable)"}],"args_string":"(row : Hash(String, Updatable))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr#L38","def":{"name":"set","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":"Hash(String, Updatable)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values << (Hash(String, Updatable).new.merge(row))\nchange!\n"}},{"id":"set(**row)-instance-method","html_id":"set(**row)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**row)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr#L29","def":{"name":"set","args":[],"double_splat":{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(row)"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr#L62","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table = @table.is_a?(Symbol) ? SQL.escape(@table.to_s) : @table\n[print_ctes, \"UPDATE\", table, \"SET\", print_values, print_wheres].compact.join(\" \")\n"}},{"id":"wheres:Array(Clear::Expression::Node)-instance-method","html_id":"wheres:Array(Clear::Expression::Node)-instance-method","name":"wheres","doc":"Return the list of where clause; each where clause are transformed into\nClear::Expression::Node","summary":"<p>Return the list of where clause; each where clause are transformed into Clear::Expression::Node</p>","abstract":false,"args":[],"args_string":" : Array(Clear::Expression::Node)","source_link":null,"def":{"name":"wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Clear::Expression::Node)","visibility":"Public","body":"@wheres"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery/Updatable","path":"Clear/SQL/UpdateQuery/Updatable.html","kind":"alias","full_name":"Clear::SQL::UpdateQuery::Updatable","name":"Updatable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/update_query.cr","line_number":7,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Array(JSON::Any) | Array(PG::BoolArray) | Array(PG::CharArray) | Array(PG::Float32Array) | Array(PG::Float64Array) | Array(PG::Int16Array) | Array(PG::Int32Array) | Array(PG::Int64Array) | Array(PG::StringArray) | BigFloat | BigInt | Bool | Char | Clear::Expression::UnsafeSql | Float32 | Float64 | Hash(String, JSON::Any) | Int16 | Int32 | Int64 | Int8 | JSON::Any | PG::Geo::Box | PG::Geo::Circle | PG::Geo::Line | PG::Geo::LineSegment | PG::Geo::Path | PG::Geo::Point | PG::Geo::Polygon | PG::Numeric | Slice(UInt8) | String | Time | UInt16 | UInt32 | UInt64 | UInt8 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery/UpdateInstruction","path":"Clear/SQL/UpdateQuery/UpdateInstruction.html","kind":"alias","full_name":"Clear::SQL::UpdateQuery::UpdateInstruction","name":"UpdateInstruction","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/sql/update_query.cr","line_number":8,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/sql/update_query.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":true,"aliased":"(Hash(String, Array(JSON::Any) | Array(PG::BoolArray) | Array(PG::CharArray) | Array(PG::Float32Array) | Array(PG::Float64Array) | Array(PG::Int16Array) | Array(PG::Int32Array) | Array(PG::Int64Array) | Array(PG::StringArray) | BigFloat | BigInt | Bool | Char | Clear::Expression::UnsafeSql | Float32 | Float64 | Hash(String, JSON::Any) | Int16 | Int32 | Int64 | Int8 | JSON::Any | PG::Geo::Box | PG::Geo::Circle | PG::Geo::Line | PG::Geo::LineSegment | PG::Geo::Path | PG::Geo::Point | PG::Geo::Polygon | PG::Numeric | Slice(UInt8) | String | Time | UInt16 | UInt32 | UInt64 | UInt8 | Nil) | String)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/SQL/UpdateQuery","kind":"class","full_name":"Clear::SQL::UpdateQuery","name":"UpdateQuery"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/anykeyh/clear/Clear/TSVector","path":"Clear/TSVector.html","kind":"class","full_name":"Clear::TSVector","name":"TSVector","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/full_text_searchable/tsvector.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":null,"summary":null,"class_methods":[{"id":"decode(x:Slice(UInt8))-class-method","html_id":"decode(x:Slice(UInt8))-class-method","name":"decode","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Slice(UInt8)"}],"args_string":"(x : Slice(UInt8))","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L70","def":{"name":"decode","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Slice(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new(x, writeable: false)\nClear::TSVector.new(io)\n"}}],"constructors":[{"id":"new(io)-class-method","html_id":"new(io)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L56","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](key:String)-instance-method","html_id":"[](key:String)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L39","def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lexems[key]"}},{"id":"[]?(key:String)-instance-method","html_id":"[]?(key:String)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L43","def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lexems[key]?"}},{"id":"lexems:Hash(String,Lexem)-instance-method","html_id":"lexems:Hash(String,Lexem)-instance-method","name":"lexems","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Lexem)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L39","def":{"name":"lexems","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Lexem)","visibility":"Public","body":"@lexems"}},{"id":"to_db-instance-method","html_id":"to_db-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L47","def":{"name":"to_db","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lexems.values.map do |v|\n  {Clear::Expression[v.value], v.positions.map do |p|\n    {p.position, p.weight}.join\n  end.join(\",\")}.join(\":\")\nend.join(\" \")"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/TSVector/Converter","path":"Clear/TSVector/Converter.html","kind":"module","full_name":"Clear::TSVector::Converter","name":"Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/extensions/full_text_searchable/tsvector.cr","line_number":75,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/TSVector","kind":"class","full_name":"Clear::TSVector","name":"TSVector"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):Clear::TSVector?-class-method","html_id":"to_column(x):Clear::TSVector?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : Clear::TSVector?","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L76","def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clear::TSVector | ::Nil","visibility":"Public","body":"case x\nwhen Slice\n  Clear::TSVector.decode(x.as(Slice(UInt8)))\nwhen Clear::TSVector\n  x\nwhen Nil\n  nil\nelse\n  raise(Clear::ErrorMessages.converter_error(x.class, \"TSVector\"))\nend"}},{"id":"to_db(x:TSVector?)-class-method","html_id":"to_db(x:TSVector?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"TSVector | ::Nil"}],"args_string":"(x : TSVector?)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L89","def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"TSVector | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (x)\n  x.to_db\nelse\n  nil\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/TSVector/Lexem","path":"Clear/TSVector/Lexem.html","kind":"struct","full_name":"Clear::TSVector::Lexem","name":"Lexem","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/full_text_searchable/tsvector.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"WEIGHTS","name":"WEIGHTS","value":"['A', 'B', 'C', 'D']","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/TSVector","kind":"class","full_name":"Clear::TSVector","name":"TSVector"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(io)-class-method","html_id":"new(io)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L10","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"positions:Array(Position)-instance-method","html_id":"positions:Array(Position)-instance-method","name":"positions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Position)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L8","def":{"name":"positions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Position)","visibility":"Public","body":"@positions"}},{"id":"value:String-instance-method","html_id":"value:String-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L7","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@value"}}],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/TSVector/Lexem/Position","path":"Clear/TSVector/Lexem/Position.html","kind":"struct","full_name":"Clear::TSVector::Lexem::Position","name":"Position","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/full_text_searchable/tsvector.cr","line_number":3,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/TSVector/Lexem","kind":"struct","full_name":"Clear::TSVector::Lexem","name":"Lexem"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(weight:Char,position:UInt16)-class-method","html_id":"new(weight:Char,position:UInt16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Char"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"UInt16"}],"args_string":"(weight : Char, position : UInt16)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L3","def":{"name":"new","args":[{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Char"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(weight, position)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L3","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Position.new(@weight.clone, @position.clone)"}},{"id":"copy_with(weight_weight=@weight,position_position=@position)-instance-method","html_id":"copy_with(weight_weight=@weight,position_position=@position)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_weight","doc":null,"default_value":"@weight","external_name":"weight","restriction":""},{"name":"_position","doc":null,"default_value":"@position","external_name":"position","restriction":""}],"args_string":"(weight _weight = @weight, position _position = @position)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/full_text_searchable/tsvector.cr#L3","def":{"name":"copy_with","args":[{"name":"_weight","doc":null,"default_value":"@weight","external_name":"weight","restriction":""},{"name":"_position","doc":null,"default_value":"@position","external_name":"position","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Position.new(_weight, _position)"}},{"id":"position:UInt16-instance-method","html_id":"position:UInt16-instance-method","name":"position","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","source_link":null,"def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@position"}},{"id":"weight:Char-instance-method","html_id":"weight:Char-instance-method","name":"weight","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Char","source_link":null,"def":{"name":"weight","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":"@weight"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/anykeyh/clear/Clear/Util","path":"Clear/Util.html","kind":"module","full_name":"Clear::Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/util.cr","line_number":2,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/util.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Util","kind":"module","full_name":"Clear::Util","name":"Util"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"A set of method(s) useful for building Clear ORM.","summary":"<p>A set of method(s) useful for building Clear ORM.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"hash_union(h1:Hash(A,B),h2:Hash(C,D))forallA,B,C,D-instance-method","html_id":"hash_union(h1:Hash(A,B),h2:Hash(C,D))forallA,B,C,D-instance-method","name":"hash_union","doc":"Return a new hash which is union of two hash (some kind of deep merge)","summary":"<p>Return a new hash which is union of two hash (some kind of deep merge)</p>","abstract":false,"args":[{"name":"h1","doc":null,"default_value":"","external_name":"h1","restriction":"Hash(A, B)"},{"name":"h2","doc":null,"default_value":"","external_name":"h2","restriction":"Hash(C, D)"}],"args_string":"(h1 : Hash(A, B), h2 : Hash(C, D)) forall A, B, C, D","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/util.cr#L12","def":{"name":"hash_union","args":[{"name":"h1","doc":null,"default_value":"","external_name":"h1","restriction":"Hash(A, B)"},{"name":"h2","doc":null,"default_value":"","external_name":"h2","restriction":"Hash(C, D)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o = Hash(A | C, B | D).new\nh1.each do |k, v|\n  o[k] = v\nend\nh2.each do |k, v|\n  case v\n  when Hash\n    if (    v1 = o[k]).is_a?(Hash)\n      o[k] = hash_union(v1, v)\n    else\n      o[k] = v\n    end\n  else\n    o[k] = v\n  end\nend\no\n"}},{"id":"lambda(u:U.class,v:V.class,&block:U->V)forallU,V-instance-method","html_id":"lambda(u:U.class,v:V.class,&amp;block:U-&gt;V)forallU,V-instance-method","name":"lambda","doc":"Equivalent to ruby's lambda with one parameter.\nThis method is useful combined with the macro system of Crystal.","summary":"<p>Equivalent to ruby's lambda with one parameter.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"U.class"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V.class"}],"args_string":"(u : <span class=\"t\">U</span>.<span class=\"k\">class</span>, v : <span class=\"t\">V</span>.<span class=\"k\">class</span>, &block : U -> V) forall U, V","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/util.cr#L7","def":{"name":"lambda","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"U.class"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V.class"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(U -> V)"},"return_type":"","visibility":"Public","body":"block"}}],"macros":[],"types":[]},{"html_id":"github.com/anykeyh/clear/Clear/Validation","path":"Clear/Validation.html","kind":"module","full_name":"Clear::Validation","name":"Validation","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/validation/helper.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/validation/helper.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/anykeyh/clear/Clear/Validation/Helper","path":"Clear/Validation/Helper.html","kind":"module","full_name":"Clear::Validation::Helper","name":"Helper","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"clear/model/validation/helper.cr","line_number":1,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/validation/helper.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/anykeyh/clear/Clear/Model/HasValidation","kind":"module","full_name":"Clear::Model::HasValidation","name":"HasValidation"}],"namespace":{"html_id":"github.com/anykeyh/clear/Clear/Validation","kind":"module","full_name":"Clear::Validation","name":"Validation"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"ensure_than(field,message,&block)-macro","html_id":"ensure_than(field,message,&amp;block)-macro","name":"ensure_than","doc":"Usage example:\n\n```crystal\nensure_than email, \"must be an email\" do |v|\n  EmailRegexp.valid?(v)\nend\n```","summary":"<p>Usage example:</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"args_string":"(field, message, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/validation/helper.cr#L15","def":{"name":"ensure_than","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    if \n{{ field.id }}\n_column.defined?\n      o = \n{{ field.id }}\n\n\n      fn = Clear::Util.lambda(typeof(o), Object) \n{{ block }}\n\n\n      unless fn.call(o)\n        add_error(\n{{ field.stringify }}\n, \n{{ message }}\n)\n      \nend\n    \nend\n\n  \n"}},{"id":"on_presence(*fields,&block)-macro","html_id":"on_presence(*fields,&amp;block)-macro","name":"on_presence","doc":null,"summary":null,"abstract":false,"args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""}],"args_string":"(*fields, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/model/validation/helper.cr#L2","def":{"name":"on_presence","args":[{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"    if \n{{ (fields.map do |x|\n  \"self.#{x.id}_column.defined?\"\nend.join(\" && \")).id }}\n\n      \n{{ yield }}\n\n    \nend\n  \n"}}],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Clear/View","path":"Clear/View.html","kind":"module","full_name":"Clear::View","name":"View","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns"}],"locations":[{"filename":"clear/views/view.cr","line_number":13,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/views/view.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Clear/Model/ClassMethods","kind":"module","full_name":"Clear::Model::ClassMethods","name":"ClassMethods"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasColumns","kind":"module","full_name":"Clear::Model::HasColumns","name":"HasColumns"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasRelations","kind":"module","full_name":"Clear::Model::HasRelations","name":"HasRelations"},{"html_id":"github.com/anykeyh/clear/Clear/Model/HasScope","kind":"module","full_name":"Clear::Model::HasScope","name":"HasScope"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/anykeyh/clear/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":"A view is like a read-only model.\nIt has columns and relations\nIt is automatically updated on migration by the migration manager\n```crystal\nclass MyView\n  define <<-SQL\n    SELECT * FROM users, other_views\n  SQL\n\n  depends_of OtherViews\nend\n```","summary":"<p>A view is like a read-only model.</p>","class_methods":[{"id":"define(x)-class-method","html_id":"define(x)-class-method","name":"define","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/views/view.cr#L18","def":{"name":"define","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case x\nwhen String\n  @@sql = x\nwhen Clear::SQLBuilder\n  @@sql = x.to_sql\nend"}},{"id":"depends_of(x:Class(T))forallT-class-method","html_id":"depends_of(x:Class(T))forallT-class-method","name":"depends_of","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Class(T)"}],"args_string":"(x : Class(T)) forall T","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/views/view.cr#L14","def":{"name":"depends_of","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Class(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@dependancies << x"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"scope(name,&block)-macro","html_id":"scope(name,&amp;block)-macro","name":"scope","doc":"A scope allow you to filter in a very human way a set of data.\n\nUsage:\n\n```\n scope(\"admin\"){ where({role: \"admin\"}) }\n```\n\nfor example, instead of writing:\n\n```\n  User.query.where{ (role == \"admin\") & (active == true) }\n```\n\nYou can write:\n\n```\n  User.admin.active\n```\n\nScope can be used for other purpose than just filter (e.g. ordering),\nbut I would not recommend it.","summary":"<p>A scope allow you to filter in a very human way a set of data.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name, &block)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/views/view.cr#L29","def":{"name":"scope","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% parameters = \"\" %}\n\n      \n{% for arg, idx in block.args %}\n        {% if (block.splat_index && (idx == block.splat_index))\n  parameters = parameters + \"*\"\nend %}\n        {% parameters = parameters + \"#{arg}\" %}\n        {% unless (idx == (block.args.size - 1))\n  parameters = parameters + \", \"\nend %}\n      {% end %}\n\n      \n{% parameters = parameters.id %}\n\n\n      def self.\n{{ name.id }}\n(\n{{ parameters }}\n)\n        query.\n{{ name.id }}\n(\n{{ parameters }}\n)\n      \nend\n\n      class Collection < Clear::Model::CollectionBase(\n{{ @type }}\n);\n        def \n{{ name.id }}\n(\n{{ parameters }}\n)\n          \n{{ yield }}\n\n\n          return self\n        \nend\n      \nend\n    \n"}}],"types":[]}]},{"html_id":"github.com/anykeyh/clear/Slice","path":"Slice.html","kind":"struct","full_name":"Slice(T)","name":"Slice","abstract":false,"superclass":{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/anykeyh/clear/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/anykeyh/clear/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/anykeyh/clear/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/anykeyh/clear/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/anykeyh/clear/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/anykeyh/clear/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clear/extensions/core_ext.cr","line_number":90,"url":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/core_ext.cr"}],"repository_name":"github.com/anykeyh/clear","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/anykeyh/clear/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Slice` is a `Pointer` with an associated size.\n\nWhile a pointer is unsafe because no bound checks are performed when reading from and writing to it,\nreading from and writing to a slice involve bound checks.\nIn this way, a slice is a safe alternative to `Pointer`.\n\nA Slice can be created as read-only: trying to write to it\nwill raise. For example the slice of bytes returned by\n`String#to_slice` is read-only.","summary":"<p>A <code><a href=\"Slice.html\">Slice</a></code> is a <code>Pointer</code> with an associated size.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_json(json)-instance-method","html_id":"to_json(json)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":""}],"args_string":"(json)","source_link":"https://github.com/anykeyh/clear/blob/cf453dde31a68e59345d9aaf9f7a95dd9c986d9f/src/clear/extensions/core_ext.cr#L91","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s = String::Builder.new\nto_s(s)\njson.string(Base64.strict_encode(s.to_s))\n"}}],"macros":[],"types":[]}]}}